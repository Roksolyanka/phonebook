{"version":3,"file":"static/js/983.57afd847.chunk.js","mappings":"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","sources":["ui/ErrorInputMessageUi.styled.js","components/Input/Input.jsx","pages/LoginPage/Login.jsx","schemas/index.js","ui/InputUi.styled.js","ui/ModalUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorInputMessageUi = styled.p`\n  color: #8b2605;\n  font-family: Roboto;\n  font-size: 14px;\n  //   font-weight: 400;\n  line-height: 1.17;\n  margin: 0;\n  text-shadow: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ErrorInputMessageUi } from 'ui/ErrorInputMessageUi.styled';\n\nexport const InputComponent = ({\n  label,\n  name,\n  type,\n  placeholder,\n  value,\n  onChange,\n  onBlur,\n  required,\n  autoComplete,\n  wrapperStyle,\n  inputStyle,\n  className,\n  formik,\n}) => {\n  const Wrapper = wrapperStyle;\n  const Input = inputStyle;\n  const htmlFor = `input-${name}`;\n  return (\n    <Wrapper>\n      <label htmlFor={htmlFor}>{label}</label>\n      <Input\n        id={htmlFor}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        required={required}\n        autoComplete={autoComplete}\n        className={className}\n      />\n      {formik && formik.touched[name] && formik.errors[name] && (\n        <ErrorInputMessageUi>{formik.errors[name]}</ErrorInputMessageUi>\n      )}\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  required: PropTypes.bool,\n  autoComplete: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n  className: PropTypes.string,\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n    handleChange: PropTypes.func,\n    handleBlur: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loginUserThunk } from 'redux/operations';\nimport { selectAuthentificated } from 'redux/selectors';\n\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport {\n  ModalBackdropUi,\n  ModalBoxUi,\n  ModalFormUi,\n  ModalInputUi,\n  ModalSecondWrapperUi,\n  ModalTitleUi,\n} from 'ui/ModalUi.styled';\nimport { InputComponent } from 'components/Input/Input';\nimport { useFormik } from 'formik';\nimport { loginSchema } from 'schemas';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const email = formik.values.email.trim();\n    const password = formik.values.password.trim();\n\n    dispatch(loginUserThunk({ email, password }));\n  };\n\n  const isFormValid = () => {\n    return (\n      Object.keys(formik.errors).length === 0 &&\n      Object.keys(formik.touched).length > 0\n    );\n  };\n\n  if (authentificated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <ModalBackdropUi>\n      <ModalBoxUi>\n        <ModalTitleUi>Login Into Your Account</ModalTitleUi>\n        <ModalFormUi onSubmit={handleSubmit}>\n          <InputComponent\n            label=\"Email:\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Enter email\"\n            autoComplete=\"email\"\n            required\n            wrapperStyle={ModalSecondWrapperUi}\n            inputStyle={ModalInputUi}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            formik={formik}\n            className={\n              formik.errors.email && formik.touched.email ? 'input-error' : ''\n            }\n          />\n          <br />\n          <InputComponent\n            label=\"Password:\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter password\"\n            autoComplete=\"current-password\"\n            required\n            wrapperStyle={ModalSecondWrapperUi}\n            inputStyle={ModalInputUi}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            formik={formik}\n            className={\n              formik.errors.password && formik.touched.password\n                ? 'input-error'\n                : ''\n            }\n          />\n          <ButtonUi\n            disabled={!isFormValid() || formik.isSubmitting}\n            type=\"submit\"\n          >\n            Sign in\n          </ButtonUi>\n        </ModalFormUi>\n      </ModalBoxUi>\n    </ModalBackdropUi>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n// min 6 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\nconst emailRules =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().min(2).required('required field'),\n  email: yup\n    .string()\n    .email('This is an ERROR email')\n    .matches(emailRules)\n    .required('required field'),\n  password: yup\n    .string()\n    .min(6)\n    .matches(passwordRules, {\n      message:\n        'Password should contain 1 upper case letter, 1 lower case letter, 1 numeric digit.',\n    })\n    .required('required field'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('This is an ERROR email')\n    .required('required field'),\n  password: yup.string().required('required field'),\n});\n\nexport const contactSchema = yup.object().shape({\n  contactName: yup\n    .string()\n    .min(3, 'The name must be at least 3 characters.')\n    .max(22, 'The name must be 22 characters or less.')\n    .required('The name is required.'),\n  contactNumber: yup\n    .string()\n    .max(20, 'The phone number must be 20 characters or less.')\n    .matches(/^(?:\\+\\d|[\\d\\s\\-./()]){10,20}$/, 'Invalid number.')\n    .nullable()\n    .transform(v => (v === '' ? null : v)),\n});\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  box-sizing: border-box;\n  height: 50px;\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  padding: 8px 15px;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import styled from 'styled-components';\nimport { InputUi } from './InputUi.styled';\nimport { BoxUi } from './BoxUi.styled';\n\nexport const ModalBackdropUi = styled(BoxUi)`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px 20px 20px 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n\nexport const ModalSecondWrapperUi = styled.div`\n  display: grid;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const ModalInputUi = styled(InputUi)`\n  width: 100%;\n`;\n"],"names":["ErrorInputMessageUi","styled","InputComponent","label","name","type","placeholder","value","onChange","onBlur","required","autoComplete","wrapperStyle","inputStyle","className","formik","Wrapper","Input","htmlFor","id","touched","errors","dispatch","useDispatch","authentificated","useSelector","selectAuthentificated","useFormik","initialValues","email","password","validationSchema","loginSchema","to","onSubmit","event","preventDefault","values","trim","loginUserThunk","ModalSecondWrapperUi","ModalInputUi","handleChange","handleBlur","disabled","Object","keys","length","isSubmitting","registerSchema","yup","shape","min","matches","message","contactName","max","contactNumber","nullable","transform","v","InputUi","theme","colors","secondaryColor","accentColor","ModalBackdropUi","BoxUi","backdropColor","ModalBoxUi","backgroundColor","ModalTitleUi","textShadowColor","ModalFormUi"],"sourceRoot":""}