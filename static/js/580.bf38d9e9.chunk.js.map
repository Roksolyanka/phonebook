{"version":3,"file":"static/js/580.bf38d9e9.chunk.js","mappings":"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","sources":["components/App/App.styled.js","assets/sprite.svg","components/Icon/index.jsx","ui/ErrorInputMessageUi.styled.js","components/Input/styled.js","components/Input/index.jsx","components/ContactForm/styled.js","components/ContactForm/index.jsx","components/ModalDelete/styled.js","components/Modal/styled.js","components/Modal/index.jsx","components/ModalDelete/index.jsx","components/ContactItem/styled.js","components/ContactItem/index.jsx","components/ContactList/styled.js","components/ContactList/index.jsx","ui/InputUi.styled.js","components/Filter/styled.js","components/Filter/index.jsx","pages/ContactsPage/styled.js","pages/ContactsPage/index.jsx","ui/ModalUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n  box-shadow: ${({ theme }) => `${theme.colors.accentColor} 0px 20px 30px,\n    ${theme.colors.accentColor} 0px 2px 5px`};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.tablet}) {\n    font-size: 50px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    font-size: 70px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.desktop}) {\n    font-size: 100px;\n  }\n`;\n","var _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-phone\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 20c-2 2-2 4-4 4s-4-2-6-4-4-4-4-6 2-2 4-4-4-8-6-8-6 6-6 6c0 4 4.109 12.109 8 16s12 8 16 8c0 0 6-4 6-6s-6-8-8-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-delete\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1zM11 28c0.552 0 1-0.447 1-1v-14c0-0.553-0.448-1-1-1s-1 0.447-1 1v14c0 0.553 0.448 1 1 1zM29 6h-4v-2c0-2.209-1.791-4-4-4h-10c-2.209 0-4 1.791-4 4v2h-4l-3 3c0 0.553 0.448 1 1 1h3v20c0 1.104 0.896 2 2 2h20c1.104 0 2-0.896 2-2v-20h3c0.553 0 1-0.447 1-1l-3-3zM10 4c0-1.104 0.896-2 2-2h8c1.104 0 2 0.896 2 2v2h-12v-2zM26 29c0 0.553-0.447 1-1 1h-18c-0.552 0-1-0.447-1-1v-19h20v19zM16 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye-blocked\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.561 0.439c-0.586-0.586-1.535-0.586-2.121 0l-6.318 6.318c-1.623-0.492-3.342-0.757-5.122-0.757-6.979 0-13.028 4.064-16 10 1.285 2.566 3.145 4.782 5.407 6.472l-4.968 4.968c-0.586 0.586-0.586 1.535 0 2.121 0.293 0.293 0.677 0.439 1.061 0.439s0.768-0.146 1.061-0.439l27-27c0.586-0.586 0.586-1.536 0-2.121zM13 10c1.32 0 2.44 0.853 2.841 2.037l-3.804 3.804c-1.184-0.401-2.037-1.521-2.037-2.841 0-1.657 1.343-3 3-3zM3.441 16c1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 1.715 0.54 3.304 1.459 4.607l-1.904 1.904c-1.639-1.151-3.038-2.621-4.114-4.323z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 13.813c0-0.849-0.133-1.667-0.378-2.434l-10.056 10.056c0.768 0.245 1.586 0.378 2.435 0.378 4.418 0 8-3.582 8-8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.938 9.062l-2.168 2.168c0.040 0.025 0.079 0.049 0.118 0.074 1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303-1.208 0-2.403-0.149-3.561-0.439l-2.403 2.403c1.866 0.671 3.873 1.036 5.964 1.036 6.978 0 13.027-4.064 16-10-1.407-2.81-3.504-5.2-6.062-6.938z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 23c0-4.726 2.996-8.765 7.189-10.319 0.509-1.142 0.811-2.411 0.811-3.681 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h12.416c-0.271-0.954-0.416-1.96-0.416-3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 14c-4.971 0-9 4.029-9 9s4.029 9 9 9c4.971 0 9-4.029 9-9s-4.029-9-9-9zM28 24h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.e2b0d0ec6e09344e316d16f4bc0ca3d9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport sprite from '../../assets/sprite.svg';\n\nexport const Icon = ({ name, width, height }) => (\n  <svg width={width} height={height}>\n    <use href={`${sprite}#${name}`} />\n  </svg>\n);\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ErrorInputMessageUi = styled.p`\n  color: ${({ theme }) => theme.colors.errorColor};\n  font-size: 14px;\n  line-height: 1.17;\n  margin: 0;\n  text-shadow: none;\n  position: absolute;\n  top: 110%;\n  left: 0;\n  right: 0;\n  transition: opacity 0.15s ease-out;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const inputPlaceholderCommonStyle = css`\n  font-size: 20px;\n  padding: 0 15px;\n`;\n\nexport const Text = styled.div`\n  background-color: transparent;\n  color: black;\n  transform: translate(0);\n  transition: transform 0.15s ease-out, font-size 0.15s ease-out,\n    background-color 0.2s ease-out, color 0.15s ease-out;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const PlaceholderText = styled.label`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  border: 2px solid transparent;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const Input = styled.input`\n  height: 60px;\n  width: 100%;\n  font-weight: bold;\n  box-sizing: border-box;\n  border: none;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n\n  ${inputPlaceholderCommonStyle}\n\n  &:hover,\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => `${theme.colors.accentColor} 0px 5px 10px,\n      ${theme.colors.accentColor} 0px 2px 5px`};\n    transition: box-shadow 0.3s ease-in-out;\n  }\n\n  &:focus\n    + ${PlaceholderText}\n    ${Text},\n    :not(input[value=''])\n    + ${PlaceholderText}\n    ${Text} {\n    border-radius: 25px;\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.primaryColor};\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n    transform: translate(0, -140%);\n    box-shadow: ${({ theme }) => theme.colors.boxShadowPlaceholder};\n  }\n\n  &:focus + ${PlaceholderText} ${Text} {\n    color: ${({ theme }) => theme.colors.primaryColor};\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 15px;\n`;\n\nexport const Visibility = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n  cursor: pointer;\n\n  svg {\n    width: 25px;\n    height: 25px;\n    fill: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon } from 'components/Icon';\n\nimport { ErrorInputMessageUi } from 'ui/ErrorInputMessageUi.styled';\nimport { Input, PlaceholderText, Text, Visibility, Wrapper } from './styled';\n\nexport const InputComponent = props => {\n  const { label, name, formik, autocomplete } = props;\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n\n  const inputType = isPasswordVisible ? 'text' : 'password';\n  const iconType = isPasswordVisible ? '' : '-blocked';\n  const htmlFor = `input-${name}`;\n\n  return (\n    <Wrapper>\n      <Input\n        id={htmlFor}\n        name={name}\n        type={inputType}\n        autoComplete={autocomplete}\n        {...props}\n      />\n      <PlaceholderText htmlFor={htmlFor}>\n        <Text>{label}</Text>\n      </PlaceholderText>\n      {name === 'password' && (\n        <Visibility onClick={togglePasswordVisibility}>\n          <Icon name={`icon-eye${iconType}`} width=\"15px\" height=\"15px\" />\n        </Visibility>\n      )}\n      {formik && formik.touched[name] && formik.errors[name] && (\n        <ErrorInputMessageUi>{formik.errors[name]}</ErrorInputMessageUi>\n      )}\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n    handleChange: PropTypes.func,\n    handleBlur: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n  }),\n  autocomplete: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ContainerForm = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    display: block;\n    flex: 1;\n    height: 100vh;\n    margin-top: 100px;\n    padding: 20px 20px 20px 30px;\n  }\n`;\n\nexport const Form = styled.form`\n  position: sticky;\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  padding: 20px 0;\n  top: 50px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    border: 2px solid ${({ theme }) => theme.colors.accentColor};\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 5px 0 5px;\n    padding: 20px;\n  }\n`;\n\nexport const WrapperForButton = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport { addContactsThunk, editContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport { InputComponent } from 'components/Input';\n\nimport {\n  duplicateNameNotification,\n  duplicateNumberNotification,\n} from 'helpers/helper';\n\nimport { ContainerForm, Form, WrapperForButton } from './styled';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nconst contactInitialState = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = ({\n  editingContact,\n  setEditingContact,\n  setActiveContact,\n  onCloseModal,\n}) => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState(contactInitialState);\n\n  useEffect(() => {\n    if (editingContact) setContact(editingContact);\n  }, [editingContact]);\n\n  const handleCancel = () => {\n    setEditingContact(null);\n    setContact(contactInitialState);\n    setActiveContact(null);\n    onCloseModal();\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const number = form.elements.contactNumber.value.trim();\n    let name = form.elements.contactName.value.trim();\n    const nameWords = name.split(' ');\n    name = nameWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n    if (\n      !duplicateNameNotification(contacts, name, editingContact) ||\n      !duplicateNumberNotification(contacts, number, editingContact)\n    ) {\n      return;\n    }\n\n    if (editingContact) {\n      dispatch(editContactThunk({ id: editingContact.id, name, number }));\n    } else {\n      dispatch(addContactsThunk({ name, number }));\n    }\n\n    Notify.success(\n      `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n    );\n\n    setContact(contactInitialState);\n    setEditingContact(null);\n    setActiveContact(null);\n    onCloseModal();\n  };\n\n  const handleSetContact = (inputName, value) => {\n    setContact(prevContact => ({\n      ...prevContact,\n      [inputName]: value,\n    }));\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <InputComponent\n          label=\"Name:\"\n          type=\"text\"\n          name=\"contactName\"\n          value={contact.name}\n          onChange={e => handleSetContact('name', e.target.value)}\n          required\n        />\n        <InputComponent\n          label=\"Number:\"\n          type=\"text\"\n          name=\"contactNumber\"\n          value={contact.number}\n          onChange={e => handleSetContact('number', e.target.value)}\n          required\n        />\n        <WrapperForButton>\n          <ButtonUi margin={'0'} type=\"submit\">\n            {editingContact ? 'Edit contact' : 'Add contact'}\n          </ButtonUi>\n          {editingContact && (\n            <ButtonUi margin={'0'} type=\"button\" onClick={handleCancel}>\n              Cancel\n            </ButtonUi>\n          )}\n        </WrapperForButton>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  editingContact: PropTypes.object,\n  setEditingContact: PropTypes.func,\n  setActiveContact: PropTypes.func,\n  onCloseModal: PropTypes.func,\n  contacts: PropTypes.array,\n};\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n// import { addContactsThunk, editContactThunk } from 'redux/contactsOperations';\n// import { selectUserContacts } from 'redux/selectors';\n\n// import Notiflix from 'notiflix';\n\n// import {\n//   ButtonForm,\n//   ContainerForm,\n//   Form,\n//   InputStyle,\n//   WrapperForButton,\n//   WrapperStyle,\n// } from './FormAddContact.styled';\n// import { InputComponent } from 'components/Input/Input';\n// import { useFormik } from 'formik';\n// import { contactSchema } from 'schemas';\n\n// export const ContactForm = ({ editingContact, setEditingContact }) => {\n//   const contacts = useSelector(selectUserContacts);\n//   const dispatch = useDispatch();\n\n//   const formik = useFormik({\n//     initialValues: {\n//       contactName: '',\n//       contactNumber: '',\n//     },\n//     validationSchema: contactSchema,\n//     onSubmit: values => handleSubmit(values),\n//   });\n\n//   // useEffect(() => {\n//   //   if (editingContact && formik.values.contactName !== editingContact.name) {\n//   //     formik.setValues({\n//   //       contactName: editingContact.name,\n//   //       contactNumber: editingContact.number,\n//   //     });\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   // useEffect(() => {\n//   //   if (editingContact) {\n//   //     if (\n//   //       formik.values.contactName !== editingContact.name ||\n//   //       formik.values.contactNumber !== editingContact.number\n//   //     ) {\n//   //       formik.setValues({\n//   //         contactName: editingContact.name,\n//   //         contactNumber: editingContact.number,\n//   //       });\n//   //     }\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   useEffect(() => {\n//      console.log('Editing Contact (contactform.jsx):', editingContact);\n//      console.log('Formik values (contactform.jsx):', formik.values);\n//     if (\n//       editingContact &&\n//       (formik.values.contactName !== editingContact.name ||\n//         formik.values.contactNumber !== editingContact.number)\n//     ) {\n//       console.log('Setting Formik values...');\n//       formik.setValues({\n//         contactName: editingContact.name,\n//         contactNumber: editingContact.number,\n//       });\n//     }\n//   }, [editingContact, formik]);\n\n//   const handleCancel = () => {\n//     setEditingContact(null);\n//     formik.resetForm();\n//   };\n\n//   const handleSubmit = ({ contactName, contactNumber }) => {\n//     const nameWords = contactName.split(' ');\n//     const name = nameWords\n//       .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n//       .join(' ');\n\n//     if (\n//       contacts.some(\n//         contact => contact.name === name && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n//     if (\n//       contacts.some(\n//         contact =>\n//           contact.number === contactNumber && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(\n//         `Contact with number ${contactNumber} already exists!`\n//       );\n\n//     if (editingContact) {\n//       dispatch(\n//         editContactThunk({ id: editingContact.id, name, number: contactNumber })\n//       );\n//     } else {\n//       dispatch(addContactsThunk({ name, number: contactNumber }));\n//     }\n\n//     Notiflix.Notify.success(\n//       `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n//     );\n\n//     formik.resetForm();\n//     setEditingContact(null);\n//   };\n\n//   return (\n//     <ContainerForm>\n//       <Form onSubmit={formik.handleSubmit}>\n//         <InputComponent\n//           label=\"Name:\"\n//           type=\"text\"\n//           name=\"contactName\"\n//           placeholder=\"Enter a name\"\n//           value={formik.values.contactName}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <InputComponent\n//           label=\"Number:\"\n//           type=\"text\"\n//           name=\"contactNumber\"\n//           placeholder=\"Enter phone number\"\n//           value={formik.values.contactNumber}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <WrapperForButton>\n//           <ButtonForm type=\"submit\">\n//             {editingContact ? 'Edit contact' : 'Add contact'}\n//           </ButtonForm>\n//           {editingContact && (\n//             <ButtonForm type=\"button\" onClick={handleCancel}>\n//               Cancel\n//             </ButtonForm>\n//           )}\n//         </WrapperForButton>\n//       </Form>\n//     </ContainerForm>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   editingContact: PropTypes.object,\n//   setEditingContact: PropTypes.func,\n//   contacts: PropTypes.array,\n// };\n","import styled from 'styled-components';\nimport { ModalTitleUi } from 'ui/ModalUi.styled';\n\nexport const ModalDeleteTitle = styled(ModalTitleUi)`\n  overflow: hidden;\n  word-break: break-all;\n  margin: 0;\n`;\n\nexport const ModalDeleteButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  margin-top: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Dialog = styled.dialog`\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  border-radius: 16px;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1s;\n  cursor: auto;\n  z-index: 2;\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n\n  &::backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    height: 100vh;\n    background-color: ${({ theme }) => theme.colors.backdropColor};\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n\n    &.is-hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n  }\n`;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Dialog } from './styled';\n\nexport const Modal = ({ children, open, onClose }) => {\n  const dialog = useRef();\n\n  useEffect(() => {\n    if (open) {\n      dialog.current.showModal();\n    } else {\n      dialog.current.close();\n    }\n  }, [dialog, open]);\n\n  const handleBackdropClick = event => {\n    if (event.target === dialog.current) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Dialog ref={dialog} onClick={handleBackdropClick}>\n      {open ? children : null}\n    </Dialog>,\n    document.getElementById('modal')\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ModalDeleteButtonWrapper, ModalDeleteTitle } from './styled';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { Modal } from 'components/Modal';\n\nexport const ModalDelete = ({ open, contact, onDeleteContact, onNoDeleteContact }) => {\n  return (\n    <Modal open={open} onClose={onNoDeleteContact}>\n      <ModalDeleteTitle>\n        Are you sure you want to delete <br />\n        the contact <br />\n        {contact && contact.name}?\n      </ModalDeleteTitle>\n      <ModalDeleteButtonWrapper>\n        <ButtonUi margin={'0'} type=\"button\" onClick={onDeleteContact}>\n          Yes\n        </ButtonUi>\n        <ButtonUi margin={'0'} type=\"button\" onClick={onNoDeleteContact}>\n          No\n        </ButtonUi>\n      </ModalDeleteButtonWrapper>\n    </Modal>\n  );\n};\n\nModalDelete.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  open: PropTypes.bool,\n  onDeleteContact: PropTypes.func.isRequired,\n  onNoDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: start;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  margin: 0 auto 5px;\n  box-sizing: border-box;\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  border: 1px solid ${({ theme }) => theme.colors.accentColor};\n  box-shadow: 0 2px 8px ${({ theme }) => theme.colors.boxShadow};\n\n  @media (min-width: 1024px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const ListName = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n`;\n\nexport const ListPhone = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n\nexport const Button = styled(ButtonUi)`\n  border-radius: 5px;\n  padding: 2px 10px;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon } from 'components/Icon';\n\nimport {\n  Button,\n  ButtonWrapper,\n  ContactItemStyled,\n  ContactWrapper,\n  ListName,\n  ListPhone,\n} from './styled';\n\nexport const ContactItem = ({\n  contact,\n  activeContact,\n  handleCallContact,\n  handleEditContact,\n  handleOpenModal,\n}) => {\n  const isContactActive = activeContact && activeContact.id === contact.id;\n\n  return (\n    <ContactItemStyled key={contact.id}>\n      <ContactWrapper>\n        <ListName>{contact.name}:</ListName>\n        <ListPhone>{contact.number}</ListPhone>\n      </ContactWrapper>\n      <ButtonWrapper>\n        <Button\n          aria-label=\"Call the contact\"\n          type=\"button\"\n          onClick={() => handleCallContact(contact)}\n          disabled={isContactActive}\n        >\n          <Icon name=\"icon-phone\" width=\"15px\" height=\"15px\" />\n        </Button>\n        <Button\n          aria-label=\"Edit contact\"\n          type=\"button\"\n          onClick={() => handleEditContact(contact)}\n          disabled={isContactActive}\n        >\n          <Icon name=\"icon-pencil\" width=\"15px\" height=\"15px\" />\n        </Button>\n        <Button\n          aria-label=\"Delete contact\"\n          type=\"button\"\n          onClick={() => handleOpenModal(contact)}\n          disabled={isContactActive}\n        >\n          <Icon name=\"icon-delete\" width=\"15px\" height=\"15px\" />\n        </Button>\n      </ButtonWrapper>\n    </ContactItemStyled>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  activeContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  handleCallContact: PropTypes.func.isRequired,\n  handleEditContact: PropTypes.func.isRequired,\n  handleOpenModal: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 10px;\n  list-style: none;\n  padding-inline-start: 0;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.tablet}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.desktop}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport { ModalDelete } from 'components/ModalDelete';\nimport { ContactItem } from 'components/ContactItem';\n\nimport { ContactsList } from './styled';\n\nexport const ContactList = ({\n  contacts,\n  onDeleteContact,\n  onEditContact,\n  activeContact,\n  setActiveContact,\n  onOpenModal,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const handleOpenModal = contact => {\n    setSelectedContact(contact);\n    setShowModal(true);\n    setActiveContact(contact);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedContact(null);\n    setShowModal(false);\n    setActiveContact(null);\n  };\n\n  const handleCallContact = contact => {\n    const phoneNumber = contact.number;\n    window.location.href = `tel:${phoneNumber}`;\n    setActiveContact(contact);\n\n    setTimeout(() => {\n      setActiveContact(null);\n    }, 10000); //це тимчасово\n  };\n\n  const handleEditContact = contact => {\n    if (window.innerWidth <= 1024) {\n      onOpenModal();\n      onEditContact(contact);\n      setActiveContact(contact);\n    } else {\n      onEditContact(contact);\n      setActiveContact(contact);\n    }\n  };\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem\n              key={contact.id}\n              contact={contact}\n              activeContact={activeContact}\n              handleCallContact={handleCallContact}\n              handleEditContact={handleEditContact}\n              handleOpenModal={handleOpenModal}\n            />\n          );\n        })}\n      <ModalDelete\n        open={showModal}\n        contact={selectedContact}\n        onDeleteContact={() => {\n          onDeleteContact(selectedContact.id);\n          Notify.success(\n            `Contact ${selectedContact.name} successfully deleted.`\n          );\n          setShowModal(false);\n        }}\n        onNoDeleteContact={handleCloseModal}\n      />\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n  activeContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  setActiveContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  height: 50px;\n  font-size: 20px;\n  font-weight: bold;\n  box-sizing: border-box;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 15px;\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  outline: none; /* Видаляє обведення при фокусі */\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.colors.boxShadowAccent};\n    transition: box-shadow 0.3s ease-in-out;\n  }\n`;\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const FilterStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n  margin: 10px 0 30px 0;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.tablet}) {\n    font-size: 20px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    font-size: 30px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.desktop}) {\n    font-size: 40px;\n  }\n`;\n\nexport const InputFind = styled(InputUi)`\n  max-width: 320px;\n  margin-left: 10px;\n  vertical-align: top;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { ModalBackdropUi } from 'ui/ModalUi.styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-items: flex-start;\n  text-align: center;\n  gap: 10px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 25px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.tablet}) {\n    font-size: 35px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    font-size: 50px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.desktop}) {\n    font-size: 70px;\n  }\n`;\n\nexport const NewContactContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.tablet}) {\n    font-size: 20px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.values.laptop}) {\n    display: none;\n  }\n`;\n\nexport const ModalBackdrop = styled(ModalBackdropUi)`\n  top: 0;\n  height: 100%;\n`;\n\nexport const ButtonAddContact = styled(ButtonUi)`\n  font-size: 0;\n  padding: 10px;\n  margin: 0;\n`;\n\nexport const ContactsContainer = styled.div`\n  flex: 2;\n  padding: 0 10px;\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/contacts/reducer';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\nimport { Modal } from 'components/Modal';\nimport { Icon } from 'components/Icon';\n\nimport {\n  ButtonAddContact,\n  ContactsContainer,\n  Container,\n  NewContactContainer,\n  NoContacts,\n  TitleContacts,\n} from './styled';\nimport { TitlePhonebook } from 'components/App/App.styled';\n\nimport { findItem } from 'helpers/helper';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n  const [editingContact, setEditingContact] = useState(null);\n  const [activeContact, setActiveContact] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isFormVisible, setIsFormVisible] = useState(window.innerWidth > 1024);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsFormVisible(window.innerWidth > 1024);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setEditingContact(null);\n    setActiveContact(null);\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const filteredContacts = contacts ? findItem(contacts, 'name', filter) : [];\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        {isFormVisible && (\n          <ContactForm\n            editingContact={editingContact}\n            setEditingContact={setEditingContact}\n            setActiveContact={setActiveContact}\n            onCloseModal={handleCloseModal}\n          />\n        )}\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          <NewContactContainer>\n            <p>Create a new contact</p>\n            <ButtonAddContact onClick={handleOpenModal}>\n              <Icon name=\"icon-user-plus\" width=\"30px\" height=\"30px\"></Icon>\n            </ButtonAddContact>\n          </NewContactContainer>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={handleChangeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onEditContact={handleEditContact}\n                      onDeleteContact={handleDeleteContact}\n                      activeContact={activeContact}\n                      setActiveContact={setActiveContact}\n                      onOpenModal={handleOpenModal}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n      {showModal && (\n        <Modal open={open} onClose={handleCloseModal}>\n          <ContactForm\n            open={showModal}\n            editingContact={editingContact}\n            setEditingContact={setEditingContact}\n            setActiveContact={setActiveContact}\n            onCloseModal={handleCloseModal}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const ModalBackdropUi = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n"],"names":["TitlePhonebook","styled","h1","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","secondaryColor","_ref2","textShadowColor","_ref3","concat","accentColor","_ref4","breakpoints","values","tablet","_ref5","laptop","_ref6","desktop","Icon","name","width","height","_jsx","children","href","sprite","ErrorInputMessageUi","p","errorColor","inputPlaceholderCommonStyle","css","Text","div","_templateObject2","PlaceholderText","label","_templateObject3","Input","input","_templateObject4","primaryColor","boxShadowPlaceholder","_ref7","Wrapper","_templateObject5","Visibility","span","_templateObject6","_ref8","InputComponent","props","formik","autocomplete","isPasswordVisible","setIsPasswordVisible","useState","inputType","iconType","htmlFor","_jsxs","_objectSpread","id","type","autoComplete","onClick","togglePasswordVisibility","touched","errors","ContainerForm","backgroundColor","Form","form","WrapperForButton","contactInitialState","number","ContactForm","editingContact","setEditingContact","setActiveContact","onCloseModal","contacts","useSelector","selectUserContacts","dispatch","useDispatch","contact","setContact","useEffect","handleSetContact","inputName","value","prevContact","onSubmit","event","preventDefault","currentTarget","elements","contactNumber","trim","contactName","nameWords","split","map","word","charAt","toUpperCase","slice","join","duplicateNameNotification","duplicateNumberNotification","editContactThunk","addContactsThunk","Notify","success","onChange","e","target","required","ButtonUi","margin","handleCancel","ModalDeleteTitle","ModalTitleUi","ModalDeleteButtonWrapper","Dialog","dialog","backdropColor","Modal","open","onClose","useRef","current","showModal","close","createPortal","ref","document","getElementById","ModalDelete","onDeleteContact","onNoDeleteContact","ContactItemStyled","li","boxShadow","ContactWrapper","ListName","ListPhone","ButtonWrapper","Button","ContactItem","activeContact","handleCallContact","handleEditContact","handleOpenModal","isContactActive","disabled","ContactsList","ul","ContactList","onEditContact","onOpenModal","setShowModal","selectedContact","setSelectedContact","showContacts","Array","isArray","length","phoneNumber","window","location","setTimeout","innerWidth","handleCloseModal","InputUi","boxShadowAccent","FilterStyled","InputFind","Filter","Container","TitleContacts","h2","NewContactContainer","_ref9","ButtonAddContact","ModalBackdropUi","ContactsContainer","NoContacts","_templateObject7","_ref10","ContactsPage","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","isFormVisible","setIsFormVisible","handleResize","addEventListener","removeEventListener","requestContactsThunk","filteredContacts","findItem","Loader","_Fragment","setFilter","contactId","deleteContactsThunk","ModalBoxUi","ModalFormUi"],"sourceRoot":""}