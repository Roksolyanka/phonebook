{"version":3,"file":"static/js/574.096bb0d3.chunk.js","mappings":"+IAuEA,IAAe,IAA0B,0D,sECrE5BA,E,QAAiBC,GAAAA,GAAH,sXAIhB,qBAAGC,MAAkBC,OAAOC,cAA5B,IAEM,qBAAGF,MAAkBC,OAAOE,eAA5B,IAED,gBAAGH,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,OAAOG,YAA/B,gCACVJ,EAAMC,OAAOG,YADH,kB,mICRHC,EAAsBN,EAAAA,GAAAA,EAAH,0NACrB,qBAAGC,MAAkBC,OAAOK,UAA5B,ICDEC,GAA8BC,EAAAA,EAAAA,IAAH,gEAK3BC,EAAOV,EAAAA,GAAAA,IAAH,6OAObQ,GAGSG,EAAkBX,EAAAA,GAAAA,MAAH,gPAYxBQ,GAGSI,EAAQZ,EAAAA,GAAAA,MAAH,omBAOI,qBAAGC,MAAkBC,OAAOC,cAA5B,GAElBK,GAKc,gBAAGP,EAAH,EAAGA,MAAH,gBAAkBA,EAAMC,OAAOG,YAA/B,iCACVJ,EAAMC,OAAOG,YADH,kBAMVM,EACFD,EAEEC,EACFD,GAGO,qBAAGT,MAAkBC,OAAOW,YAA5B,IACW,qBAAGZ,MAAkBC,OAAOC,cAA5B,IAEN,qBAAGF,MAAkBC,OAAOY,oBAA5B,GAGJH,EAAmBD,GACpB,qBAAGT,MAAkBC,OAAOW,YAA5B,IACO,qBAAGZ,MAAkBC,OAAOW,YAA5B,IAIPE,EAAUf,EAAAA,GAAAA,IAAH,uEAKPgB,EAAahB,EAAAA,GAAAA,KAAH,qMAUX,qBAAGC,MAAkBC,OAAOW,YAA5B,I,UC/ECI,EAAiB,SAAAC,GAC5B,IAAQC,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACrB,GAAkDC,EAAAA,EAAAA,WAAS,GAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KAMMC,EAAYF,EAAoB,OAAS,WACzCG,EAAWH,EAAoB,GAAK,WACpCI,EAAO,gBAAYP,GAEzB,OACE,UAACL,EAAD,YACE,SAACH,GAAD,QAAOgB,GAAID,EAASP,KAAMA,EAAMS,KAAMJ,GAAeP,KACrD,SAACP,EAAD,CAAiBgB,QAASA,EAA1B,UACE,SAACjB,EAAD,UAAOS,MAEC,aAATC,IACC,SAACJ,EAAD,CAAYc,QAfe,WAC/BN,GAAsBD,EACvB,EAaK,UACE,0BACE,gBAAKQ,KAAI,UAAKC,EAAAA,EAAL,oBAAuBN,SAIrCL,GAAUA,EAAOY,QAAQb,IAASC,EAAOa,OAAOd,KAC/C,SAACd,EAAD,UAAsBe,EAAOa,OAAOd,OAI3C,C,0PCnCYe,EAAgBnC,EAAAA,GAAAA,IAAH,8gBACJ,qBAAGC,MAAkBC,OAAOkC,eAA5B,IACW,qBAAGnC,MAAkBC,OAAOG,WAA5B,IA4BpBgC,EAAOrC,EAAAA,GAAAA,KAAH,uRAQN,qBAAGC,MAAkBC,OAAOC,cAA5B,IAGa,qBAAGF,MAAkBC,OAAOG,WAA5B,IACN,qBAAGJ,MAAkBC,OAAOG,WAA5B,IAILiC,EAAmBtC,EAAAA,GAAAA,IAAH,iG,oBC9BvBuC,EAAsB,CAC1BnB,KAAM,GACNoB,OAAQ,IAGGC,EAAc,SAAC,GAKrB,IAJLC,EAII,EAJJA,eACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,aAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEjB,GAA8B5B,EAAAA,EAAAA,UAASiB,GAAvC,eAAOY,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACJX,GAAgBU,EAAWV,EAChC,GAAE,CAACA,IAEJ,IAyCMY,EAAmB,SAACC,EAAWC,GACnCJ,GAAW,SAAAK,GAAW,yBACjBA,GADiB,cAEnBF,EAAYC,GAFO,GAIvB,EAED,OACE,SAACrB,EAAD,WACE,UAACE,EAAD,CAAMqB,SA3CW,SAAAC,GACnBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,cACbtB,EAASqB,EAAKE,SAASC,cAAcR,MAAMS,OAC7C7C,EAAOyC,EAAKE,SAASG,YAAYV,MAAMS,OACrCE,EAAY/C,EAAKgD,MAAM,KAC7BhD,EAAO+C,EACJE,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAA9C,IACRC,KAAK,MAGLC,EAAAA,EAAAA,IAA0B7B,EAAU1B,EAAMsB,KAC1CkC,EAAAA,EAAAA,IAA4B9B,EAAUN,EAAQE,KAM/CO,EADEP,GACOmC,EAAAA,EAAAA,IAAiB,CAAEjD,GAAIc,EAAed,GAAIR,KAAAA,EAAMoB,OAAAA,KAEhDsC,EAAAA,EAAAA,IAAiB,CAAE1D,KAAAA,EAAMoB,OAAAA,KAGpCuC,EAAAA,OAAAA,QAAA,kBACa3D,EADb,yBACkCsB,EAAiB,SAAW,QAD9D,MAIAU,EAAWb,GACXI,EAAkB,MAClBC,EAAiB,MACjBC,IACD,EAWG,WACE,SAACjC,EAAA,EAAD,CACEO,MAAM,QACNU,KAAK,OACLT,KAAK,cACLoC,MAAOL,EAAQ/B,KACf4D,SAAU,SAAAC,GAAC,OAAI3B,EAAiB,OAAQ2B,EAAEC,OAAO1B,MAAtC,EACX2B,UAAQ,KAEV,SAACvE,EAAA,EAAD,CACEO,MAAM,UACNU,KAAK,OACLT,KAAK,gBACLoC,MAAOL,EAAQX,OACfwC,SAAU,SAAAC,GAAC,OAAI3B,EAAiB,SAAU2B,EAAEC,OAAO1B,MAAxC,EACX2B,UAAQ,KAEV,UAAC7C,EAAD,YACE,SAAC,IAAD,CAAU8C,OAAQ,IAAKvD,KAAK,SAA5B,SACGa,EAAiB,eAAiB,gBAEpCA,IACC,SAAC,IAAD,CAAU0C,OAAQ,IAAKvD,KAAK,SAASC,QAxE1B,WACnBa,EAAkB,MAClBS,EAAWb,GACXK,EAAiB,MACjBC,GACD,EAmES,SAA4D,kBAQvE,E,UCnHYwC,GAAsBrF,EAAAA,EAAAA,IAAOsF,EAAAA,GAAPtF,CAAH,wEAMnBuF,EAAiBvF,EAAAA,GAAAA,OAAH,yUAKL,qBAAGC,MAAkBC,OAAOkC,eAA5B,IACW,qBAAGnC,MAAkBC,OAAOG,WAA5B,IAUpBmF,GAAmBxF,EAAAA,EAAAA,IAAOyF,EAAAA,GAAPzF,CAAH,qFAMhB0F,EAA2B1F,EAAAA,GAAAA,IAAH,oFCwBrC,EA5CoB,SAAC,GAAqD,IAAnDmD,EAAkD,EAAlDA,QAASwC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBACzCC,GAAYC,EAAAA,EAAAA,QAAO,MAOnBC,EAAW,WACfH,IACAC,EAAUG,QAAQC,OACnB,EAED,OACE,SAACZ,EAAD,CAAqBvD,QAASiE,EAA9B,UACE,UAACR,EAAD,CAAgBW,IAAKL,EAArB,WACE,UAACL,EAAD,WAAkB,oCACgB,kBAAM,gBAC1B,kBACXrC,EAAQ/B,KAAK,QAEhB,UAACsE,EAAD,YACE,SAAC,IAAD,CAAUN,OAAQ,IAAKvD,KAAK,SAASC,QAnB3B,WAChB6D,EAAgBxC,EAAQvB,IACxBiE,EAAUG,QAAQC,OACnB,EAgBO,SAAyD,SAGzD,SAAC,IAAD,CAAUb,OAAQ,IAAKvD,KAAK,SAASC,QAASiE,EAA9C,SAAwD,cAOjE,E,WCxCYI,GAAenG,EAAAA,GAAAA,GAAH,2YAoBZoG,GAAcpG,EAAAA,GAAAA,GAAH,ycAcb,qBAAGC,MAAkBC,OAAOW,YAA5B,IACW,qBAAGZ,MAAkBC,OAAOG,WAA5B,IACI,qBAAGJ,MAAkBC,OAAOmG,SAA5B,IAObC,GAAiBtG,EAAAA,GAAAA,IAAH,gJAQduG,GAAWvG,EAAAA,GAAAA,KAAH,uEAKRwG,GAAYxG,EAAAA,GAAAA,KAAH,sFAGX,qBAAGC,MAAkBC,OAAOE,eAA5B,IAGEqG,GAAgBzG,EAAAA,GAAAA,IAAH,sFAMb0G,GAAO1G,EAAAA,GAAAA,IAAH,uDACN,qBAAG2G,OAAqB,MAAxB,IACC,qBAAGC,QAAuB,MAA1B,IAGCC,IAAS7G,EAAAA,EAAAA,IAAO8G,EAAAA,EAAP9G,CAAH,wFC1DN+G,GAAc,SAAC,GAOrB,IANLjE,EAMI,EANJA,SACA6C,EAKI,EALJA,gBACAqB,EAII,EAJJA,cACAC,EAGI,EAHJA,cACArE,EAEI,EAFJA,iBACAsE,EACI,EADJA,YAEA,GAAkC5F,EAAAA,EAAAA,WAAS,GAA3C,eAAO6F,EAAP,KAAkBC,EAAlB,KACA,GAA8C9F,EAAAA,EAAAA,UAAS,MAAvD,eAAO+F,EAAP,KAAwBC,EAAxB,KACMC,EAAeC,MAAMC,QAAQ3E,IAAaA,EAAS4E,OAAS,EAQ5DC,EAAa,WACjBL,EAAmB,MACnBF,GAAa,GACbxE,EAAiB,KAClB,EAyBD,OACE,UAACuD,GAAD,WACGoB,GACCzE,EAASuB,KAAI,SAAAlB,GACX,IAAMyE,EACJX,GAAiBA,EAAcrF,KAAOuB,EAAQvB,GAEhD,OACE,UAACwE,GAAD,YACE,UAACE,GAAD,YACE,UAACC,GAAD,WAAWpD,EAAQ/B,KAAK,QACxB,SAACoF,GAAD,UAAYrD,EAAQX,aAEtB,UAACiE,GAAD,YACE,SAACI,GAAD,CACE,aAAW,mBACXhF,KAAK,SACLC,QAAS,kBAxCL,SAAAqB,GAClB,IAAM0E,EAAc1E,EAAQX,OAC5BsF,OAAOC,SAAShG,KAAhB,cAA8B8F,GAC9BjF,EAAiBO,GAEjB6E,YAAW,WACTpF,EAAiB,KAClB,GAAE,IACJ,CAgC8BqF,CAAY9E,EAAlB,EACT+E,SAAUN,EAJZ,UAME,SAAClB,GAAD,WACE,gBAAK3E,KAAI,UAAKC,GAAAA,EAAL,sBAGb,SAAC6E,GAAD,CACE,aAAW,eACXhF,KAAK,SACLC,QAAS,kBAxCC,SAAAqB,GACnB2E,OAAOK,YAAc,MACvBjB,IACAF,EAAc7D,GACdP,EAAiBO,KAElB6D,EAAc7D,GACdP,EAAiBO,GAIpB,CA6B8BiF,CAAkBjF,EAAxB,EACT+E,SAAUN,EAJZ,UAME,SAAClB,GAAD,WACE,gBAAK3E,KAAI,UAAKC,GAAAA,EAAL,uBAGb,SAAC6E,GAAD,CACE,aAAW,iBACXhF,KAAK,SACLC,QAAS,kBAxEP,SAAAqB,GAChBmE,EAAmBnE,GACnBiE,GAAa,GACbxE,EAAiBO,EAClB,CAoE8BkF,CAAUlF,EAAhB,EACT+E,SAAUN,EAJZ,UAME,SAAClB,GAAD,WACE,gBAAK3E,KAAI,UAAKC,GAAAA,EAAL,2BAjCCmB,EAAQvB,GAuC7B,IACFuF,IACC,SAAC,EAAD,CACEhE,QAASkE,EACT1B,gBAAiB,SAAA2C,GACf3C,EAAgB2C,GAChBvD,EAAAA,OAAAA,QAAA,kBACasC,EAAgBjG,KAD7B,2BAGAuG,GACD,EACD/B,kBAAmB+B,MAK5B,EC9HYY,GAAUvI,EAAAA,GAAAA,MAAH,0eASE,qBAAGC,MAAkBC,OAAOC,cAA5B,IAKJ,qBAAGF,MAAkBC,OAAOsI,eAA5B,ICbLC,GAAezI,EAAAA,GAAAA,IAAH,+aAOd,qBAAGC,MAAkBC,OAAOW,YAA5B,IAEM,qBAAGZ,MAAkBC,OAAOE,eAA5B,IAgBJsI,IAAY1I,EAAAA,EAAAA,IAAOuI,GAAPvI,CAAH,2FCvBT2I,GAAS,SAAC,GAAD,IAAGnF,EAAH,EAAGA,MAAOwB,EAAV,EAAUA,SAAV,OACpB,UAACyD,GAAD,WAAc,0BAEZ,SAACC,GAAD,CAAW7G,KAAK,OAAO2B,MAAOA,EAAOwB,SAAUA,MAH7B,E,sBCDT4D,GAAY5I,EAAAA,GAAAA,IAAH,+JAST6I,GAAgB7I,EAAAA,GAAAA,GAAH,iVAGf,qBAAGC,MAAkBC,OAAOC,cAA5B,IAEM,qBAAGF,MAAkBC,OAAOE,eAA5B,IAgBJ0I,GAAsB9I,EAAAA,GAAAA,IAAH,gVAOrB,qBAAGC,MAAkBC,OAAOW,YAA5B,IAEM,qBAAGZ,MAAkBC,OAAOE,eAA5B,IAWJ2I,IAAgB/I,EAAAA,EAAAA,IAAOsF,EAAAA,GAAPtF,CAAH,oDAKbgJ,IAAmBhJ,EAAAA,EAAAA,IAAO8G,EAAAA,EAAP9G,CAAH,yEAMhBiJ,GAAoBjJ,EAAAA,GAAAA,IAAH,wDAKjBkJ,GAAalJ,EAAAA,GAAAA,EAAH,8HAGZ,qBAAGC,MAAkBC,OAAOE,eAA5B,IC8FX,GArIqB,WACnB,IAAM+I,GAAkBpG,EAAAA,EAAAA,IAAYqG,EAAAA,IAC9BtG,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBqG,GAAYtG,EAAAA,EAAAA,IAAYuG,EAAAA,IACxBC,GAAQxG,EAAAA,EAAAA,IAAYyG,EAAAA,IACpBC,GAAS1G,EAAAA,EAAAA,IAAY2G,EAAAA,IAC3B,GAA4CpI,EAAAA,EAAAA,UAAS,MAArD,eAAOoB,EAAP,KAAuBC,EAAvB,KACA,GAA0CrB,EAAAA,EAAAA,UAAS,MAAnD,eAAO2F,EAAP,KAAsBrE,EAAtB,KACA,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAO6F,EAAP,KAAkBC,EAAlB,KACA,GAA0C9F,EAAAA,EAAAA,UAASwG,OAAOK,WAAa,MAAvE,eAAOwB,EAAP,KAAsBC,EAAtB,KAEM3G,GAAWC,EAAAA,EAAAA,OAEjBG,EAAAA,EAAAA,YAAU,WACR,IAAMwG,EAAe,WACnBD,EAAiB9B,OAAOK,WAAa,KACtC,EAGD,OADAL,OAAOgC,iBAAiB,SAAUD,GAC3B,WACL/B,OAAOiC,oBAAoB,SAAUF,EACtC,CACF,GAAE,KAEHxG,EAAAA,EAAAA,YAAU,WACH8F,GAELlG,GAAS+G,EAAAA,EAAAA,MACV,GAAE,CAACb,EAAiBlG,IAErB,IAAMoF,EAAY,WAChBjB,GAAa,EACd,EAEKO,EAAa,WACjBP,GAAa,EACd,EA6BK6C,EAPe,WACnB,IAAMC,EAAmBT,EAAOU,cAChC,cAAOrH,QAAP,IAAOA,OAAP,EAAOA,EAAU2G,QAAO,SAAAtG,GAAO,OAC7BA,EAAQ/B,KAAK+I,cAAcC,SAASF,EADP,GAGhC,CAEwBG,GAEzB,OACE,gCACE,SAAC,KAAD,UAAgB,eAChB,UAACzB,GAAD,WACGe,IACC,SAAClH,EAAD,CACEC,eAAgBA,EAChBC,kBAAmBA,EACnBC,iBAAkBA,KAGtB,UAACqG,GAAD,YACE,SAACJ,GAAD,UAAe,cACf,UAACC,GAAD,YACE,uBAAG,0BACH,SAACE,GAAD,CAAkBlH,QAASuG,EAA3B,UACE,SAAC3B,GAAD,CAAMC,MAAO,KAAMC,OAAQ,KAA3B,UACE,gBAAK7E,KAAI,UAAKC,GAAAA,EAAL,4BAIdqH,IAAa,SAACiB,GAAA,EAAD,IACbf,IAAS,yBAAG,8BAA4BA,KAC3B,OAAbzG,GACC,SAACoG,GAAD,UAAY,wBAEZ,8BACuB,IAApBpG,EAAS4E,QACR,+BACE,SAACwB,GAAD,UAAY,0BAGd,iCACE,SAACP,GAAD,CAAQnF,MAAOiG,EAAQzE,SA9ClB,SAAArB,GACnBV,GAASsH,EAAAA,EAAAA,GAAU5G,EAAMuB,OAAO1B,OACjC,IA6C4C,IAA5ByG,EAAiBvC,QAChB,SAACwB,GAAD,UAAY,sCAEZ,SAACnC,GAAD,CACEjE,SAAUmH,EACVjD,cAxDM,SAAA7D,GACxBR,EAAkBQ,EACnB,EAuDmBwC,gBA7DQ,SAAA2C,GAC1BrF,GAASuH,EAAAA,EAAAA,IAAoBlC,GAC9B,EA4DmBrB,cAAeA,EACfrE,iBAAkBA,EAClBsE,YAAamB,eAS5BlB,IACC,SAAC4B,GAAD,CAAe0B,UAAU,gBAAgB3I,QAlFvB,SAAA6B,GAClBA,EAAMuB,OAAOwF,UAAUC,SAAS,mBAClChD,IACAhF,EAAkB,MAClBC,EAAiB,MAEpB,EA4EK,UACE,SAACH,EAAD,CACEC,eAAgBA,EAChBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,aAAc8E,QAMzB,C,+JCnKYrC,EAAkBtF,EAAAA,GAAAA,IAAH,uXASN,qBAAGC,MAAkBC,OAAO0K,aAA5B,IAUTC,EAAa7K,EAAAA,GAAAA,IAAH,0WACD,qBAAGC,MAAkBC,OAAOkC,eAA5B,IACW,qBAAGnC,MAAkBC,OAAOG,WAA5B,IAoBpBoF,EAAezF,EAAAA,GAAAA,GAAH,kFAGd,qBAAGC,MAAkBC,OAAOE,eAA5B,IAGE0K,EAAc9K,EAAAA,GAAAA,KAAH,8C","sources":["assets/sprite.svg","components/App/App.styled.js","ui/ErrorInputMessageUi.styled.js","components/Input/styled.js","components/Input/index.jsx","components/ContactForm/styled.js","components/ContactForm/index.jsx","components/ModalDelete/styled.js","components/ModalDelete/index.jsx","components/ContactList/styled.js","components/ContactList/index.jsx","ui/InputUi.styled.js","components/Filter/styled.js","components/Filter/index.jsx","pages/ContactsPage/styled.js","pages/ContactsPage/index.jsx","ui/ModalUi.styled.js"],"sourcesContent":["var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-phone\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 20c-2 2-2 4-4 4s-4-2-6-4-4-4-4-6 2-2 4-4-4-8-6-8-6 6-6 6c0 4 4.109 12.109 8 16s12 8 16 8c0 0 6-4 6-6s-6-8-8-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-delete\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1zM11 28c0.552 0 1-0.447 1-1v-14c0-0.553-0.448-1-1-1s-1 0.447-1 1v14c0 0.553 0.448 1 1 1zM29 6h-4v-2c0-2.209-1.791-4-4-4h-10c-2.209 0-4 1.791-4 4v2h-4l-3 3c0 0.553 0.448 1 1 1h3v20c0 1.104 0.896 2 2 2h20c1.104 0 2-0.896 2-2v-20h3c0.553 0 1-0.447 1-1l-3-3zM10 4c0-1.104 0.896-2 2-2h8c1.104 0 2 0.896 2 2v2h-12v-2zM26 29c0 0.553-0.447 1-1 1h-18c-0.552 0-1-0.447-1-1v-19h20v19zM16 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 6c-6.979 0-13.028 4.064-16 10 2.972 5.936 9.021 10 16 10s13.027-4.064 16-10c-2.972-5.936-9.021-10-16-10zM23.889 11.303c1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303s-5.527-0.796-7.889-2.303c-1.88-1.199-3.473-2.805-4.67-4.697 1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 4.418 3.582 8 8 8s8-3.582 8-8c0-0.962-0.17-1.883-0.482-2.737 0.124 0.074 0.248 0.15 0.371 0.228v0zM16 13c0 1.657-1.343 3-3 3s-3-1.343-3-3 1.343-3 3-3 3 1.343 3 3z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-eye-blocked\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.561 0.439c-0.586-0.586-1.535-0.586-2.121 0l-6.318 6.318c-1.623-0.492-3.342-0.757-5.122-0.757-6.979 0-13.028 4.064-16 10 1.285 2.566 3.145 4.782 5.407 6.472l-4.968 4.968c-0.586 0.586-0.586 1.535 0 2.121 0.293 0.293 0.677 0.439 1.061 0.439s0.768-0.146 1.061-0.439l27-27c0.586-0.586 0.586-1.536 0-2.121zM13 10c1.32 0 2.44 0.853 2.841 2.037l-3.804 3.804c-1.184-0.401-2.037-1.521-2.037-2.841 0-1.657 1.343-3 3-3zM3.441 16c1.197-1.891 2.79-3.498 4.67-4.697 0.122-0.078 0.246-0.154 0.371-0.228-0.311 0.854-0.482 1.776-0.482 2.737 0 1.715 0.54 3.304 1.459 4.607l-1.904 1.904c-1.639-1.151-3.038-2.621-4.114-4.323z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 13.813c0-0.849-0.133-1.667-0.378-2.434l-10.056 10.056c0.768 0.245 1.586 0.378 2.435 0.378 4.418 0 8-3.582 8-8z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.938 9.062l-2.168 2.168c0.040 0.025 0.079 0.049 0.118 0.074 1.88 1.199 3.473 2.805 4.67 4.697-1.197 1.891-2.79 3.498-4.67 4.697-2.362 1.507-5.090 2.303-7.889 2.303-1.208 0-2.403-0.149-3.561-0.439l-2.403 2.403c1.866 0.671 3.873 1.036 5.964 1.036 6.978 0 13.027-4.064 16-10-1.407-2.81-3.504-5.2-6.062-6.938z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-user-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 23c0-4.726 2.996-8.765 7.189-10.319 0.509-1.142 0.811-2.411 0.811-3.681 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h12.416c-0.271-0.954-0.416-1.96-0.416-3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 14c-4.971 0-9 4.029-9 9s4.029 9 9 9c4.971 0 9-4.029 9-9s-4.029-9-9-9zM28 24h-4v4h-2v-4h-4v-2h4v-4h2v4h4v2z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.e2b0d0ec6e09344e316d16f4bc0ca3d9.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n  box-shadow: ${({ theme }) => `${theme.colors.accentColor} 0px 20px 30px,\n    ${theme.colors.accentColor} 0px 2px 5px`};\n\n  @media (min-width: 640px) {\n    font-size: 50px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 70px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorInputMessageUi = styled.p`\n  color: ${({ theme }) => theme.colors.errorColor};\n  font-size: 14px;\n  line-height: 1.17;\n  margin: 0;\n  text-shadow: none;\n  position: absolute;\n  top: 110%;\n  left: 0;\n  right: 0;\n  transition: opacity 0.15s ease-out;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const inputPlaceholderCommonStyle = css`\n  font-size: 20px;\n  padding: 0 15px;\n`;\n\nexport const Text = styled.div`\n  background-color: transparent;\n  color: black;\n  transform: translate(0);\n  transition: transform 0.15s ease-out, font-size 0.15s ease-out,\n    background-color 0.2s ease-out, color 0.15s ease-out;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const PlaceholderText = styled.label`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  border: 2px solid transparent;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const Input = styled.input`\n  height: 60px;\n  width: 100%;\n  font-weight: bold;\n  box-sizing: border-box;\n  border: none;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n\n  ${inputPlaceholderCommonStyle}\n\n  &:hover,\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => `${theme.colors.accentColor} 0px 5px 10px,\n      ${theme.colors.accentColor} 0px 2px 5px`};\n    transition: box-shadow 0.3s ease-in-out;\n  }\n\n  &:focus\n    + ${PlaceholderText}\n    ${Text},\n    :not(input[value=''])\n    + ${PlaceholderText}\n    ${Text} {\n    border-radius: 25px;\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.primaryColor};\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n    transform: translate(0, -140%);\n    box-shadow: ${({ theme }) => theme.colors.boxShadowPlaceholder};\n  }\n\n  &:focus + ${PlaceholderText} ${Text} {\n    color: ${({ theme }) => theme.colors.primaryColor};\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin-bottom: 15px;\n`;\n\nexport const Visibility = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%);\n  cursor: pointer;\n\n  svg {\n    width: 25px;\n    height: 25px;\n    fill: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport sprite from '../../assets/sprite.svg';\nimport { ErrorInputMessageUi } from 'ui/ErrorInputMessageUi.styled';\nimport { Input, PlaceholderText, Text, Visibility, Wrapper } from './styled';\n\nexport const InputComponent = props => {\n  const { label, name, formik } = props;\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n  };\n\n  const inputType = isPasswordVisible ? 'text' : 'password';\n  const iconType = isPasswordVisible ? '' : '-blocked';\n  const htmlFor = `input-${name}`;\n\n  return (\n    <Wrapper>\n      <Input id={htmlFor} name={name} type={inputType} {...props} />\n      <PlaceholderText htmlFor={htmlFor}>\n        <Text>{label}</Text>\n      </PlaceholderText>\n      {name === 'password' && (\n        <Visibility onClick={togglePasswordVisibility}>\n          <svg>\n            <use href={`${sprite}#icon-eye${iconType}`}></use>\n          </svg>\n        </Visibility>\n      )}\n      {formik && formik.touched[name] && formik.errors[name] && (\n        <ErrorInputMessageUi>{formik.errors[name]}</ErrorInputMessageUi>\n      )}\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n    handleChange: PropTypes.func,\n    handleBlur: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContainerForm = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    display: block;\n    flex: 1;\n    height: 100vh;\n    margin-top: 100px;\n    padding-left: 30px;\n    box-shadow: none;\n  }\n`;\n\nexport const Form = styled.form`\n  position: sticky;\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  padding: 20px;\n  top: 50px;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n\n  @media (min-width: 1024px) {\n    border: 2px solid ${({ theme }) => theme.colors.accentColor};\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 5px 0 5px;\n  }\n`;\n\nexport const WrapperForButton = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport { addContactsThunk, editContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport { InputComponent } from 'components/Input';\n\nimport {\n  duplicateNameNotification,\n  duplicateNumberNotification,\n} from 'helpers/helper';\n\nimport { ContainerForm, Form, WrapperForButton } from './styled';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nconst contactInitialState = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = ({\n  editingContact,\n  setEditingContact,\n  setActiveContact,\n  onCloseModal,\n}) => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contact, setContact] = useState(contactInitialState);\n\n  useEffect(() => {\n    if (editingContact) setContact(editingContact);\n  }, [editingContact]);\n\n  const handleCancel = () => {\n    setEditingContact(null);\n    setContact(contactInitialState);\n    setActiveContact(null);\n    onCloseModal();\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const number = form.elements.contactNumber.value.trim();\n    let name = form.elements.contactName.value.trim();\n    const nameWords = name.split(' ');\n    name = nameWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n    if (\n      !duplicateNameNotification(contacts, name, editingContact) ||\n      !duplicateNumberNotification(contacts, number, editingContact)\n    ) {\n      return;\n    }\n\n    if (editingContact) {\n      dispatch(editContactThunk({ id: editingContact.id, name, number }));\n    } else {\n      dispatch(addContactsThunk({ name, number }));\n    }\n\n    Notify.success(\n      `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n    );\n\n    setContact(contactInitialState);\n    setEditingContact(null);\n    setActiveContact(null);\n    onCloseModal();\n  };\n\n  const handleSetContact = (inputName, value) => {\n    setContact(prevContact => ({\n      ...prevContact,\n      [inputName]: value,\n    }));\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <InputComponent\n          label=\"Name:\"\n          type=\"text\"\n          name=\"contactName\"\n          value={contact.name}\n          onChange={e => handleSetContact('name', e.target.value)}\n          required\n        />\n        <InputComponent\n          label=\"Number:\"\n          type=\"text\"\n          name=\"contactNumber\"\n          value={contact.number}\n          onChange={e => handleSetContact('number', e.target.value)}\n          required\n        />\n        <WrapperForButton>\n          <ButtonUi margin={'0'} type=\"submit\">\n            {editingContact ? 'Edit contact' : 'Add contact'}\n          </ButtonUi>\n          {editingContact && (\n            <ButtonUi margin={'0'} type=\"button\" onClick={handleCancel}>\n              Cancel\n            </ButtonUi>\n          )}\n        </WrapperForButton>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  editingContact: PropTypes.object,\n  setEditingContact: PropTypes.func,\n  setActiveContact: PropTypes.func,\n  onCloseModal: PropTypes.func,\n  contacts: PropTypes.array,\n};\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n// import { addContactsThunk, editContactThunk } from 'redux/contactsOperations';\n// import { selectUserContacts } from 'redux/selectors';\n\n// import Notiflix from 'notiflix';\n\n// import {\n//   ButtonForm,\n//   ContainerForm,\n//   Form,\n//   InputStyle,\n//   WrapperForButton,\n//   WrapperStyle,\n// } from './FormAddContact.styled';\n// import { InputComponent } from 'components/Input/Input';\n// import { useFormik } from 'formik';\n// import { contactSchema } from 'schemas';\n\n// export const ContactForm = ({ editingContact, setEditingContact }) => {\n//   const contacts = useSelector(selectUserContacts);\n//   const dispatch = useDispatch();\n\n//   const formik = useFormik({\n//     initialValues: {\n//       contactName: '',\n//       contactNumber: '',\n//     },\n//     validationSchema: contactSchema,\n//     onSubmit: values => handleSubmit(values),\n//   });\n\n//   // useEffect(() => {\n//   //   if (editingContact && formik.values.contactName !== editingContact.name) {\n//   //     formik.setValues({\n//   //       contactName: editingContact.name,\n//   //       contactNumber: editingContact.number,\n//   //     });\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   // useEffect(() => {\n//   //   if (editingContact) {\n//   //     if (\n//   //       formik.values.contactName !== editingContact.name ||\n//   //       formik.values.contactNumber !== editingContact.number\n//   //     ) {\n//   //       formik.setValues({\n//   //         contactName: editingContact.name,\n//   //         contactNumber: editingContact.number,\n//   //       });\n//   //     }\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   useEffect(() => {\n//      console.log('Editing Contact (contactform.jsx):', editingContact);\n//      console.log('Formik values (contactform.jsx):', formik.values);\n//     if (\n//       editingContact &&\n//       (formik.values.contactName !== editingContact.name ||\n//         formik.values.contactNumber !== editingContact.number)\n//     ) {\n//       console.log('Setting Formik values...');\n//       formik.setValues({\n//         contactName: editingContact.name,\n//         contactNumber: editingContact.number,\n//       });\n//     }\n//   }, [editingContact, formik]);\n\n//   const handleCancel = () => {\n//     setEditingContact(null);\n//     formik.resetForm();\n//   };\n\n//   const handleSubmit = ({ contactName, contactNumber }) => {\n//     const nameWords = contactName.split(' ');\n//     const name = nameWords\n//       .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n//       .join(' ');\n\n//     if (\n//       contacts.some(\n//         contact => contact.name === name && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n//     if (\n//       contacts.some(\n//         contact =>\n//           contact.number === contactNumber && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(\n//         `Contact with number ${contactNumber} already exists!`\n//       );\n\n//     if (editingContact) {\n//       dispatch(\n//         editContactThunk({ id: editingContact.id, name, number: contactNumber })\n//       );\n//     } else {\n//       dispatch(addContactsThunk({ name, number: contactNumber }));\n//     }\n\n//     Notiflix.Notify.success(\n//       `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n//     );\n\n//     formik.resetForm();\n//     setEditingContact(null);\n//   };\n\n//   return (\n//     <ContainerForm>\n//       <Form onSubmit={formik.handleSubmit}>\n//         <InputComponent\n//           label=\"Name:\"\n//           type=\"text\"\n//           name=\"contactName\"\n//           placeholder=\"Enter a name\"\n//           value={formik.values.contactName}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <InputComponent\n//           label=\"Number:\"\n//           type=\"text\"\n//           name=\"contactNumber\"\n//           placeholder=\"Enter phone number\"\n//           value={formik.values.contactNumber}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <WrapperForButton>\n//           <ButtonForm type=\"submit\">\n//             {editingContact ? 'Edit contact' : 'Add contact'}\n//           </ButtonForm>\n//           {editingContact && (\n//             <ButtonForm type=\"button\" onClick={handleCancel}>\n//               Cancel\n//             </ButtonForm>\n//           )}\n//         </WrapperForButton>\n//       </Form>\n//     </ContainerForm>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   editingContact: PropTypes.object,\n//   setEditingContact: PropTypes.func,\n//   contacts: PropTypes.array,\n// };\n","import styled from 'styled-components';\nimport { ModalBackdropUi, ModalTitleUi } from 'ui/ModalUi.styled';\n\nexport const ModalDeleteBackdrop = styled(ModalBackdropUi)`\n  top: 0;\n  height: 100%;\n  cursor: pointer;\n`;\n\nexport const ModalDeleteBox = styled.dialog`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  cursor: auto;\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n`;\n\nexport const ModalDeleteTitle = styled(ModalTitleUi)`\n  overflow: hidden;\n  word-break: break-all;\n  margin: 0;\n`;\n\nexport const ModalDeleteButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n`;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ModalDeleteBackdrop,\n  ModalDeleteBox,\n  ModalDeleteButtonWrapper,\n  ModalDeleteTitle,\n} from './styled';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nconst ModalDelete = ({ contact, onDeleteContact, onNoDeleteContact }) => {\n  const dialogRef = useRef(null);\n\n  const onConfirm = () => {\n    onDeleteContact(contact.id);\n    dialogRef.current.close();\n  };\n\n  const onCancel = () => {\n    onNoDeleteContact();\n    dialogRef.current.close();\n  };\n\n  return (\n    <ModalDeleteBackdrop onClick={onCancel}>\n      <ModalDeleteBox ref={dialogRef}>\n        <ModalDeleteTitle>\n          Are you sure you want to delete <br />\n          the contact <br />\n          {contact.name}?\n        </ModalDeleteTitle>\n        <ModalDeleteButtonWrapper>\n          <ButtonUi margin={'0'} type=\"button\" onClick={onConfirm}>\n            Yes\n          </ButtonUi>\n          <ButtonUi margin={'0'} type=\"button\" onClick={onCancel}>\n            No\n          </ButtonUi>\n        </ModalDeleteButtonWrapper>\n      </ModalDeleteBox>\n    </ModalDeleteBackdrop>\n  );\n};\n\nModalDelete.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n  onNoDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ModalDelete;\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n  gap: 10px;\n  list-style: none;\n  padding-inline-start: 0;\n\n  @media (min-width: 640px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: start;\n  font-size: 18px;\n  font-weight: bold;\n  list-style: none;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  margin: 0 auto 5px;\n  box-sizing: border-box;\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  border: 1px solid ${({ theme }) => theme.colors.accentColor};\n  box-shadow: 0 2px 8px ${({ theme }) => theme.colors.boxShadow};\n\n  @media (min-width: 1024px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const ListName = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n`;\n\nexport const ListPhone = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n\nexport const Icon = styled.svg`\n  width: ${({ width }) => width || '15px'};\n  height: ${({ height }) => height || '15px'};\n`;\n\nexport const Button = styled(ButtonUi)`\n  border-radius: 5px;\n  padding: 2px 10px;\n  margin: 10px 0;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport ModalDelete from 'components/ModalDelete';\n\nimport sprite from '../../assets/sprite.svg';\nimport {\n  Button,\n  ButtonWrapper,\n  ContactItem,\n  ContactWrapper,\n  ContactsList,\n  Icon,\n  ListName,\n  ListPhone,\n} from './styled';\n\nexport const ContactList = ({\n  contacts,\n  onDeleteContact,\n  onEditContact,\n  activeContact,\n  setActiveContact,\n  onOpenModal,\n}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const openModal = contact => {\n    setSelectedContact(contact);\n    setShowModal(true);\n    setActiveContact(contact);\n  };\n\n  const closeModal = () => {\n    setSelectedContact(null);\n    setShowModal(false);\n    setActiveContact(null);\n  };\n\n  const callContact = contact => {\n    const phoneNumber = contact.number;\n    window.location.href = `tel:${phoneNumber}`;\n    setActiveContact(contact);\n\n    setTimeout(() => {\n      setActiveContact(null);\n    }, 10000); //це тимчасово\n  };\n\n  const handleEditContact = contact => {\n     if (window.innerWidth <= 1024) {\n       onOpenModal();\n       onEditContact(contact);\n       setActiveContact(contact);\n     } else {\n      onEditContact(contact);\n      setActiveContact(contact);\n     }\n    \n    \n  };\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          const isContactActive =\n            activeContact && activeContact.id === contact.id;\n\n          return (\n            <ContactItem key={contact.id}>\n              <ContactWrapper>\n                <ListName>{contact.name}:</ListName>\n                <ListPhone>{contact.number}</ListPhone>\n              </ContactWrapper>\n              <ButtonWrapper>\n                <Button\n                  aria-label=\"Call the contact\"\n                  type=\"button\"\n                  onClick={() => callContact(contact)}\n                  disabled={isContactActive}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-phone`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Edit contact\"\n                  type=\"button\"\n                  onClick={() => handleEditContact(contact)}\n                  disabled={isContactActive}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-pencil`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Delete contact\"\n                  type=\"button\"\n                  onClick={() => openModal(contact)}\n                  disabled={isContactActive}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-delete`}></use>\n                  </Icon>\n                </Button>\n              </ButtonWrapper>\n            </ContactItem>\n          );\n        })}\n      {showModal && (\n        <ModalDelete\n          contact={selectedContact}\n          onDeleteContact={contactId => {\n            onDeleteContact(contactId);\n            Notify.success(\n              `Contact ${selectedContact.name} successfully deleted.`\n            );\n            closeModal();\n          }}\n          onNoDeleteContact={closeModal}\n        />\n      )}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n  activeContact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  setActiveContact: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  height: 50px;\n  font-size: 20px;\n  font-weight: bold;\n  box-sizing: border-box;\n  border: none;\n  border-radius: 5px;\n  padding: 8px 15px;\n  margin: 0;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  outline: none; /* Видаляє обведення при фокусі */\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.colors.boxShadowAccent};\n    transition: box-shadow 0.3s ease-in-out;\n  }\n`;\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const FilterStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n  margin: 10px 0 30px 0;\n\n  @media (min-width: 640px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 30px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 40px;\n  }\n`;\n\nexport const InputFind = styled(InputUi)`\n  max-width: 320px;\n  margin-left: 10px;\n  vertical-align: top;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { ModalBackdropUi } from 'ui/ModalUi.styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-items: flex-start;\n  text-align: center;\n  gap: 10px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 25px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n\n  @media (min-width: 640px) {\n    font-size: 35px;\n  }\n\n  @media (min-width: 1024px) {\n    font-size: 50px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 70px;\n  }\n`;\n\nexport const NewContactContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n\n  @media (min-width: 640px) {\n    font-size: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\n\nexport const ModalBackdrop = styled(ModalBackdropUi)`\n  top: 0;\n  height: 100%;\n`;\n\nexport const ButtonAddContact = styled(ButtonUi)`\n  font-size: 0;\n  padding: 10px;\n  margin: 0;\n`;\n\nexport const ContactsContainer = styled.div`\n  flex: 2;\n  padding: 0 10px;\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/contacts/reducer';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\n\nimport sprite from '../../assets/sprite.svg';\nimport { TitlePhonebook } from 'components/App/App.styled';\nimport {\n  ButtonAddContact,\n  ContactsContainer,\n  Container,\n  ModalBackdrop,\n  NewContactContainer,\n  NoContacts,\n  TitleContacts,\n} from './styled';\nimport { Icon } from 'components/ContactList/styled';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n  const [editingContact, setEditingContact] = useState(null);\n  const [activeContact, setActiveContact] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isFormVisible, setIsFormVisible] = useState(window.innerWidth > 1024);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsFormVisible(window.innerWidth > 1024);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const onBackdropClick = event => {\n    if (event.target.classList.contains('ModalBackdrop')) {\n      closeModal();\n      setEditingContact(null);\n      setActiveContact(null);\n    }\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        {isFormVisible && (\n          <ContactForm\n            editingContact={editingContact}\n            setEditingContact={setEditingContact}\n            setActiveContact={setActiveContact}\n          />\n        )}\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          <NewContactContainer>\n            <p>Create a new contact</p>\n            <ButtonAddContact onClick={openModal}>\n              <Icon width={'30'} height={'30'}>\n                <use href={`${sprite}#icon-user-plus`}></use>\n              </Icon>\n            </ButtonAddContact>\n          </NewContactContainer>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={changeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onEditContact={handleEditContact}\n                      onDeleteContact={handleDeleteContact}\n                      activeContact={activeContact}\n                      setActiveContact={setActiveContact}\n                      onOpenModal={openModal}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n      {showModal && (\n        <ModalBackdrop className=\"ModalBackdrop\" onClick={onBackdropClick}>\n          <ContactForm\n            editingContact={editingContact}\n            setEditingContact={setEditingContact}\n            setActiveContact={setActiveContact}\n            onCloseModal={closeModal}\n          />\n        </ModalBackdrop>\n      )}\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const ModalBackdropUi = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n"],"names":["TitlePhonebook","styled","theme","colors","secondaryColor","textShadowColor","accentColor","ErrorInputMessageUi","errorColor","inputPlaceholderCommonStyle","css","Text","PlaceholderText","Input","primaryColor","boxShadowPlaceholder","Wrapper","Visibility","InputComponent","props","label","name","formik","useState","isPasswordVisible","setIsPasswordVisible","inputType","iconType","htmlFor","id","type","onClick","href","sprite","touched","errors","ContainerForm","backgroundColor","Form","WrapperForButton","contactInitialState","number","ContactForm","editingContact","setEditingContact","setActiveContact","onCloseModal","contacts","useSelector","selectUserContacts","dispatch","useDispatch","contact","setContact","useEffect","handleSetContact","inputName","value","prevContact","onSubmit","event","preventDefault","form","currentTarget","elements","contactNumber","trim","contactName","nameWords","split","map","word","charAt","toUpperCase","slice","join","duplicateNameNotification","duplicateNumberNotification","editContactThunk","addContactsThunk","Notify","onChange","e","target","required","margin","ModalDeleteBackdrop","ModalBackdropUi","ModalDeleteBox","ModalDeleteTitle","ModalTitleUi","ModalDeleteButtonWrapper","onDeleteContact","onNoDeleteContact","dialogRef","useRef","onCancel","current","close","ref","ContactsList","ContactItem","boxShadow","ContactWrapper","ListName","ListPhone","ButtonWrapper","Icon","width","height","Button","ButtonUi","ContactList","onEditContact","activeContact","onOpenModal","showModal","setShowModal","selectedContact","setSelectedContact","showContacts","Array","isArray","length","closeModal","isContactActive","phoneNumber","window","location","setTimeout","callContact","disabled","innerWidth","handleEditContact","openModal","contactId","InputUi","boxShadowAccent","FilterStyled","InputFind","Filter","Container","TitleContacts","NewContactContainer","ModalBackdrop","ButtonAddContact","ContactsContainer","NoContacts","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","isFormVisible","setIsFormVisible","handleResize","addEventListener","removeEventListener","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","deleteContactsThunk","className","classList","contains","backdropColor","ModalBoxUi","ModalFormUi"],"sourceRoot":""}