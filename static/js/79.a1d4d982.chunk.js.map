{"version":3,"file":"static/js/79.a1d4d982.chunk.js","mappings":"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","sources":["components/App/App.styled.js","ui/ErrorInputMessageUi.styled.js","components/Input/styled.js","components/Input/index.jsx","components/ContactForm/styled.js","components/ContactForm/index.jsx","components/ModalDelete/styled.js","components/ModalDelete/index.jsx","assets/sprite.svg","components/ContactList/styled.js","components/ContactList/index.jsx","ui/InputUi.styled.js","components/Filter/styled.js","components/Filter/index.jsx","pages/ContactsPage/styled.js","pages/ContactsPage/index.jsx","ui/ModalUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-size: 100px;\n  font-weight: bold;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 20px 30px,\n    ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n`;\n","import styled from 'styled-components';\n\nexport const ErrorInputMessageUi = styled.p`\n  color: ${({ theme }) => theme.colors.errorColor};\n  font-family: Roboto;\n  font-size: 14px;\n  //   font-weight: 400;\n  line-height: 1.17;\n  margin: 0;\n  text-shadow: none;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  height: 50px;\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  padding: 8px 15px;\n  outline: none; /* Видаляє обведення при фокусі */\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ErrorInputMessageUi } from 'ui/ErrorInputMessageUi.styled';\nimport { Input } from './styled';\n\nexport const InputComponent = props => {\n  const { label, name, wrapperStyle, formik } = props;\n  const Wrapper = wrapperStyle;\n  const htmlFor = `input-${name}`;\n  return (\n    <Wrapper>\n      <label htmlFor={htmlFor}>{label}</label>\n      <Input id={htmlFor} name={name} {...props} />\n      {formik && formik.touched[name] && formik.errors[name] && (\n        <ErrorInputMessageUi>{formik.errors[name]}</ErrorInputMessageUi>\n      )}\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  wrapperStyle: PropTypes.object,\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n    handleChange: PropTypes.func,\n    handleBlur: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContainerForm = styled.div`\n  flex: 1;\n  margin: 100px 0 0 0;\n  padding: 0 0 0 30px;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  padding: 10px;\n  border: 2px solid ${({ theme }) => theme.colors.accentColor};\n  border-radius: 4px;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 5px 0 5px;\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 5px 0 1px;\n  position: sticky;\n  top: 50px;\n`;\n\nexport const WrapperStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const WrapperForButton = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin: 10px 0 0 0;\n`;\n\nexport const ButtonForm = styled(ButtonUi)`\n  margin: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport { addContactsThunk, editContactThunk } from 'redux/contacts/operations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport { InputComponent } from 'components/Input';\n\nimport { validateContactName, validateContactNumber } from 'helpers/helper';\n\nimport {\n  ButtonForm,\n  ContainerForm,\n  Form,\n  WrapperForButton,\n  WrapperStyle,\n} from './styled';\n\nexport const ContactForm = ({ editingContact, setEditingContact }) => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  useEffect(() => {\n    if (editingContact) {\n      setContactName(editingContact.name);\n      setContactNumber(editingContact.number);\n    }\n  }, [editingContact]);\n\n  const handleCancel = () => {\n    setEditingContact(null);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const number = form.elements.contactNumber.value.trim();\n    let name = form.elements.contactName.value.trim();\n    const nameWords = name.split(' ');\n    name = nameWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n    if (\n      !validateContactName(contacts, name, editingContact) ||\n      !validateContactNumber(contacts, number, editingContact)\n    ) {\n      return;\n    }\n\n    if (editingContact) {\n      dispatch(editContactThunk({ id: editingContact.id, name, number }));\n    } else {\n      dispatch(addContactsThunk({ name, number }));\n    }\n\n    Notify.success(\n      `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n    );\n\n    setContactName('');\n    setContactNumber('');\n    setEditingContact(null);\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <InputComponent\n          label=\"Name:\"\n          type=\"text\"\n          name=\"contactName\"\n          placeholder=\"Enter name\"\n          value={contactName}\n          onChange={e => setContactName(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n        />\n        <InputComponent\n          label=\"Number:\"\n          type=\"text\"\n          name=\"contactNumber\"\n          placeholder=\"Enter phone number\"\n          value={contactNumber}\n          onChange={e => setContactNumber(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n        />\n        <WrapperForButton>\n          <ButtonForm type=\"submit\">\n            {editingContact ? 'Edit contact' : 'Add contact'}\n          </ButtonForm>\n          {editingContact && (\n            <ButtonForm type=\"button\" onClick={handleCancel}>\n              Cancel\n            </ButtonForm>\n          )}\n        </WrapperForButton>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  editingContact: PropTypes.object,\n  setEditingContact: PropTypes.func,\n  contacts: PropTypes.array,\n};\n\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\n\n// import { addContactsThunk, editContactThunk } from 'redux/contactsOperations';\n// import { selectUserContacts } from 'redux/selectors';\n\n// import Notiflix from 'notiflix';\n\n// import {\n//   ButtonForm,\n//   ContainerForm,\n//   Form,\n//   InputStyle,\n//   WrapperForButton,\n//   WrapperStyle,\n// } from './FormAddContact.styled';\n// import { InputComponent } from 'components/Input/Input';\n// import { useFormik } from 'formik';\n// import { contactSchema } from 'schemas';\n\n// export const ContactForm = ({ editingContact, setEditingContact }) => {\n//   const contacts = useSelector(selectUserContacts);\n//   const dispatch = useDispatch();\n\n//   const formik = useFormik({\n//     initialValues: {\n//       contactName: '',\n//       contactNumber: '',\n//     },\n//     validationSchema: contactSchema,\n//     onSubmit: values => handleSubmit(values),\n//   });\n\n//   // useEffect(() => {\n//   //   if (editingContact && formik.values.contactName !== editingContact.name) {\n//   //     formik.setValues({\n//   //       contactName: editingContact.name,\n//   //       contactNumber: editingContact.number,\n//   //     });\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   // useEffect(() => {\n//   //   if (editingContact) {\n//   //     if (\n//   //       formik.values.contactName !== editingContact.name ||\n//   //       formik.values.contactNumber !== editingContact.number\n//   //     ) {\n//   //       formik.setValues({\n//   //         contactName: editingContact.name,\n//   //         contactNumber: editingContact.number,\n//   //       });\n//   //     }\n//   //   }\n//   // }, [editingContact, formik]);\n\n//   useEffect(() => {\n//      console.log('Editing Contact (contactform.jsx):', editingContact);\n//      console.log('Formik values (contactform.jsx):', formik.values);\n//     if (\n//       editingContact &&\n//       (formik.values.contactName !== editingContact.name ||\n//         formik.values.contactNumber !== editingContact.number)\n//     ) {\n//       console.log('Setting Formik values...');\n//       formik.setValues({\n//         contactName: editingContact.name,\n//         contactNumber: editingContact.number,\n//       });\n//     }\n//   }, [editingContact, formik]);\n\n//   const handleCancel = () => {\n//     setEditingContact(null);\n//     formik.resetForm();\n//   };\n\n//   const handleSubmit = ({ contactName, contactNumber }) => {\n//     const nameWords = contactName.split(' ');\n//     const name = nameWords\n//       .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n//       .join(' ');\n\n//     if (\n//       contacts.some(\n//         contact => contact.name === name && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n//     if (\n//       contacts.some(\n//         contact =>\n//           contact.number === contactNumber && editingContact !== contact\n//       )\n//     )\n//       return Notiflix.Notify.info(\n//         `Contact with number ${contactNumber} already exists!`\n//       );\n\n//     if (editingContact) {\n//       dispatch(\n//         editContactThunk({ id: editingContact.id, name, number: contactNumber })\n//       );\n//     } else {\n//       dispatch(addContactsThunk({ name, number: contactNumber }));\n//     }\n\n//     Notiflix.Notify.success(\n//       `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n//     );\n\n//     formik.resetForm();\n//     setEditingContact(null);\n//   };\n\n//   return (\n//     <ContainerForm>\n//       <Form onSubmit={formik.handleSubmit}>\n//         <InputComponent\n//           label=\"Name:\"\n//           type=\"text\"\n//           name=\"contactName\"\n//           placeholder=\"Enter a name\"\n//           value={formik.values.contactName}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <InputComponent\n//           label=\"Number:\"\n//           type=\"text\"\n//           name=\"contactNumber\"\n//           placeholder=\"Enter phone number\"\n//           value={formik.values.contactNumber}\n//           onChange={formik.handleChange}\n//           required\n//           wrapperStyle={WrapperStyle}\n//           inputStyle={InputStyle}\n//           formik={formik}\n//         />\n//         <WrapperForButton>\n//           <ButtonForm type=\"submit\">\n//             {editingContact ? 'Edit contact' : 'Add contact'}\n//           </ButtonForm>\n//           {editingContact && (\n//             <ButtonForm type=\"button\" onClick={handleCancel}>\n//               Cancel\n//             </ButtonForm>\n//           )}\n//         </WrapperForButton>\n//       </Form>\n//     </ContainerForm>\n//   );\n// };\n\n// ContactForm.propTypes = {\n//   editingContact: PropTypes.object,\n//   setEditingContact: PropTypes.func,\n//   contacts: PropTypes.array,\n// };\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { ModalBackdropUi, ModalBoxUi, ModalTitleUi } from 'ui/ModalUi.styled';\n\nexport const ModalDeleteBackdrop = styled(ModalBackdropUi)`\n  top: 0;\n  height: 100%;\n  cursor: pointer;\n`;\n\nexport const ModalDeleteBox = styled(ModalBoxUi)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  cursor: auto;\n`;\n\nexport const ModalDeleteTitle = styled(ModalTitleUi)`\n  overflow: hidden;\n  word-break: break-all;\n  margin: 0;\n`;\n\nexport const ModalDeleteButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const ModalDeleteButton = styled(ButtonUi)`\n  margin: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ModalDeleteBackdrop,\n  ModalDeleteBox,\n  ModalDeleteButton,\n  ModalDeleteButtonWrapper,\n  ModalDeleteTitle,\n} from './styled';\n\nconst ModalDelete = ({ contact, onDeleteContact, onNoDeleteContact }) => {\n  const onConfirm = () => {\n    onDeleteContact(contact.id);\n  };\n\n  const onCancel = () => {\n    onNoDeleteContact();\n  };\n\n  const onBackdropClick = event => {\n    if (event.target.classList.contains('ModalDeleteBackdrop')) {\n      onCancel();\n    }\n  };\n\n  return (\n    <ModalDeleteBackdrop\n      className=\"ModalDeleteBackdrop\"\n      onClick={onBackdropClick}\n    >\n      <ModalDeleteBox>\n        <ModalDeleteTitle>\n          Are you sure you want to delete <br />\n          the contact <br />\n          {contact.name}?\n        </ModalDeleteTitle>\n        <ModalDeleteButtonWrapper>\n          <ModalDeleteButton type=\"button\" onClick={onConfirm}>\n            Yes\n          </ModalDeleteButton>\n          <ModalDeleteButton type=\"button\" onClick={onCancel}>\n            No\n          </ModalDeleteButton>\n        </ModalDeleteButtonWrapper>\n      </ModalDeleteBox>\n    </ModalDeleteBackdrop>\n  );\n};\n\nModalDelete.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n  onNoDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ModalDelete;\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-phone\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 20c-2 2-2 4-4 4s-4-2-6-4-4-4-4-6 2-2 4-4-4-8-6-8-6 6-6 6c0 4 4.109 12.109 8 16s12 8 16 8c0 0 6-4 6-6s-6-8-8-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-delete\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1zM11 28c0.552 0 1-0.447 1-1v-14c0-0.553-0.448-1-1-1s-1 0.447-1 1v14c0 0.553 0.448 1 1 1zM29 6h-4v-2c0-2.209-1.791-4-4-4h-10c-2.209 0-4 1.791-4 4v2h-4l-3 3c0 0.553 0.448 1 1 1h3v20c0 1.104 0.896 2 2 2h20c1.104 0 2-0.896 2-2v-20h3c0.553 0 1-0.447 1-1l-3-3zM10 4c0-1.104 0.896-2 2-2h8c1.104 0 2 0.896 2 2v2h-12v-2zM26 29c0 0.553-0.447 1-1 1h-18c-0.552 0-1-0.447-1-1v-19h20v19zM16 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.bd874ef2f50889145201eb83c211610d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: start;\n  font-size: 20px;\n  font-weight: bold;\n  list-style: none;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  margin: 0 auto 5px;\n  box-sizing: border-box;\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  border: 1px solid ${({ theme }) => theme.colors.accentColor};\n  box-shadow: 0 2px 8px ${({ theme }) => theme.colors.boxShadow};\n\n  &:hover {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 10px 0px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const ListName = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n`;\n\nexport const ListPhone = styled.span`\n  overflow: hidden;\n  word-break: break-all;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n\nexport const Icon = styled.svg`\n  width: 15px;\n  height: 15px;\n`;\n\nexport const Button = styled(ButtonUi)`\n  border-radius: 5px;\n  padding: 0;\n  width: 35px;\n  margin: 10px 0;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\n\nimport ModalDelete from 'components/ModalDelete';\n\nimport sprite from '../../assets/sprite.svg';\nimport {\n  Button,\n  ButtonWrapper,\n  ContactItem,\n  ContactWrapper,\n  ContactsList,\n  Icon,\n  ListName,\n  ListPhone,\n} from './styled';\n\nexport const ContactList = ({ contacts, onDeleteContact, onEditContact }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const openModal = contact => {\n    setSelectedContact(contact);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setSelectedContact(null);\n    setShowModal(false);\n  };\n\n  const callContact = contact => {\n    const phoneNumber = contact.number;\n    window.location.href = `tel:${phoneNumber}`;\n  };\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <ContactWrapper>\n                <ListName>{contact.name}:</ListName>\n                <ListPhone>{contact.number}</ListPhone>\n              </ContactWrapper>\n              <ButtonWrapper>\n                <Button\n                  aria-label=\"Call the contact\"\n                  type=\"button\"\n                  onClick={() => callContact(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-phone`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Edit contact\"\n                  type=\"button\"\n                  onClick={() => onEditContact(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-pencil`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Delete contact\"\n                  type=\"button\"\n                  onClick={() => openModal(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-delete`}></use>\n                  </Icon>\n                </Button>\n              </ButtonWrapper>\n            </ContactItem>\n          );\n        })}\n      {showModal && (\n        <ModalDelete\n          contact={selectedContact}\n          onDeleteContact={contactId => {\n            onDeleteContact(contactId);\n            Notify.success(\n              `Contact ${selectedContact.name} successfully deleted.`\n            );\n            closeModal();\n          }}\n          onNoDeleteContact={closeModal}\n        />\n      )}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  box-sizing: border-box;\n  height: 50px;\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  padding: 8px 15px;\n  outline: none; /* Видаляє обведення при фокусі */\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const FilterStyled = styled.label`\n  display: block;\n  font-size: 40px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n  margin: 10px 0 30px 0;\n`;\n\nexport const InputFind = styled(InputUi)`\n  width: 320px;\n  margin: 0 0 0 10px;\n  vertical-align: top;\n\n  &: hover, focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 20px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-items: flex-start;\n  text-align: center;\n  gap: 10px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 70px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin: 10px 0;\n`;\n\nexport const ContactsContainer = styled.div`\n  flex: 2;\n  padding: 0 10px;\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  text-align: center;\n  margin: 100px 0 0 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contacts/operations';\nimport { setFilter } from 'redux/contacts/reducer';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\n\nimport { TitlePhonebook } from 'components/App/App.styled';\nimport {\n  ContactsContainer,\n  Container,\n  NoContacts,\n  TitleContacts,\n} from './styled';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n  const [editingContact, setEditingContact] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        <ContactForm\n          editingContact={editingContact}\n          setEditingContact={setEditingContact}\n        />\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={changeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onEditContact={handleEditContact}\n                      onDeleteContact={handleDeleteContact}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const ModalBackdropUi = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n\nexport const ModalSecondWrapperUi = styled.div`\n  display: grid;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  font-size: 20px;\n  margin: 0 0 5px 0;\n`;\n"],"names":["TitlePhonebook","styled","theme","colors","secondaryColor","textShadowColor","accentColor","ErrorInputMessageUi","errorColor","Input","InputComponent","props","label","name","wrapperStyle","formik","Wrapper","htmlFor","id","touched","errors","ContainerForm","Form","WrapperStyle","WrapperForButton","ButtonForm","ButtonUi","ContactForm","editingContact","setEditingContact","contacts","useSelector","selectUserContacts","dispatch","useDispatch","useState","contactName","setContactName","contactNumber","setContactNumber","useEffect","number","onSubmit","event","preventDefault","form","currentTarget","elements","value","trim","nameWords","split","map","word","charAt","toUpperCase","slice","join","validateContactName","validateContactNumber","editContactThunk","addContactsThunk","Notify","type","placeholder","onChange","e","target","required","onClick","ModalDeleteBackdrop","ModalBackdropUi","ModalDeleteBox","ModalBoxUi","ModalDeleteTitle","ModalTitleUi","ModalDeleteButtonWrapper","ModalDeleteButton","contact","onDeleteContact","onNoDeleteContact","onCancel","className","classList","contains","ContactsList","ContactItem","primaryColor","boxShadow","ContactWrapper","ListName","ListPhone","ButtonWrapper","Icon","Button","ContactList","onEditContact","showModal","setShowModal","selectedContact","setSelectedContact","showContacts","Array","isArray","length","closeModal","phoneNumber","window","location","href","callContact","sprite","openModal","contactId","InputUi","FilterStyled","InputFind","Filter","Container","TitleContacts","ContactsContainer","NoContacts","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","deleteContactsThunk","backdropColor","backgroundColor","ModalFormUi","ModalSecondWrapperUi"],"sourceRoot":""}