{"version":3,"file":"static/js/635.95754b64.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Button/Button.styled.js","components/ContactForm/FormAddContact.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.styled.js","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const TitlePhonebook = styled.h1`\n  font-family: 'Roboto';\n  font-size: 100px;\n  font-weight: bold;\n  width: 100%;\n  color: ${() => colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${() => colors.textShadowColor} 10px 0 5px;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  box-shadow: ${() => colors.accentColor} 0px 20px 30px,\n    ${() => colors.accentColor} 0px 2px 5px;\n`;\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const Button = styled.button`\n  background-color: ${() => colors.accentColor};\n  color: ${() => colors.textShadowColor};\n  box-shadow: 5px 5px 2px 0px ${() => colors.textShadowColor};\n  font-family: 'Roboto';\n  font-weight: bold;\n  font-size: 25px;\n  border: none;\n  border-radius: 10px;\n  padding: 15px;\n  max-height: auto;\n  max-width: 200px;\n  margin: 20px auto;\n\n  &: hover {\n    outline-color: transparent;\n    outline-style: solid;\n    box-shadow: 10px 10px 5px 0px ${() => colors.textShadowColor};\n    transition: 0.3s;\n    border: 1px solid ${() => colors.textShadowColor};\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const ContainerForm = styled.div`\n  margin-top: 100px;\n  padding-left: 30px;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  width: 600px;\n  margin: 0 auto;\n  border: 2px solid ${() => colors.accentColor};\n  border-radius: 4px;\n  box-shadow: ${() => colors.accentColor} 5px 0 5px;\n  padding-top: 20px;\n  font-family: 'Roboto';\n  font-size: 40px;\n  font-weight: bold;\n\n  text-align: center;\n  color: ${() => colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${() => colors.textShadowColor} 5px 0 1px;\n  position: sticky;\n  top: 50px;\n`;\n\nexport const Input = styled.input`\n  width: 550px;\n  height: 25px;\n  margin: 0 auto;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${() => colors.secondaryColor};\n\n  &: hover {\n    box-shadow: ${() => colors.accentColor} 0px 5px 10px,\n      ${() => colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addContactsThunk } from 'redux/contactsOperations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport Notiflix from 'notiflix';\n\nimport { Button } from 'components/Button/Button.styled';\nimport { ContainerForm, Form, Input } from './FormAddContact.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value.trim();\n    const number = form.elements.contactNumber.value.trim();\n\n    if (contacts.some(contact => contact.name === name))\n      return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n    if (contacts.some(contact => contact.number === number))\n      return Notiflix.Notify.info(\n        `Contact with number ${number} already exists!`\n      );\n\n    dispatch(addContactsThunk({ name, number }));\n\n    setContactName('');\n    setContactNumber('');\n\n    Notiflix.Notify.success(`Contact ${name} successfully added.`);\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <label>Name: </label>\n        <Input\n          type=\"text\"\n          name=\"contactName\"\n          value={contactName}\n          onChange={e => setContactName(e.target.value)}\n          required\n        />\n\n        <label>Number: </label>\n        <Input\n          type=\"text\"\n          name=\"contactNumber\"\n          value={contactNumber}\n          onChange={e => setContactNumber(e.target.value)}\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const ContactItem = styled.li`\n  font-family: 'Roboto';\n  font-size: 35px;\n  font-weight: bold;\n  color: ${() => colors.primaryColor};\n  text-align: center;\n  text-shadow: ${() => colors.textShadowColor} 2px 0 1px;\n  margin: 0 auto 5px;\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: 750px;\n  border-radius: 6px;\n  padding: 12px 20px;\n  border: 1px solid ${() => colors.accentColor};\n  box-sizing: border-box;\n  box-shadow: 0 2px 8px ${() => colors.boxShadow};\n\n  &: hover {\n    box-shadow: ${() => colors.accentColor} 0px 10px 10px 0px;\n  }\n`;\n\nexport const ListPhone = styled.span`\n  margin-left: 10px;\n  color: ${() => colors.textShadowColor};\n`;\n\nexport const ButtonDelete = styled.button`\n  background-color: ${() => colors.accentColor};\n  color: ${() => colors.textShadowColor};\n  font-family: 'Roboto';\n  font-size: 30px;\n  border: none;\n  border-radius: 5px;\n  height: 32px;\n  width: 50px;\n  margin-left: 10px;\n  vertical-align: top;\n  box-shadow: 2px 2px 1px 0px ${() => colors.textShadowColor};\n\n  &: hover {\n    outline-color: transparent;\n    transition: 0.3s;\n    transform: scale(1.03);\n    border: 1px solid ${() => colors.textShadowColor};\n    box-shadow: 10px 10px 5px -5px ${() => colors.textShadowColor};\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ButtonDelete,\n  ContactItem,\n  ContactsList,\n  ListPhone,\n} from './ContactListStyled.styled';\nimport Notiflix from 'notiflix';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <div>\n                <span>{contact.name}</span>:\n                <ListPhone>{contact.number}</ListPhone>\n              </div>\n              <ButtonDelete\n                aria-label=\"Delete contact\"\n                type=\"button\"\n                onClick={() => {\n                  onDeleteContact(contact.id);\n                  Notiflix.Notify.success(\n                    `Contact ${contact.name} successfully deleted.`\n                  );\n                }}\n              >\n                &times;\n              </ButtonDelete>\n            </ContactItem>\n          );\n        })}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const FilterStyled = styled.label`\n  display: block;\n  font-family: 'Roboto';\n  font-size: 40px;\n  font-weight: bold;\n  color: ${() => colors.primaryColor};\n  text-align: center;\n  text-shadow: ${() => colors.textShadowColor} 2px 0 0;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const InputFind = styled.input`\n  width: 320px;\n  height: 40px;\n  margin-left: 10px;\n  vertical-align: top;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${() => colors.secondaryColor};\n\n  \n  &: hover, focus {\n    box-shadow: ${() => colors.accentColor} 0px 10px 20px,\n      ${() => colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './FilterStyled.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { colors } from 'theme';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  gap: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-family: 'Roboto';\n  font-size: 70px;\n  font-weight: bold;\n  color: ${() => colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${() => colors.textShadowColor} 10px 0 5px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n`;\n\nexport const NoContacts = styled.p`\n  font-family: 'Roboto';\n  font-size: 30px;\n  font-weight: bold;\n  color: ${() => colors.textShadowColor};\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contactsOperations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { TitlePhonebook } from 'components/App/App.styled';\nimport {\n  ContactsContainer,\n  Container,\n  NoContacts,\n  TitleContacts,\n} from './ContactsPage.styled';\nimport { setFilter } from 'redux/contactsReducer';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        <ContactForm />\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={changeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onDeleteContact={handleDeleteContact}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["TitlePhonebook","styled","colors","Button","ContainerForm","Form","Input","ContactForm","contacts","useSelector","selectUserContacts","dispatch","useDispatch","useState","contactName","setContactName","contactNumber","setContactNumber","onSubmit","event","preventDefault","form","currentTarget","name","elements","value","trim","number","some","contact","Notiflix","addContactsThunk","type","onChange","e","target","required","ContactsList","ContactItem","ListPhone","ButtonDelete","ContactList","onDeleteContact","showContacts","Array","isArray","length","map","onClick","id","FilterStyled","InputFind","Filter","Container","TitleContacts","ContactsContainer","NoContacts","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","useEffect","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","contactId","deleteContactsThunk"],"sourceRoot":""}