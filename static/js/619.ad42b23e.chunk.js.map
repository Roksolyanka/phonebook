{"version":3,"file":"static/js/619.ad42b23e.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Input/Input.jsx","components/ContactForm/FormAddContact.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.styled.js","assets/sprite.svg","components/ModalDelete/ModalDelete.styled.js","components/ModalDelete/ModalDelete.jsx","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/Contacts.jsx","ui/InputUi.styled.js","ui/ModalUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-size: 100px;\n  font-weight: bold;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 20px 30px,\n    ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const InputComponent = ({\n  label,\n  name,\n  type,\n  value,\n  onChange,\n  required,\n  minLength,\n  autoComplete,\n  wrapperStyle,\n  inputStyle,\n}) => {\n  const Wrapper = wrapperStyle;\n  const Input = inputStyle;\n  const htmlFor = `input-${name}`;\n  return (\n    <Wrapper>\n      <label htmlFor={htmlFor}>{label}</label>\n      <Input\n        type={type}\n        id={htmlFor}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        minLength={minLength}\n        autoComplete={autoComplete}\n      />\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n  minLength: PropTypes.number,\n  autoComplete: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const ContainerForm = styled.div`\n  flex: 1;\n  margin-top: 100px;\n  padding-left: 30px;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  padding: 10px;\n  border: 2px solid ${({ theme }) => theme.colors.accentColor};\n  border-radius: 4px;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 5px 0 5px;\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 5px 0 1px;\n  position: sticky;\n  top: 50px;\n`;\n\nexport const WrapperStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputStyle = styled(InputUi)`\n  width: 100%;\n`;\n\nexport const WrapperForButton = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 10px;\n`;\n\nexport const ButtonForm = styled(ButtonUi)`\n  margin: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addContactsThunk, editContactThunk } from 'redux/contactsOperations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport Notiflix from 'notiflix';\n\nimport {\n  ButtonForm,\n  ContainerForm,\n  Form,\n  InputStyle,\n  WrapperForButton,\n  WrapperStyle,\n} from './FormAddContact.styled';\nimport { InputComponent } from 'components/Input/Input';\n\nexport const ContactForm = ({ editingContact, setEditingContact }) => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  useEffect(() => {\n    if (editingContact) {\n      setContactName(editingContact.name);\n      setContactNumber(editingContact.number);\n    }\n  }, [editingContact]);\n\n  const handleCancel = () => {\n    setEditingContact(null);\n    setContactName('');\n    setContactNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const number = form.elements.contactNumber.value.trim();\n    let name = form.elements.contactName.value.trim();\n    const nameWords = name.split(' ');\n    name = nameWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n    if (\n      contacts.some(\n        contact => contact.name === name && editingContact !== contact\n      )\n    )\n      return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n    if (\n      contacts.some(\n        contact => contact.number === number && editingContact !== contact\n      )\n    )\n      return Notiflix.Notify.info(\n        `Contact with number ${number} already exists!`\n      );\n\n    if (editingContact) {\n      dispatch(editContactThunk({ id: editingContact.id, name, number }));\n    } else {\n      dispatch(addContactsThunk({ name, number }));\n    }\n\n    Notiflix.Notify.success(\n      `Contact ${name} successfully ${editingContact ? 'edited' : 'added'}.`\n    );\n\n    setContactName('');\n    setContactNumber('');\n    setEditingContact(null);\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <InputComponent\n          label=\"Name:\"\n          type=\"text\"\n          name=\"contactName\"\n          value={contactName}\n          onChange={e => setContactName(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n          inputStyle={InputStyle}\n        />\n        <InputComponent\n          label=\"Number:\"\n          type=\"text\"\n          name=\"contactNumber\"\n          value={contactNumber}\n          onChange={e => setContactNumber(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n          inputStyle={InputStyle}\n        />\n        <WrapperForButton>\n          <ButtonForm type=\"submit\">\n            {editingContact ? 'Edit contact' : 'Add contact'}\n          </ButtonForm>\n          {editingContact && (\n            <ButtonForm type=\"button\" onClick={handleCancel}>\n              Cancel\n            </ButtonForm>\n          )}\n        </WrapperForButton>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  editingContact: PropTypes.object,\n  setEditingContact: PropTypes.func,\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\nimport { BoxUi } from 'ui/BoxUi.styled';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: start;\n  font-size: 20px;\n  font-weight: bold;\n  list-style: none;\n  width: 400px;\n  padding: 12px 20px;\n  margin: 0 auto 5px;\n  box-sizing: border-box;\n  border-radius: 6px;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  border: 1px solid ${({ theme }) => theme.colors.accentColor};\n  box-shadow: 0 2px 8px ${({ theme }) => theme.colors.boxShadow};\n\n  &: hover {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 10px 0px;\n  }\n`;\n\nexport const ContactWrapper = styled(BoxUi)`\n  flex-direction: column;\n  align-items: start;\n`;\n\nexport const ListPhone = styled.span`\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n`;\n\nexport const Icon = styled.svg`\n  width: 15px;\n  height: 15px;\n`;\n\nexport const Button = styled(ButtonUi)`\n  border-radius: 5px;\n  padding: 0;\n  width: 35px;\n  margin: 10px 0;\n`;\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-phone\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 20c-2 2-2 4-4 4s-4-2-6-4-4-4-4-6 2-2 4-4-4-8-6-8-6 6-6 6c0 4 4.109 12.109 8 16s12 8 16 8c0 0 6-4 6-6s-6-8-8-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-delete\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1zM11 28c0.552 0 1-0.447 1-1v-14c0-0.553-0.448-1-1-1s-1 0.447-1 1v14c0 0.553 0.448 1 1 1zM29 6h-4v-2c0-2.209-1.791-4-4-4h-10c-2.209 0-4 1.791-4 4v2h-4l-3 3c0 0.553 0.448 1 1 1h3v20c0 1.104 0.896 2 2 2h20c1.104 0 2-0.896 2-2v-20h3c0.553 0 1-0.447 1-1l-3-3zM10 4c0-1.104 0.896-2 2-2h8c1.104 0 2 0.896 2 2v2h-12v-2zM26 29c0 0.553-0.447 1-1 1h-18c-0.552 0-1-0.447-1-1v-19h20v19zM16 28c0.553 0 1-0.447 1-1v-14c0-0.553-0.447-1-1-1s-1 0.447-1 1v14c0 0.553 0.447 1 1 1z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.bd874ef2f50889145201eb83c211610d.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport { ModalBackdropUi, ModalBoxUi, ModalTitleUi } from 'ui/ModalUi.styled';\n\nexport const ModalDeleteBackdrop = styled(ModalBackdropUi)`\n  top: 0;\n  height: 100%;\n  cursor: pointer;\n`;\n\nexport const ModalDeleteBox = styled(ModalBoxUi)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  cursor: auto;\n`;\n\nexport const ModalDeleteTitle = styled(ModalTitleUi)`\n  overflow: auto;\n`;\n\nexport const ModalDeleteButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const ModalDeleteButton = styled(ButtonUi)`\n  margin: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ModalDeleteBackdrop,\n  ModalDeleteBox,\n  ModalDeleteButton,\n  ModalDeleteButtonWrapper,\n  ModalDeleteTitle,\n} from './ModalDelete.styled';\n\nconst ModalDelete = ({ contact, onDeleteContact, onNoDeleteContact }) => {\n  const onConfirm = () => {\n    onDeleteContact(contact.id);\n  };\n\n  const onCancel = () => {\n    onNoDeleteContact();\n  };\n\n  const onBackdropClick = event => {\n    if (event.target.classList.contains('ModalDeleteBackdrop')) {\n      onCancel();\n    }\n  };\n\n  return (\n    <ModalDeleteBackdrop\n      className=\"ModalDeleteBackdrop\"\n      onClick={onBackdropClick}\n    >\n      <ModalDeleteBox>\n        <ModalDeleteTitle>\n          Are you sure you want to delete the contact <br /> {contact.name}?\n        </ModalDeleteTitle>\n        <ModalDeleteButtonWrapper>\n          <ModalDeleteButton type=\"button\" onClick={onConfirm}>\n            Yes\n          </ModalDeleteButton>\n          <ModalDeleteButton type=\"button\" onClick={onCancel}>\n            No\n          </ModalDeleteButton>\n        </ModalDeleteButtonWrapper>\n      </ModalDeleteBox>\n    </ModalDeleteBackdrop>\n  );\n};\n\nModalDelete.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n  onNoDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ModalDelete;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport {\n  Button,\n  ButtonWrapper,\n  ContactItem,\n  ContactWrapper,\n  ContactsList,\n  Icon,\n  ListPhone,\n} from './ContactListStyled.styled';\nimport sprite from '../../assets/sprite.svg';\nimport ModalDelete from 'components/ModalDelete/ModalDelete';\n\nexport const ContactList = ({ contacts, onDeleteContact, onEditContact }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  const openModal = contact => {\n    setSelectedContact(contact);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setSelectedContact(null);\n    setShowModal(false);\n  };\n\n  const callContact = contact => {\n    const phoneNumber = contact.number;\n    window.location.href = `tel:${phoneNumber}`;\n  };\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <ContactWrapper>\n                <span>{contact.name}:</span>\n                <ListPhone>{contact.number}</ListPhone>\n              </ContactWrapper>\n              <ButtonWrapper>\n                <Button\n                  aria-label=\"Call the contact\"\n                  type=\"button\"\n                  onClick={() => callContact(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-phone`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Edit contact\"\n                  type=\"button\"\n                  onClick={() => onEditContact(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-pencil`}></use>\n                  </Icon>\n                </Button>\n                <Button\n                  aria-label=\"Delete contact\"\n                  type=\"button\"\n                  onClick={() => openModal(contact)}\n                >\n                  <Icon>\n                    <use href={`${sprite}#icon-delete`}></use>\n                  </Icon>\n                </Button>\n              </ButtonWrapper>\n            </ContactItem>\n          );\n        })}\n      {showModal && (\n        <ModalDelete\n          contact={selectedContact}\n          onDeleteContact={contactId => {\n            onDeleteContact(contactId);\n            Notiflix.Notify.success(\n              `Contact ${selectedContact.name} successfully deleted.`\n            );\n            closeModal();\n          }}\n          onNoDeleteContact={closeModal}\n        />\n      )}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n  onEditContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const FilterStyled = styled.label`\n  display: block;\n  font-size: 40px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const InputFind = styled(InputUi)`\n  width: 320px;\n  margin-left: 10px;\n  vertical-align: top;\n\n  &: hover, focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 20px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './FilterStyled.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { BoxUi } from 'ui/BoxUi.styled';\n\nexport const Container = styled(BoxUi)`\n  align-items: flex-start;\n  text-align: center;\n  gap: 10px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 70px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsContainer = styled.div`\n  flex: 2;\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contactsOperations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { TitlePhonebook } from 'components/App/App.styled';\nimport {\n  ContactsContainer,\n  Container,\n  NoContacts,\n  TitleContacts,\n} from './ContactsPage.styled';\nimport { setFilter } from 'redux/contactsReducer';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n  const [editingContact, setEditingContact] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        <ContactForm\n          editingContact={editingContact}\n          setEditingContact={setEditingContact}\n        />\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={changeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onEditContact={handleEditContact}\n                      onDeleteContact={handleDeleteContact}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  box-sizing: border-box;\n  height: 50px;\n  margin: 0;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  padding: 8px 15px;\n\n  &: hover {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import styled from 'styled-components';\nimport { InputUi } from './InputUi.styled';\nimport { BoxUi } from './BoxUi.styled';\n\nexport const ModalBackdropUi = styled(BoxUi)`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  max-height: 80vh;\n  padding: 20px 20px 20px 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n\nexport const ModalSecondWrapperUi = styled.div`\n  display: grid;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  font-size: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const ModalInputUi = styled(InputUi)`\n  width: 300px;\n`;\n"],"names":["TitlePhonebook","styled","theme","colors","secondaryColor","textShadowColor","accentColor","InputComponent","label","name","type","value","onChange","required","minLength","autoComplete","Wrapper","wrapperStyle","Input","inputStyle","htmlFor","id","ContainerForm","Form","WrapperStyle","InputStyle","InputUi","WrapperForButton","ButtonForm","ButtonUi","ContactForm","editingContact","setEditingContact","contacts","useSelector","selectUserContacts","dispatch","useDispatch","useState","contactName","setContactName","contactNumber","setContactNumber","useEffect","number","onSubmit","event","preventDefault","form","currentTarget","elements","trim","nameWords","split","map","word","charAt","toUpperCase","slice","join","some","contact","Notiflix","editContactThunk","addContactsThunk","e","target","onClick","ContactsList","ContactItem","primaryColor","boxShadow","ContactWrapper","BoxUi","ListPhone","ButtonWrapper","Icon","Button","ModalDeleteBackdrop","ModalBackdropUi","ModalDeleteBox","ModalBoxUi","ModalDeleteTitle","ModalTitleUi","ModalDeleteButtonWrapper","ModalDeleteButton","onDeleteContact","onNoDeleteContact","onCancel","className","classList","contains","ContactList","onEditContact","showModal","setShowModal","selectedContact","setSelectedContact","showContacts","Array","isArray","length","closeModal","phoneNumber","window","location","href","callContact","sprite","openModal","contactId","FilterStyled","InputFind","Filter","Container","TitleContacts","ContactsContainer","NoContacts","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","deleteContactsThunk","backdropColor","backgroundColor","ModalFormUi","ModalSecondWrapperUi","ModalInputUi"],"sourceRoot":""}