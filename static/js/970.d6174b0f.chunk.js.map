{"version":3,"file":"static/js/970.d6174b0f.chunk.js","mappings":"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","sources":["ui/ErrorInputMessageUi.styled.js","components/Input/styled.js","components/Input/index.jsx","pages/RegisterPage/index.jsx","schemas/index.js","ui/ModalUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorInputMessageUi = styled.p`\n  color: ${({ theme }) => theme.colors.errorColor};\n  font-family: Roboto;\n  font-size: 14px;\n  line-height: 1.17;\n  margin: 0;\n  text-shadow: none;\n  position: absolute;\n  top: 110%;\n  left: 0;\n  right: 0;\n  transition: opacity 0.15s ease-out;\n`;\n","import styled, { css } from 'styled-components';\n\nexport const inputPlaceholderCommonStyle = css`\n  font-size: 20px;\n  padding: 0 15px;\n`;\n\nexport const Text = styled.div`\n  background-color: transparent;\n  color: black;\n  transform: translate(0);\n  transition: transform 0.15s ease-out, font-size 0.15s ease-out,\n    background-color 0.2s ease-out, color 0.15s ease-out;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const PlaceholderText = styled.label`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  border: 2px solid transparent;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n\n  ${inputPlaceholderCommonStyle}\n`;\n\nexport const Input = styled.input`\n  height: 60px;\n  width: 100%;\n  font-weight: bold;\n  box-sizing: border-box;\n  border: none;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n  cursor: pointer;\n\n  ${inputPlaceholderCommonStyle}\n\n  &:hover,\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n\n  &:focus\n    + ${PlaceholderText}\n    ${Text},\n    :not(input[value=''])\n    + ${PlaceholderText}\n    ${Text} {\n    border-radius: 25px;\n    font-size: 16px;\n    color: ${({ theme }) => theme.colors.primaryColor};\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n    transform: translate(0, -140%);\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n\n  &:focus + ${PlaceholderText} ${Text} {\n    color: ${({ theme }) => theme.colors.primaryColor};\n    border-color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  margin: 0 0 15px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ErrorInputMessageUi } from 'ui/ErrorInputMessageUi.styled';\nimport { Input, PlaceholderText, Text, Wrapper } from './styled';\n\nexport const InputComponent = props => {\n  const { label, name, formik } = props;\n  const htmlFor = `input-${name}`;\n  return (\n    <Wrapper>\n      <Input id={htmlFor} name={name} {...props} />\n      <PlaceholderText htmlFor={htmlFor}>\n        <Text>{label}</Text>\n      </PlaceholderText>\n      {formik && formik.touched[name] && formik.errors[name] && (\n        <ErrorInputMessageUi>{formik.errors[name]}</ErrorInputMessageUi>\n      )}\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n    handleChange: PropTypes.func,\n    handleBlur: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    isSubmitting: PropTypes.bool,\n  }),\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\n\nimport { registerUserThunk } from 'redux/auth/operations';\nimport { selectAuthentificated } from 'redux/selectors';\n\nimport { registerSchema } from 'schemas';\n\nimport { InputComponent } from 'components/Input';\n\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport {\n  ModalBackdropUi,\n  ModalBoxUi,\n  ModalFormUi,\n  ModalTitleUi,\n} from 'ui/ModalUi.styled';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const authentificated = useSelector(selectAuthentificated);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerSchema,\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = formik.values.name.trim();\n    const email = formik.values.email.trim();\n    const password = formik.values.password.trim();\n\n    dispatch(registerUserThunk({ name, email, password }));\n  };\n\n  const isFormValid = () => {\n    return (\n      Object.keys(formik.errors).length === 0 &&\n      Object.keys(formik.touched).length > 0\n    );\n  };\n  if (authentificated) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <ModalBackdropUi>\n      <ModalBoxUi>\n        <ModalTitleUi>Register Your Account</ModalTitleUi>\n        <ModalFormUi onSubmit={handleSubmit}>\n          <InputComponent\n            label=\"Name:\"\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"name\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            formik={formik}\n            className={\n              formik.errors.name && formik.touched.name ? 'input-error' : ''\n            }\n          />\n          <br />\n          <InputComponent\n            label=\"Email:\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            formik={formik}\n            className={\n              formik.errors.email && formik.touched.email ? 'input-error' : ''\n            }\n          />\n          <br />\n          <InputComponent\n            label=\"Password:\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            required\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            formik={formik}\n            className={\n              formik.errors.password && formik.touched.password\n                ? 'input-error'\n                : ''\n            }\n          />\n          <ButtonUi\n            disabled={!isFormValid() || formik.isSubmitting}\n            type=\"submit\"\n          >\n            Sign up\n          </ButtonUi>\n        </ModalFormUi>\n      </ModalBoxUi>\n    </ModalBackdropUi>\n  );\n};\n\nexport default RegisterPage;\n","import * as yup from 'yup';\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$/;\n// min 6 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\nconst emailRules =\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().min(2).required('required field'),\n  email: yup\n    .string()\n    .email('This is an ERROR email')\n    .matches(emailRules)\n    .required('required field'),\n  password: yup\n    .string()\n    .min(6)\n    .matches(passwordRules, {\n      message:\n        'Password should contain 1 upper case letter, 1 lower case letter, 1 numeric digit.',\n    })\n    .required('required field'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('This is an ERROR email')\n    .required('required field'),\n  password: yup.string().required('required field'),\n});\n\nexport const contactSchema = yup.object().shape({\n  contactName: yup\n    .string()\n    .min(3, 'The name must be at least 3 characters.')\n    .max(22, 'The name must be 22 characters or less.')\n    .required('The name is required.'),\n  contactNumber: yup\n    .string()\n    .max(20, 'The phone number must be 20 characters or less.')\n    .matches(/^(?:\\+\\d|[\\d\\s\\-./()]){10,20}$/, 'Invalid number.')\n    .nullable()\n    .transform(v => (v === '' ? null : v)),\n});\n","import styled from 'styled-components';\n\nexport const ModalBackdropUi = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 80px;\n  left: 0;\n  width: 100%;\n  height: 80%;\n  background-color: ${({ theme }) => theme.colors.backdropColor};\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.is-hidden {\n    visibility: hidden;\n    opacity: 0;\n  }\n`;\n\nexport const ModalBoxUi = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundColor};\n  box-shadow: 1px 1px 14px 4px ${({ theme }) => theme.colors.accentColor};\n  border-radius: 16px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 20px;\n  animation-name: modalopen;\n  animation-duration: 1.75s;\n\n  @keyframes modalopen {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ModalTitleUi = styled.h1`\n  font-size: 25px;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ModalFormUi = styled.form`\n  text-align: center;\n`;\n"],"names":["ErrorInputMessageUi","styled","theme","colors","errorColor","inputPlaceholderCommonStyle","css","Text","PlaceholderText","Input","secondaryColor","accentColor","primaryColor","Wrapper","InputComponent","props","label","name","formik","htmlFor","id","touched","errors","dispatch","useDispatch","authentificated","useSelector","selectAuthentificated","useFormik","initialValues","email","password","validationSchema","registerSchema","to","onSubmit","event","preventDefault","values","trim","registerUserThunk","type","autoComplete","required","onChange","handleChange","onBlur","handleBlur","value","className","disabled","Object","keys","length","isSubmitting","yup","shape","min","matches","message","loginSchema","contactName","max","contactNumber","nullable","transform","v","ModalBackdropUi","backdropColor","ModalBoxUi","backgroundColor","ModalTitleUi","textShadowColor","ModalFormUi"],"sourceRoot":""}