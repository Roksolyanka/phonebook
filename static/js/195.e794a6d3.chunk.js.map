{"version":3,"file":"static/js/195.e794a6d3.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Input/Input.jsx","components/ContactForm/FormAddContact.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListStyled.styled.js","assets/sprite.svg","components/ContactList/ContactList.jsx","components/Filter/FilterStyled.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/Contacts.jsx","ui/InputUi.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-size: 100px;\n  font-weight: bold;\n  width: 100%;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 20px 30px,\n    ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const InputComponent = ({\n  label,\n  name,\n  type,\n  value,\n  onChange,\n  required,\n  minLength,\n  autoComplete,\n  wrapperStyle,\n  inputStyle,\n}) => {\n  const Wrapper = wrapperStyle;\n  const Input = inputStyle;\n  const htmlFor = `input-${name}`;\n  return (\n    <Wrapper>\n      <label htmlFor={htmlFor}>{label}</label>\n      <Input\n        type={type}\n        id={htmlFor}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        minLength={minLength}\n        autoComplete={autoComplete}\n      />\n    </Wrapper>\n  );\n};\n\nInputComponent.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n  minLength: PropTypes.number,\n  autoComplete: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  inputStyle: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const ContainerForm = styled.div`\n  margin-top: 100px;\n  padding-left: 30px;\n  min-height: 500px;\n`;\n\nexport const Form = styled.form`\n  display: grid;\n  width: 600px;\n  margin: 0 auto;\n  border: 2px solid ${({ theme }) => theme.colors.accentColor};\n  border-radius: 4px;\n  box-shadow: ${({ theme }) => theme.colors.accentColor} 5px 0 5px;\n  padding-top: 20px;\n  font-size: 40px;\n  font-weight: bold;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 5px 0 1px;\n  position: sticky;\n  top: 50px;\n`;\n\nexport const WrapperStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const InputStyle = styled(InputUi)`\n  width: 550px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addContactsThunk } from 'redux/contactsOperations';\nimport { selectUserContacts } from 'redux/selectors';\n\nimport Notiflix from 'notiflix';\n\nimport { ButtonUi } from 'ui/ButtonUi.styled';\nimport {\n  ContainerForm,\n  Form,\n  InputStyle,\n  WrapperStyle,\n} from './FormAddContact.styled';\nimport { InputComponent } from 'components/Input/Input';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    let name = form.elements.contactName.value.trim();\n    const number = form.elements.contactNumber.value.trim();\n\n    const nameWords = name.split(' ');\n\n    name = nameWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n\n    if (contacts.some(contact => contact.name === name))\n      return Notiflix.Notify.info(`Contact with name ${name} already exists!`);\n\n    if (contacts.some(contact => contact.number === number))\n      return Notiflix.Notify.info(\n        `Contact with number ${number} already exists!`\n      );\n\n    dispatch(addContactsThunk({ name, number }));\n\n    setContactName('');\n    setContactNumber('');\n\n    Notiflix.Notify.success(`Contact ${name} successfully added.`);\n  };\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={handleSubmit}>\n        <InputComponent\n          label=\"Name:\"\n          type=\"text\"\n          name=\"contactName\"\n          value={contactName}\n          onChange={e => setContactName(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n          inputStyle={InputStyle}\n        />\n        <InputComponent\n          label=\"Number:\"\n          type=\"text\"\n          name=\"contactNumber\"\n          value={contactNumber}\n          onChange={e => setContactNumber(e.target.value)}\n          required\n          wrapperStyle={WrapperStyle}\n          inputStyle={InputStyle}\n        />\n        <ButtonUi type=\"submit\">Add contact</ButtonUi>\n      </Form>\n    </ContainerForm>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\nimport { ButtonUi } from 'ui/ButtonUi.styled';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const ContactItem = styled.li`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  align-items: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 1px;\n  margin: 0 auto 5px;\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: 750px;\n  border-radius: 6px;\n  padding: 12px 20px;\n  border: 1px solid ${({ theme }) => theme.colors.accentColor};\n  box-sizing: border-box;\n  box-shadow: 0 2px 8px ${({ theme }) => theme.colors.boxShadow};\n\n  &: hover {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 10px 0px;\n  }\n`;\n\nexport const ListPhone = styled.span`\n  margin-left: 10px;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 15px;\n`;\n\nexport const IconPencil = styled.svg`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const ButtonDelete = styled(ButtonUi)`\n  font-size: 30px;\n  border-radius: 5px;\n  padding: 0;\n  width: 50px;\n  margin: 10px 0;\n`;\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20l4-2 14-14-2-2-14 14-2 4zM9.041 27.097c-0.989-2.085-2.052-3.149-4.137-4.137l3.097-8.525 4-2.435 12-12h-6l-12 12-6 20 20-6 12-12v-6l-12 12-2.435 4z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.26d0141394a5b72c3cd8bdbc861b8194.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\n\nimport {\n  ButtonDelete,\n  ButtonWrapper,\n  ContactItem,\n  ContactsList,\n  IconPencil,\n  ListPhone,\n} from './ContactListStyled.styled';\nimport sprite from '../../assets/sprite.svg';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <ContactsList>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <div>\n                <span>{contact.name}</span>:\n                <ListPhone>{contact.number}</ListPhone>\n              </div>\n              <ButtonWrapper>\n                <ButtonDelete\n                  aria-label=\"Edit contact\"\n                  type=\"button\"\n                  onClick={() => {\n                    // onDeleteContact(contact.id);\n                    // Notiflix.Notify.success(\n                    //   `Contact ${contact.name} successfully deleted.`\n                    // );\n                  }}\n                >\n                  <IconPencil>\n                    <use href={`${sprite}#icon-pencil`}></use>\n                  </IconPencil>\n                </ButtonDelete>\n                <ButtonDelete\n                  aria-label=\"Delete contact\"\n                  type=\"button\"\n                  onClick={() => {\n                    onDeleteContact(contact.id);\n                    Notiflix.Notify.success(\n                      `Contact ${contact.name} successfully deleted.`\n                    );\n                  }}\n                >\n                  &times;\n                </ButtonDelete>\n              </ButtonWrapper>\n            </ContactItem>\n          );\n        })}\n    </ContactsList>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { InputUi } from 'ui/InputUi.styled';\n\nexport const FilterStyled = styled.label`\n  display: block;\n  font-size: 40px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.primaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 2px 0 0;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const InputFind = styled(InputUi)`\n  width: 320px;\n  height: 40px;\n  margin-left: 10px;\n  vertical-align: top;\n\n  &: hover, focus {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 10px 20px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterStyled, InputFind } from './FilterStyled.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { BoxUi } from 'ui/BoxUi.styled';\n\nexport const Container = styled(BoxUi)`\n  align-items: flex-start;\n  text-align: center;\n  gap: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 70px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondaryColor};\n  text-align: center;\n  text-shadow: ${({ theme }) => theme.colors.textShadowColor} 10px 0 5px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n`;\n\nexport const NoContacts = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.textShadowColor};\n  text-align: center;\n  margin-top: 100px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectAuthentificated,\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n} from 'redux/selectors';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contactsOperations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { TitlePhonebook } from 'components/App/App.styled';\nimport {\n  ContactsContainer,\n  Container,\n  NoContacts,\n  TitleContacts,\n} from './ContactsPage.styled';\nimport { setFilter } from 'redux/contactsReducer';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        <ContactForm />\n        <ContactsContainer>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          {contacts === null ? (\n            <NoContacts>No contacts found.</NoContacts>\n          ) : (\n            <>\n              {contacts.length === 0 ? (\n                <>\n                  <NoContacts>No contacts found.</NoContacts>\n                </>\n              ) : (\n                <>\n                  <Filter value={filter} onChange={changeFilter} />\n                  {filteredContacts.length === 0 ? (\n                    <NoContacts>No contact found with this name.</NoContacts>\n                  ) : (\n                    <ContactList\n                      contacts={filteredContacts}\n                      onDeleteContact={handleDeleteContact}\n                    />\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </ContactsContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\nexport const InputUi = styled.input`\n  height: 25px;\n  margin: 0 auto;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${({ theme }) => theme.colors.secondaryColor};\n\n  &: hover {\n    box-shadow: ${({ theme }) => theme.colors.accentColor} 0px 5px 10px,\n      ${({ theme }) => theme.colors.accentColor} 0px 2px 5px;\n  }\n`;\n"],"names":["TitlePhonebook","styled","theme","colors","secondaryColor","textShadowColor","accentColor","InputComponent","label","name","type","value","onChange","required","minLength","autoComplete","Wrapper","wrapperStyle","Input","inputStyle","htmlFor","id","ContainerForm","Form","WrapperStyle","InputStyle","InputUi","ContactForm","contacts","useSelector","selectUserContacts","dispatch","useDispatch","useState","contactName","setContactName","contactNumber","setContactNumber","onSubmit","event","preventDefault","form","currentTarget","elements","trim","number","nameWords","split","map","word","charAt","toUpperCase","slice","join","some","contact","Notiflix","addContactsThunk","e","target","ContactsList","ContactItem","primaryColor","boxShadow","ListPhone","ButtonWrapper","IconPencil","ButtonDelete","ButtonUi","ContactList","onDeleteContact","showContacts","Array","isArray","length","onClick","href","sprite","FilterStyled","InputFind","Filter","Container","BoxUi","TitleContacts","ContactsContainer","NoContacts","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","useEffect","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","contactId","deleteContactsThunk"],"sourceRoot":""}