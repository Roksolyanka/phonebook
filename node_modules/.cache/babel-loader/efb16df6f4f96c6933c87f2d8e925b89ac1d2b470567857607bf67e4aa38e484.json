{"ast":null,"code":"import { Notify } from 'notiflix';\nexport const getCurrentYear = () => new Date().getFullYear();\nconst isDuplicateName = (contacts, name, editingContact) => contacts.some(contact => contact.name === name && editingContact !== contact);\nconst isDuplicateNumber = (contacts, number, editingContact) => contacts.some(contact => contact.number === number && editingContact !== contact);\nexport const duplicateNameNotification = (contacts, name, editingContact) => isDuplicateName(contacts, name, editingContact) ? (Notify.info(`Contact with name ${name} already exists!`), false) : true;\nexport const duplicateNumberNotification = (contacts, number, editingContact) => isDuplicateNumber(contacts, number, editingContact) ? (Notify.info(`Contact with number ${number} already exists!`), false) : true;\nexport const findItem = (arr, searchValue, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return arr.filter(item => item[searchValue].toLowerCase().includes(normalizedFilter));\n};","map":{"version":3,"names":["Notify","getCurrentYear","Date","getFullYear","isDuplicateName","contacts","name","editingContact","some","contact","isDuplicateNumber","number","duplicateNameNotification","info","duplicateNumberNotification","findItem","arr","searchValue","filter","normalizedFilter","toLowerCase","item","includes"],"sources":["D:/Роксолана/IT/Goit/phonebook/src/helpers/helper.js"],"sourcesContent":["import { Notify } from 'notiflix';\r\n\r\nexport const getCurrentYear = () => new Date().getFullYear();\r\n\r\nconst isDuplicateName = (contacts, name, editingContact) =>\r\n  contacts.some(contact => contact.name === name && editingContact !== contact);\r\n\r\nconst isDuplicateNumber = (contacts, number, editingContact) =>\r\n  contacts.some(\r\n    contact => contact.number === number && editingContact !== contact\r\n  );\r\n\r\nexport const duplicateNameNotification = (contacts, name, editingContact) =>\r\n  isDuplicateName(contacts, name, editingContact)\r\n    ? (Notify.info(`Contact with name ${name} already exists!`), false)\r\n    : true;\r\n\r\nexport const duplicateNumberNotification = (contacts, number, editingContact) =>\r\n  isDuplicateNumber(contacts, number, editingContact)\r\n    ? (Notify.info(`Contact with number ${number} already exists!`), false)\r\n    : true;\r\n\r\nexport const findItem = (arr, searchValue, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return arr.filter(item =>\r\n    item[searchValue].toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AAEjC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AAE5D,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,cAAc,KACrDF,QAAQ,CAACG,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACH,IAAI,KAAKA,IAAI,IAAIC,cAAc,KAAKE,OAAO,CAAC;AAE/E,MAAMC,iBAAiB,GAAGA,CAACL,QAAQ,EAAEM,MAAM,EAAEJ,cAAc,KACzDF,QAAQ,CAACG,IAAI,CACXC,OAAO,IAAIA,OAAO,CAACE,MAAM,KAAKA,MAAM,IAAIJ,cAAc,KAAKE,OAC7D,CAAC;AAEH,OAAO,MAAMG,yBAAyB,GAAGA,CAACP,QAAQ,EAAEC,IAAI,EAAEC,cAAc,KACtEH,eAAe,CAACC,QAAQ,EAAEC,IAAI,EAAEC,cAAc,CAAC,IAC1CP,MAAM,CAACa,IAAI,CAAC,qBAAqBP,IAAI,kBAAkB,CAAC,EAAE,KAAK,IAChE,IAAI;AAEV,OAAO,MAAMQ,2BAA2B,GAAGA,CAACT,QAAQ,EAAEM,MAAM,EAAEJ,cAAc,KAC1EG,iBAAiB,CAACL,QAAQ,EAAEM,MAAM,EAAEJ,cAAc,CAAC,IAC9CP,MAAM,CAACa,IAAI,CAAC,uBAAuBF,MAAM,kBAAkB,CAAC,EAAE,KAAK,IACpE,IAAI;AAEV,OAAO,MAAMI,QAAQ,GAAGA,CAACC,GAAG,EAAEC,WAAW,EAAEC,MAAM,KAAK;EACpD,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,WAAW,CAAC,CAAC;EAC7C,OAAOJ,GAAG,CAACE,MAAM,CAACG,IAAI,IACpBA,IAAI,CAACJ,WAAW,CAAC,CAACG,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,gBAAgB,CAC3D,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}