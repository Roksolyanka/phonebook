{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const $instance = axios.create({\n  baseURL: 'https://connections-api.herokuapp.com'\n});\nexport const setToken = token => {\n  $instance.defaults.headers['Authorization'] = `Bearer ${token}`;\n};\nexport const clearToken = () => {\n  $instance.defaults.headers['Authorization'] = '';\n};\nexport const registerUserThunk = createAsyncThunk('auth/register', async (userData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await $instance.post('/users/signup', userData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const loginUserThunk = createAsyncThunk('auth/login', async (userData, thunkApi) => {\n  try {\n    const {\n      data\n    } = await $instance.post('/users/login', userData);\n    setToken(data.token);\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const refreshUserThunk = createAsyncThunk('auth/refreshUser', async (_, thunkApi) => {\n  const state = thunkApi.getState();\n  const token = state.auth.token;\n\n  try {\n    setToken(token);\n    const {\n      data\n    } = await $instance.get('/users/current');\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const logoutUserThunk = createAsyncThunk('auth/logout', async (_, thunkApi) => {\n  try {\n    const {\n      data\n    } = await $instance.post('/users/logout');\n    clearToken();\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"sources":["D:/Роксолана/IT/Goit/phonebook/src/redux/operations.js"],"names":["createAsyncThunk","axios","$instance","create","baseURL","setToken","token","defaults","headers","clearToken","registerUserThunk","userData","thunkApi","data","post","error","rejectWithValue","message","loginUserThunk","refreshUserThunk","_","state","getState","auth","get","logoutUserThunk"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AACpCC,EAAAA,OAAO,EAAE;AAD2B,CAAb,CAAlB;AAIP,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC/BJ,EAAAA,SAAS,CAACK,QAAV,CAAmBC,OAAnB,CAA2B,eAA3B,IAA+C,UAASF,KAAM,EAA9D;AACD,CAFM;AAIP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC9BP,EAAAA,SAAS,CAACK,QAAV,CAAmBC,OAAnB,CAA2B,eAA3B,IAA8C,EAA9C;AACD,CAFM;AAIP,OAAO,MAAME,iBAAiB,GAAGV,gBAAgB,CAC/C,eAD+C,EAE/C,OAAOW,QAAP,EAAiBC,QAAjB,KAA8B;AAC5B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,SAAS,CAACY,IAAV,CAAe,eAAf,EAAgCH,QAAhC,CAAvB;AACAN,IAAAA,QAAQ,CAACQ,IAAI,CAACP,KAAN,CAAR;AAEA,WAAOO,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACI,eAAT,CAAyBD,KAAK,CAACE,OAA/B,CAAP;AACD;AACF,CAX8C,CAA1C;AAcP,OAAO,MAAMC,cAAc,GAAGlB,gBAAgB,CAC5C,YAD4C,EAE5C,OAAOW,QAAP,EAAiBC,QAAjB,KAA8B;AAC5B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,SAAS,CAACY,IAAV,CAAe,cAAf,EAA+BH,QAA/B,CAAvB;AACAN,IAAAA,QAAQ,CAACQ,IAAI,CAACP,KAAN,CAAR;AAEA,WAAOO,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACI,eAAT,CAAyBD,KAAK,CAACE,OAA/B,CAAP;AACD;AACF,CAX2C,CAAvC;AAcP,OAAO,MAAME,gBAAgB,GAAGnB,gBAAgB,CAC9C,kBAD8C,EAE9C,OAAOoB,CAAP,EAAUR,QAAV,KAAuB;AACrB,QAAMS,KAAK,GAAGT,QAAQ,CAACU,QAAT,EAAd;AACA,QAAMhB,KAAK,GAAGe,KAAK,CAACE,IAAN,CAAWjB,KAAzB;;AACA,MAAI;AACFD,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMX,SAAS,CAACsB,GAAV,CAAc,gBAAd,CAAvB;AAEA,WAAOX,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACI,eAAT,CAAyBD,KAAK,CAACE,OAA/B,CAAP;AACD;AACF,CAb6C,CAAzC;AAgBP,OAAO,MAAMQ,eAAe,GAAGzB,gBAAgB,CAC7C,aAD6C,EAE7C,OAAOoB,CAAP,EAAUR,QAAV,KAAuB;AACrB,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,SAAS,CAACY,IAAV,CAAe,eAAf,CAAvB;AACAL,IAAAA,UAAU;AAEV,WAAOI,IAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACI,eAAT,CAAyBD,KAAK,CAACE,OAA/B,CAAP;AACD;AACF,CAX4C,CAAxC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const $instance = axios.create({\r\n  baseURL: 'https://connections-api.herokuapp.com',\r\n});\r\n\r\nexport const setToken = token => {\r\n  $instance.defaults.headers['Authorization'] = `Bearer ${token}`;\r\n};\r\n\r\nexport const clearToken = () => {\r\n  $instance.defaults.headers['Authorization'] = '';\r\n};\r\n\r\nexport const registerUserThunk = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, thunkApi) => {\r\n    try {\r\n      const { data } = await $instance.post('/users/signup', userData);\r\n      setToken(data.token);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const loginUserThunk = createAsyncThunk(\r\n  'auth/login',\r\n  async (userData, thunkApi) => {\r\n    try {\r\n      const { data } = await $instance.post('/users/login', userData);\r\n      setToken(data.token);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const refreshUserThunk = createAsyncThunk(\r\n  'auth/refreshUser',\r\n  async (_, thunkApi) => {\r\n    const state = thunkApi.getState();\r\n    const token = state.auth.token;\r\n    try {\r\n      setToken(token);\r\n      const { data } = await $instance.get('/users/current');\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUserThunk = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, thunkApi) => {\r\n    try {\r\n      const { data } = await $instance.post('/users/logout');\r\n      clearToken();\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return thunkApi.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}