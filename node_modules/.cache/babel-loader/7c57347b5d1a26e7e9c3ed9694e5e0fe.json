{"ast":null,"code":"/**\n * React Router v6.15.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n} // Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\n\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\"; // Mute warnings for calls to useNavigate in SSR environments\n\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\n\n\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext); // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\n\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n} // Internal implementation with accept optional param for RouterProvider usage\n\n\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n\n  if (matches == null) {\n    var _dataRouterState;\n\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\n\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\n\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n} // Internal version with hookName-aware debugging\n\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the ID for the nearest contextual route\n */\n\n\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\n\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    } // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n\n\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]); // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]); // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]); // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\n\n\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0; // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref; // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\n\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\n\n\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\n\n\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate(); // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false);\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\n\n\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\n\n\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\n\n\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\n\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n\n  return updates;\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,SAA3B,EAAsCC,SAAtC,EAAiDC,iCAAjD,EAAoFC,cAApF,EAAoGC,SAApG,EAA+GC,SAA/G,EAA0HC,WAA1H,EAAuIC,MAAvI,EAA+IC,aAA/I,EAA8JC,YAA9J,EAA4KC,oBAA5K,EAAkMC,mBAAlM,EAAuNC,oBAAvN,EAA6OC,YAA7O,QAAiQ,mBAAjQ;AACA,SAASD,oBAAT,EAA+BL,MAAM,IAAIO,cAAzC,EAAyDC,UAAzD,EAAqEC,KAArE,EAA4EC,YAA5E,EAA0FP,oBAA1F,EAAgHQ,IAAhH,EAAsHjB,SAAtH,EAAiIK,WAAjI,EAA8ID,SAA9I,EAAyJc,QAAzJ,EAAmKC,gBAAnK,EAAqLC,WAArL,QAAwM,mBAAxM;;AAEA,SAASC,QAAT,GAAoB;AAClBA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,CAAcC,IAAd,EAAhB,GAAuC,UAAUC,MAAV,EAAkB;AAClE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AACA,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,YAAIP,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AACrDL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AACD;AACF;AACF;;AACD,WAAOL,MAAP;AACD,GAVD;AAWA,SAAOJ,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AACD,C,CAED;AACA;;;AACA,MAAMQ,iBAAiB,GAAG,aAAatC,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAAvC;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,iBAAiB,CAACK,WAAlB,GAAgC,YAAhC;AACD;;AACD,MAAMC,sBAAsB,GAAG,aAAa5C,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAA5C;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCE,EAAAA,sBAAsB,CAACD,WAAvB,GAAqC,iBAArC;AACD;;AACD,MAAME,YAAY,GAAG,aAAa7C,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAAlC;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCG,EAAAA,YAAY,CAACF,WAAb,GAA2B,OAA3B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMG,iBAAiB,GAAG,aAAa9C,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAAvC;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCI,EAAAA,iBAAiB,CAACH,WAAlB,GAAgC,YAAhC;AACD;;AACD,MAAMI,eAAe,GAAG,aAAa/C,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAArC;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCK,EAAAA,eAAe,CAACJ,WAAhB,GAA8B,UAA9B;AACD;;AACD,MAAMK,YAAY,GAAG,aAAahD,KAAK,CAACuC,aAAN,CAAoB;AACpDU,EAAAA,MAAM,EAAE,IAD4C;AAEpDC,EAAAA,OAAO,EAAE,EAF2C;AAGpDC,EAAAA,WAAW,EAAE;AAHuC,CAApB,CAAlC;;AAKA,IAAIX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCM,EAAAA,YAAY,CAACL,WAAb,GAA2B,OAA3B;AACD;;AACD,MAAMS,iBAAiB,GAAG,aAAapD,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAAvC;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCU,EAAAA,iBAAiB,CAACT,WAAlB,GAAgC,YAAhC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,OAAT,CAAiBC,EAAjB,EAAqBC,KAArB,EAA4B;AAC1B,MAAI;AACFC,IAAAA;AADE,MAEAD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAF5B;AAGA,GAACE,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,sEAFgF,CAAxD,GAEgDA,gBAAgB,CAAC,KAAD,CAFxF,GAEkG,KAAK,CAFvG;AAGA,MAAI;AACFyD,IAAAA,QADE;AAEFC,IAAAA;AAFE,MAGA3D,KAAK,CAAC4D,UAAN,CAAiBd,iBAAjB,CAHJ;AAIA,MAAI;AACFe,IAAAA,IADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA;AAHE,MAIAC,eAAe,CAACV,EAAD,EAAK;AACtBE,IAAAA;AADsB,GAAL,CAJnB;AAOA,MAAIS,cAAc,GAAGH,QAArB,CAlB0B,CAoB1B;AACA;AACA;AACA;;AACA,MAAIJ,QAAQ,KAAK,GAAjB,EAAsB;AACpBO,IAAAA,cAAc,GAAGH,QAAQ,KAAK,GAAb,GAAmBJ,QAAnB,GAA8BxD,SAAS,CAAC,CAACwD,QAAD,EAAWI,QAAX,CAAD,CAAxD;AACD;;AACD,SAAOH,SAAS,CAACO,UAAV,CAAqB;AAC1BJ,IAAAA,QAAQ,EAAEG,cADgB;AAE1BF,IAAAA,MAF0B;AAG1BF,IAAAA;AAH0B,GAArB,CAAP;AAKD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASJ,kBAAT,GAA8B;AAC5B,SAAOzD,KAAK,CAAC4D,UAAN,CAAiBb,eAAjB,KAAqC,IAA5C;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoB,WAAT,GAAuB;AACrB,GAACV,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,0EAFgF,CAAxD,GAEoDA,gBAAgB,CAAC,KAAD,CAF5F,GAEsG,KAAK,CAF3G;AAGA,SAAOD,KAAK,CAAC4D,UAAN,CAAiBb,eAAjB,EAAkCqB,QAAzC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,iBAAT,GAA6B;AAC3B,SAAOrE,KAAK,CAAC4D,UAAN,CAAiBb,eAAjB,EAAkCuB,cAAzC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,GAACf,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,uEAFgF,CAAxD,GAEiDA,gBAAgB,CAAC,KAAD,CAFzF,GAEmG,KAAK,CAFxG;AAGA,MAAI;AACF6D,IAAAA;AADE,MAEAK,WAAW,EAFf;AAGA,SAAOnE,KAAK,CAACyE,OAAN,CAAc,MAAMtE,SAAS,CAACqE,OAAD,EAAUV,QAAV,CAA7B,EAAkD,CAACA,QAAD,EAAWU,OAAX,CAAlD,CAAP;AACD;AAED;AACA;AACA;;;AAEA,MAAME,qBAAqB,GAAG,iEAAiE,mCAA/F,C,CAEA;;AACA,SAASC,yBAAT,CAAmCC,EAAnC,EAAuC;AACrC,MAAIC,QAAQ,GAAG7E,KAAK,CAAC4D,UAAN,CAAiBd,iBAAjB,EAAoCgC,MAAnD;;AACA,MAAI,CAACD,QAAL,EAAe;AACb;AACA;AACA;AACA7E,IAAAA,KAAK,CAAC+E,eAAN,CAAsBH,EAAtB;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,GAAuB;AACrB,MAAI;AACF7B,IAAAA;AADE,MAEAnD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ,CADqB,CAIrB;AACA;;AACA,SAAOG,WAAW,GAAG8B,iBAAiB,EAApB,GAAyBC,mBAAmB,EAA9D;AACD;;AACD,SAASA,mBAAT,GAA+B;AAC7B,GAACzB,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,0EAFgF,CAAxD,GAEoDA,gBAAgB,CAAC,KAAD,CAF5F,GAEsG,KAAK,CAF3G;AAGA,MAAIkF,iBAAiB,GAAGnF,KAAK,CAAC4D,UAAN,CAAiBtB,iBAAjB,CAAxB;AACA,MAAI;AACFoB,IAAAA,QADE;AAEFC,IAAAA;AAFE,MAGA3D,KAAK,CAAC4D,UAAN,CAAiBd,iBAAjB,CAHJ;AAIA,MAAI;AACFI,IAAAA;AADE,MAEAlD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ;AAGA,MAAI;AACFc,IAAAA,QAAQ,EAAEsB;AADR,MAEAjB,WAAW,EAFf;AAGA,MAAIkB,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAenF,iCAAiC,CAAC8C,OAAD,CAAjC,CAA2CsC,GAA3C,CAA+CC,KAAK,IAAIA,KAAK,CAACC,YAA9D,CAAf,CAAzB;AACA,MAAIC,SAAS,GAAG3F,KAAK,CAAC4F,MAAN,CAAa,KAAb,CAAhB;AACAjB,EAAAA,yBAAyB,CAAC,MAAM;AAC9BgB,IAAAA,SAAS,CAACE,OAAV,GAAoB,IAApB;AACD,GAFwB,CAAzB;AAGA,MAAIC,QAAQ,GAAG9F,KAAK,CAAC+F,WAAN,CAAkB,UAAUzC,EAAV,EAAc0C,OAAd,EAAuB;AACtD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACDxD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAACsF,SAAS,CAACE,OAAX,EAAoBnB,qBAApB,CAAtD,GAAmG,KAAK,CAAxG,CAJsD,CAMtD;AACA;;AACA,QAAI,CAACiB,SAAS,CAACE,OAAf,EAAwB;;AACxB,QAAI,OAAOvC,EAAP,KAAc,QAAlB,EAA4B;AAC1BK,MAAAA,SAAS,CAACsC,EAAV,CAAa3C,EAAb;AACA;AACD;;AACD,QAAI4C,IAAI,GAAG5F,SAAS,CAACgD,EAAD,EAAKgC,IAAI,CAACa,KAAL,CAAWd,kBAAX,CAAL,EAAqCD,gBAArC,EAAuDY,OAAO,CAACxC,QAAR,KAAqB,MAA5E,CAApB,CAbsD,CAetD;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI2B,iBAAiB,IAAI,IAArB,IAA6BzB,QAAQ,KAAK,GAA9C,EAAmD;AACjDwC,MAAAA,IAAI,CAACpC,QAAL,GAAgBoC,IAAI,CAACpC,QAAL,KAAkB,GAAlB,GAAwBJ,QAAxB,GAAmCxD,SAAS,CAAC,CAACwD,QAAD,EAAWwC,IAAI,CAACpC,QAAhB,CAAD,CAA5D;AACD;;AACD,KAAC,CAAC,CAACkC,OAAO,CAACI,OAAV,GAAoBzC,SAAS,CAACyC,OAA9B,GAAwCzC,SAAS,CAAC0C,IAAnD,EAAyDH,IAAzD,EAA+DF,OAAO,CAACM,KAAvE,EAA8EN,OAA9E;AACD,GAzBc,EAyBZ,CAACtC,QAAD,EAAWC,SAAX,EAAsB0B,kBAAtB,EAA0CD,gBAA1C,EAA4DD,iBAA5D,CAzBY,CAAf;AA0BA,SAAOW,QAAP;AACD;;AACD,MAAMS,aAAa,GAAG,aAAavG,KAAK,CAACuC,aAAN,CAAoB,IAApB,CAAnC;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASiE,gBAAT,GAA4B;AAC1B,SAAOxG,KAAK,CAAC4D,UAAN,CAAiB2C,aAAjB,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIzD,MAAM,GAAGjD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,EAA+BC,MAA5C;;AACA,MAAIA,MAAJ,EAAY;AACV,WAAO,aAAajD,KAAK,CAAC2G,aAAN,CAAoBJ,aAAa,CAACK,QAAlC,EAA4C;AAC9DC,MAAAA,KAAK,EAAEH;AADuD,KAA5C,EAEjBzD,MAFiB,CAApB;AAGD;;AACD,SAAOA,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS6D,SAAT,GAAqB;AACnB,MAAI;AACF5D,IAAAA;AADE,MAEAlD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ;AAGA,MAAI+D,UAAU,GAAG7D,OAAO,CAACA,OAAO,CAACnB,MAAR,GAAiB,CAAlB,CAAxB;AACA,SAAOgF,UAAU,GAAGA,UAAU,CAACC,MAAd,GAAuB,EAAxC;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAAShD,eAAT,CAAyBV,EAAzB,EAA6B2D,MAA7B,EAAqC;AACnC,MAAI;AACFzD,IAAAA;AADE,MAEAyD,MAAM,KAAK,KAAK,CAAhB,GAAoB,EAApB,GAAyBA,MAF7B;AAGA,MAAI;AACF/D,IAAAA;AADE,MAEAlD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ;AAGA,MAAI;AACFc,IAAAA,QAAQ,EAAEsB;AADR,MAEAjB,WAAW,EAFf;AAGA,MAAIkB,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAenF,iCAAiC,CAAC8C,OAAD,CAAjC,CAA2CsC,GAA3C,CAA+CC,KAAK,IAAIA,KAAK,CAACC,YAA9D,CAAf,CAAzB;AACA,SAAO1F,KAAK,CAACyE,OAAN,CAAc,MAAMnE,SAAS,CAACgD,EAAD,EAAKgC,IAAI,CAACa,KAAL,CAAWd,kBAAX,CAAL,EAAqCD,gBAArC,EAAuD5B,QAAQ,KAAK,MAApE,CAA7B,EAA0G,CAACF,EAAD,EAAK+B,kBAAL,EAAyBD,gBAAzB,EAA2C5B,QAA3C,CAA1G,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS0D,SAAT,CAAmBC,MAAnB,EAA2BC,WAA3B,EAAwC;AACtC,SAAOC,aAAa,CAACF,MAAD,EAASC,WAAT,CAApB;AACD,C,CAED;;;AACA,SAASC,aAAT,CAAuBF,MAAvB,EAA+BC,WAA/B,EAA4CE,eAA5C,EAA6D;AAC3D,GAAC7D,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,wEAFgF,CAAxD,GAEkDA,gBAAgB,CAAC,KAAD,CAF1F,GAEoG,KAAK,CAFzG;AAGA,MAAI;AACF0D,IAAAA;AADE,MAEA3D,KAAK,CAAC4D,UAAN,CAAiBd,iBAAjB,CAFJ;AAGA,MAAI;AACFI,IAAAA,OAAO,EAAEqE;AADP,MAEAvH,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ;AAGA,MAAI+D,UAAU,GAAGQ,aAAa,CAACA,aAAa,CAACxF,MAAd,GAAuB,CAAxB,CAA9B;AACA,MAAIyF,YAAY,GAAGT,UAAU,GAAGA,UAAU,CAACC,MAAd,GAAuB,EAApD;AACA,MAAIS,cAAc,GAAGV,UAAU,GAAGA,UAAU,CAACjD,QAAd,GAAyB,GAAxD;AACA,MAAI4D,kBAAkB,GAAGX,UAAU,GAAGA,UAAU,CAACrB,YAAd,GAA6B,GAAhE;AACA,MAAIiC,WAAW,GAAGZ,UAAU,IAAIA,UAAU,CAACa,KAA3C;;AACA,MAAIpF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAImF,UAAU,GAAGF,WAAW,IAAIA,WAAW,CAACzB,IAA3B,IAAmC,EAApD;AACA4B,IAAAA,WAAW,CAACL,cAAD,EAAiB,CAACE,WAAD,IAAgBE,UAAU,CAACE,QAAX,CAAoB,GAApB,CAAjC,EAA2D,oEAAoE,OAAON,cAAP,GAAwB,0BAAxB,GAAqDI,UAArD,GAAkE,eAAtI,IAAyJ,sEAAzJ,GAAkO,iEAAlO,GAAsS,+BAAtS,IAAyU,4CAA4CA,UAA5C,GAAyD,gBAAlY,KAAuZ,aAAaA,UAAU,KAAK,GAAf,GAAqB,GAArB,GAA2BA,UAAU,GAAG,IAArD,IAA6D,MAApd,CAA3D,CAAX;AACD;;AACD,MAAIG,mBAAmB,GAAG7D,WAAW,EAArC;AACA,MAAIC,QAAJ;;AACA,MAAIgD,WAAJ,EAAiB;AACf,QAAIa,qBAAJ;;AACA,QAAIC,iBAAiB,GAAG,OAAOd,WAAP,KAAuB,QAAvB,GAAkC7G,SAAS,CAAC6G,WAAD,CAA3C,GAA2DA,WAAnF;AACA,MAAEM,kBAAkB,KAAK,GAAvB,KAA+B,CAACO,qBAAqB,GAAGC,iBAAiB,CAACpE,QAA3C,KAAwD,IAAxD,GAA+D,KAAK,CAApE,GAAwEmE,qBAAqB,CAACE,UAAtB,CAAiCT,kBAAjC,CAAvG,CAAF,IAAkKlF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,8FAA8F,iFAA9F,IAAmL,kEAAkEyH,kBAAlE,GAAuF,KAA1Q,KAAoR,oBAAoBQ,iBAAiB,CAACpE,QAAtC,GAAiD,sCAArU,CAAR,CAAxD,GAAgb7D,gBAAgB,CAAC,KAAD,CAAlmB,GAA4mB,KAAK,CAAjnB;AACAmE,IAAAA,QAAQ,GAAG8D,iBAAX;AACD,GALD,MAKO;AACL9D,IAAAA,QAAQ,GAAG4D,mBAAX;AACD;;AACD,MAAIlE,QAAQ,GAAGM,QAAQ,CAACN,QAAT,IAAqB,GAApC;AACA,MAAIsE,iBAAiB,GAAGV,kBAAkB,KAAK,GAAvB,GAA6B5D,QAA7B,GAAwCA,QAAQ,CAACuE,KAAT,CAAeX,kBAAkB,CAAC3F,MAAlC,KAA6C,GAA7G;AACA,MAAImB,OAAO,GAAG1C,WAAW,CAAC2G,MAAD,EAAS;AAChCrD,IAAAA,QAAQ,EAAEsE;AADsB,GAAT,CAAzB;;AAGA,MAAI5F,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAACsH,WAAW,IAAIzE,OAAO,IAAI,IAA3B,EAAiC,kCAAkCkB,QAAQ,CAACN,QAA3C,GAAsDM,QAAQ,CAACL,MAA/D,GAAwEK,QAAQ,CAACP,IAAjF,GAAwF,KAAzH,CAAtD,GAAwL,KAAK,CAA7L;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC6C,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACA,OAAO,CAACnB,MAAR,GAAiB,CAAlB,CAAP,CAA4B6F,KAA5B,CAAkCU,OAAlC,KAA8CC,SAAjE,IAA8ErF,OAAO,CAACA,OAAO,CAACnB,MAAR,GAAiB,CAAlB,CAAP,CAA4B6F,KAA5B,CAAkCY,SAAlC,KAAgDD,SAA/H,EAA0I,sCAAsCnE,QAAQ,CAACN,QAA/C,GAA0DM,QAAQ,CAACL,MAAnE,GAA4EK,QAAQ,CAACP,IAArF,GAA4F,KAA5F,GAAoG,wFAApG,GAA+L,uDAAzU,CAAtD,GAA0b,KAAK,CAA/b;AACD;;AACD,MAAI4E,eAAe,GAAGC,cAAc,CAACxF,OAAO,IAAIA,OAAO,CAACsC,GAAR,CAAYC,KAAK,IAAIhE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB+D,KAAlB,EAAyB;AAC5FuB,IAAAA,MAAM,EAAEvF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB8F,YAAlB,EAAgC/B,KAAK,CAACuB,MAAtC,CADoF;AAE5FlD,IAAAA,QAAQ,EAAE5D,SAAS,CAAC,CAACwH,kBAAD,EACpB;AACA/D,IAAAA,SAAS,CAACgF,cAAV,GAA2BhF,SAAS,CAACgF,cAAV,CAAyBlD,KAAK,CAAC3B,QAA/B,EAAyCA,QAApE,GAA+E2B,KAAK,CAAC3B,QAFjE,CAAD,CAFyE;AAK5F4B,IAAAA,YAAY,EAAED,KAAK,CAACC,YAAN,KAAuB,GAAvB,GAA6BgC,kBAA7B,GAAkDxH,SAAS,CAAC,CAACwH,kBAAD,EAC1E;AACA/D,IAAAA,SAAS,CAACgF,cAAV,GAA2BhF,SAAS,CAACgF,cAAV,CAAyBlD,KAAK,CAACC,YAA/B,EAA6C5B,QAAxE,GAAmF2B,KAAK,CAACC,YAFf,CAAD;AALmB,GAAzB,CAArB,CAAZ,EAQ/B6B,aAR+B,EAQhBD,eARgB,CAApC,CA1D2D,CAoE3D;AACA;AACA;;;AACA,MAAIF,WAAW,IAAIqB,eAAnB,EAAoC;AAClC,WAAO,aAAazI,KAAK,CAAC2G,aAAN,CAAoB5D,eAAe,CAAC6D,QAApC,EAA8C;AAChEC,MAAAA,KAAK,EAAE;AACLzC,QAAAA,QAAQ,EAAE5C,QAAQ,CAAC;AACjBsC,UAAAA,QAAQ,EAAE,GADO;AAEjBC,UAAAA,MAAM,EAAE,EAFS;AAGjBF,UAAAA,IAAI,EAAE,EAHW;AAIjByC,UAAAA,KAAK,EAAE,IAJU;AAKjBrE,UAAAA,GAAG,EAAE;AALY,SAAD,EAMfmC,QANe,CADb;AAQLE,QAAAA,cAAc,EAAE7D,MAAM,CAACmI;AARlB;AADyD,KAA9C,EAWjBH,eAXiB,CAApB;AAYD;;AACD,SAAOA,eAAP;AACD;;AACD,SAASI,qBAAT,GAAiC;AAC/B,MAAIC,KAAK,GAAGC,aAAa,EAAzB;AACA,MAAIC,OAAO,GAAGpI,oBAAoB,CAACkI,KAAD,CAApB,GAA8BA,KAAK,CAACG,MAAN,GAAe,GAAf,GAAqBH,KAAK,CAACI,UAAzD,GAAsEJ,KAAK,YAAYK,KAAjB,GAAyBL,KAAK,CAACE,OAA/B,GAAyC1D,IAAI,CAACC,SAAL,CAAeuD,KAAf,CAA7H;AACA,MAAIM,KAAK,GAAGN,KAAK,YAAYK,KAAjB,GAAyBL,KAAK,CAACM,KAA/B,GAAuC,IAAnD;AACA,MAAIC,SAAS,GAAG,wBAAhB;AACA,MAAIC,SAAS,GAAG;AACdC,IAAAA,OAAO,EAAE,QADK;AAEdC,IAAAA,eAAe,EAAEH;AAFH,GAAhB;AAIA,MAAII,UAAU,GAAG;AACfF,IAAAA,OAAO,EAAE,SADM;AAEfC,IAAAA,eAAe,EAAEH;AAFF,GAAjB;AAIA,MAAIK,OAAO,GAAG,IAAd;;AACA,MAAIlH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCiH,IAAAA,OAAO,CAACb,KAAR,CAAc,sDAAd,EAAsEA,KAAtE;AACAY,IAAAA,OAAO,GAAG,aAAa1J,KAAK,CAAC2G,aAAN,CAAoB3G,KAAK,CAAC4J,QAA1B,EAAoC,IAApC,EAA0C,aAAa5J,KAAK,CAAC2G,aAAN,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,yCAA/B,CAAvD,EAAkI,aAAa3G,KAAK,CAAC2G,aAAN,CAAoB,GAApB,EAAyB,IAAzB,EAA+B,8FAA/B,EAA+H,aAAa3G,KAAK,CAAC2G,aAAN,CAAoB,MAApB,EAA4B;AAC5UkD,MAAAA,KAAK,EAAEJ;AADqU,KAA5B,EAE/S,eAF+S,CAA5I,EAEjJ,KAFiJ,EAE1I,GAF0I,EAErI,aAAazJ,KAAK,CAAC2G,aAAN,CAAoB,MAApB,EAA4B;AACxEkD,MAAAA,KAAK,EAAEJ;AADiE,KAA5B,EAE3C,cAF2C,CAFwH,EAIlJ,sBAJkJ,CAA/I,CAAvB;AAKD;;AACD,SAAO,aAAazJ,KAAK,CAAC2G,aAAN,CAAoB3G,KAAK,CAAC4J,QAA1B,EAAoC,IAApC,EAA0C,aAAa5J,KAAK,CAAC2G,aAAN,CAAoB,IAApB,EAA0B,IAA1B,EAAgC,+BAAhC,CAAvD,EAAyH,aAAa3G,KAAK,CAAC2G,aAAN,CAAoB,IAApB,EAA0B;AAClLkD,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE;AADN;AAD2K,GAA1B,EAIvJd,OAJuJ,CAAtI,EAIPI,KAAK,GAAG,aAAapJ,KAAK,CAAC2G,aAAN,CAAoB,KAApB,EAA2B;AAC3DkD,IAAAA,KAAK,EAAEP;AADoD,GAA3B,EAE/BF,KAF+B,CAAhB,GAEN,IANQ,EAMFM,OANE,CAApB;AAOD;;AACD,MAAMK,mBAAmB,GAAG,aAAa/J,KAAK,CAAC2G,aAAN,CAAoBkC,qBAApB,EAA2C,IAA3C,CAAzC;;AACA,MAAMmB,mBAAN,SAAkChK,KAAK,CAACwI,SAAxC,CAAkD;AAChDyB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAK5D,KAAL,GAAa;AACXlC,MAAAA,QAAQ,EAAE8F,KAAK,CAAC9F,QADL;AAEX+F,MAAAA,YAAY,EAAED,KAAK,CAACC,YAFT;AAGXrB,MAAAA,KAAK,EAAEoB,KAAK,CAACpB;AAHF,KAAb;AAKD;;AAC8B,SAAxBsB,wBAAwB,CAACtB,KAAD,EAAQ;AACrC,WAAO;AACLA,MAAAA,KAAK,EAAEA;AADF,KAAP;AAGD;;AAC8B,SAAxBuB,wBAAwB,CAACH,KAAD,EAAQ5D,KAAR,EAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIA,KAAK,CAAClC,QAAN,KAAmB8F,KAAK,CAAC9F,QAAzB,IAAqCkC,KAAK,CAAC6D,YAAN,KAAuB,MAAvB,IAAiCD,KAAK,CAACC,YAAN,KAAuB,MAAjG,EAAyG;AACvG,aAAO;AACLrB,QAAAA,KAAK,EAAEoB,KAAK,CAACpB,KADR;AAEL1E,QAAAA,QAAQ,EAAE8F,KAAK,CAAC9F,QAFX;AAGL+F,QAAAA,YAAY,EAAED,KAAK,CAACC;AAHf,OAAP;AAKD,KAf2C,CAiB5C;AACA;AACA;AACA;;;AACA,WAAO;AACLrB,MAAAA,KAAK,EAAEoB,KAAK,CAACpB,KAAN,IAAexC,KAAK,CAACwC,KADvB;AAEL1E,MAAAA,QAAQ,EAAEkC,KAAK,CAAClC,QAFX;AAGL+F,MAAAA,YAAY,EAAED,KAAK,CAACC,YAAN,IAAsB7D,KAAK,CAAC6D;AAHrC,KAAP;AAKD;;AACDG,EAAAA,iBAAiB,CAACxB,KAAD,EAAQyB,SAAR,EAAmB;AAClCZ,IAAAA,OAAO,CAACb,KAAR,CAAc,uDAAd,EAAuEA,KAAvE,EAA8EyB,SAA9E;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKlE,KAAL,CAAWwC,KAAX,GAAmB,aAAa9I,KAAK,CAAC2G,aAAN,CAAoB3D,YAAY,CAAC4D,QAAjC,EAA2C;AAChFC,MAAAA,KAAK,EAAE,KAAKqD,KAAL,CAAWO;AAD8D,KAA3C,EAEpC,aAAazK,KAAK,CAAC2G,aAAN,CAAoBvD,iBAAiB,CAACwD,QAAtC,EAAgD;AAC9DC,MAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWwC,KAD4C;AAE9D4B,MAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS;AAFyC,KAAhD,CAFuB,CAAhC,GAKD,KAAKT,KAAL,CAAWQ,QALjB;AAMD;;AAnD+C;;AAqDlD,SAASE,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAI;AACFJ,IAAAA,YADE;AAEFhF,IAAAA,KAFE;AAGFiF,IAAAA;AAHE,MAIAG,IAJJ;AAKA,MAAI1F,iBAAiB,GAAGnF,KAAK,CAAC4D,UAAN,CAAiBtB,iBAAjB,CAAxB,CAN2B,CAQ3B;AACA;;AACA,MAAI6C,iBAAiB,IAAIA,iBAAiB,CAACL,MAAvC,IAAiDK,iBAAiB,CAAC2F,aAAnE,KAAqFrF,KAAK,CAACmC,KAAN,CAAYmD,YAAZ,IAA4BtF,KAAK,CAACmC,KAAN,CAAYoD,aAA7H,CAAJ,EAAiJ;AAC/I7F,IAAAA,iBAAiB,CAAC2F,aAAlB,CAAgCG,0BAAhC,GAA6DxF,KAAK,CAACmC,KAAN,CAAYsD,EAAzE;AACD;;AACD,SAAO,aAAalL,KAAK,CAAC2G,aAAN,CAAoB3D,YAAY,CAAC4D,QAAjC,EAA2C;AAC7DC,IAAAA,KAAK,EAAE4D;AADsD,GAA3C,EAEjBC,QAFiB,CAApB;AAGD;;AACD,SAAShC,cAAT,CAAwBxF,OAAxB,EAAiCqE,aAAjC,EAAgDD,eAAhD,EAAiE;AAC/D,MAAI6D,iBAAJ;;AACA,MAAI5D,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAC5BA,IAAAA,aAAa,GAAG,EAAhB;AACD;;AACD,MAAID,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9BA,IAAAA,eAAe,GAAG,IAAlB;AACD;;AACD,MAAIpE,OAAO,IAAI,IAAf,EAAqB;AACnB,QAAIkI,gBAAJ;;AACA,QAAI,CAACA,gBAAgB,GAAG9D,eAApB,KAAwC,IAAxC,IAAgD8D,gBAAgB,CAACC,MAArE,EAA6E;AAC3E;AACA;AACAnI,MAAAA,OAAO,GAAGoE,eAAe,CAACpE,OAA1B;AACD,KAJD,MAIO;AACL,aAAO,IAAP;AACD;AACF;;AACD,MAAIuF,eAAe,GAAGvF,OAAtB,CAlB+D,CAoB/D;;AACA,MAAImI,MAAM,GAAG,CAACF,iBAAiB,GAAG7D,eAArB,KAAyC,IAAzC,GAAgD,KAAK,CAArD,GAAyD6D,iBAAiB,CAACE,MAAxF;;AACA,MAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,QAAIC,UAAU,GAAG7C,eAAe,CAAC8C,SAAhB,CAA0BC,CAAC,IAAIA,CAAC,CAAC5D,KAAF,CAAQsD,EAAR,KAAeG,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAACG,CAAC,CAAC5D,KAAF,CAAQsD,EAAT,CAA/C,CAA/B,CAAjB;AACA,MAAEI,UAAU,IAAI,CAAhB,IAAqB9I,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,8DAA8DwB,MAAM,CAACgK,IAAP,CAAYJ,MAAZ,EAAoBK,IAApB,CAAyB,GAAzB,CAAtE,CAAxD,GAA+JzL,gBAAgB,CAAC,KAAD,CAApM,GAA8M,KAAK,CAAnN;AACAwI,IAAAA,eAAe,GAAGA,eAAe,CAACJ,KAAhB,CAAsB,CAAtB,EAAyBsD,IAAI,CAACC,GAAL,CAASnD,eAAe,CAAC1G,MAAzB,EAAiCuJ,UAAU,GAAG,CAA9C,CAAzB,CAAlB;AACD;;AACD,SAAO7C,eAAe,CAACoD,WAAhB,CAA4B,CAAC5I,MAAD,EAASwC,KAAT,EAAgBqG,KAAhB,KAA0B;AAC3D,QAAIhD,KAAK,GAAGrD,KAAK,CAACmC,KAAN,CAAYsD,EAAZ,GAAiBG,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,CAAC5F,KAAK,CAACmC,KAAN,CAAYsD,EAAb,CAAjD,GAAoE,IAAhF,CAD2D,CAE3D;;AACA,QAAIH,YAAY,GAAG,IAAnB;;AACA,QAAIzD,eAAJ,EAAqB;AACnByD,MAAAA,YAAY,GAAGtF,KAAK,CAACmC,KAAN,CAAYmD,YAAZ,IAA4BhB,mBAA3C;AACD;;AACD,QAAI7G,OAAO,GAAGqE,aAAa,CAACwE,MAAd,CAAqBtD,eAAe,CAACJ,KAAhB,CAAsB,CAAtB,EAAyByD,KAAK,GAAG,CAAjC,CAArB,CAAd;;AACA,QAAIE,WAAW,GAAG,MAAM;AACtB,UAAItB,QAAJ;;AACA,UAAI5B,KAAJ,EAAW;AACT4B,QAAAA,QAAQ,GAAGK,YAAX;AACD,OAFD,MAEO,IAAItF,KAAK,CAACmC,KAAN,CAAYY,SAAhB,EAA2B;AAChC;AACA;AACA;AACA;AACA;AACA;AACAkC,QAAAA,QAAQ,GAAG,aAAa1K,KAAK,CAAC2G,aAAN,CAAoBlB,KAAK,CAACmC,KAAN,CAAYY,SAAhC,EAA2C,IAA3C,CAAxB;AACD,OARM,MAQA,IAAI/C,KAAK,CAACmC,KAAN,CAAYU,OAAhB,EAAyB;AAC9BoC,QAAAA,QAAQ,GAAGjF,KAAK,CAACmC,KAAN,CAAYU,OAAvB;AACD,OAFM,MAEA;AACLoC,QAAAA,QAAQ,GAAGzH,MAAX;AACD;;AACD,aAAO,aAAajD,KAAK,CAAC2G,aAAN,CAAoBiE,aAApB,EAAmC;AACrDnF,QAAAA,KAAK,EAAEA,KAD8C;AAErDgF,QAAAA,YAAY,EAAE;AACZxH,UAAAA,MADY;AAEZC,UAAAA,OAFY;AAGZC,UAAAA,WAAW,EAAEmE,eAAe,IAAI;AAHpB,SAFuC;AAOrDoD,QAAAA,QAAQ,EAAEA;AAP2C,OAAnC,CAApB;AASD,KA1BD,CAR2D,CAmC3D;AACA;AACA;;;AACA,WAAOpD,eAAe,KAAK7B,KAAK,CAACmC,KAAN,CAAYoD,aAAZ,IAA6BvF,KAAK,CAACmC,KAAN,CAAYmD,YAAzC,IAAyDe,KAAK,KAAK,CAAxE,CAAf,GAA4F,aAAa9L,KAAK,CAAC2G,aAAN,CAAoBqD,mBAApB,EAAyC;AACvJ5F,MAAAA,QAAQ,EAAEkD,eAAe,CAAClD,QAD6H;AAEvJ+F,MAAAA,YAAY,EAAE7C,eAAe,CAAC6C,YAFyH;AAGvJQ,MAAAA,SAAS,EAAEI,YAH4I;AAIvJjC,MAAAA,KAAK,EAAEA,KAJgJ;AAKvJ4B,MAAAA,QAAQ,EAAEsB,WAAW,EALkI;AAMvJvB,MAAAA,YAAY,EAAE;AACZxH,QAAAA,MAAM,EAAE,IADI;AAEZC,QAAAA,OAFY;AAGZC,QAAAA,WAAW,EAAE;AAHD;AANyI,KAAzC,CAAzG,GAWF6I,WAAW,EAXhB;AAYD,GAlDM,EAkDJ,IAlDI,CAAP;AAmDD;;AACD,IAAIC,cAAc,GAAG,aAAa,UAAUA,cAAV,EAA0B;AAC1DA,EAAAA,cAAc,CAAC,YAAD,CAAd,GAA+B,YAA/B;AACAA,EAAAA,cAAc,CAAC,gBAAD,CAAd,GAAmC,gBAAnC;AACAA,EAAAA,cAAc,CAAC,mBAAD,CAAd,GAAsC,aAAtC;AACA,SAAOA,cAAP;AACD,CALiC,CAKhCA,cAAc,IAAI,EALc,CAAlC;;AAMA,IAAIC,mBAAmB,GAAG,aAAa,UAAUA,mBAAV,EAA+B;AACpEA,EAAAA,mBAAmB,CAAC,YAAD,CAAnB,GAAoC,YAApC;AACAA,EAAAA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,eAAvC;AACAA,EAAAA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,eAAvC;AACAA,EAAAA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,eAAvC;AACAA,EAAAA,mBAAmB,CAAC,eAAD,CAAnB,GAAuC,eAAvC;AACAA,EAAAA,mBAAmB,CAAC,oBAAD,CAAnB,GAA4C,oBAA5C;AACAA,EAAAA,mBAAmB,CAAC,YAAD,CAAnB,GAAoC,YAApC;AACAA,EAAAA,mBAAmB,CAAC,gBAAD,CAAnB,GAAwC,gBAAxC;AACAA,EAAAA,mBAAmB,CAAC,mBAAD,CAAnB,GAA2C,aAA3C;AACAA,EAAAA,mBAAmB,CAAC,YAAD,CAAnB,GAAoC,YAApC;AACA,SAAOA,mBAAP;AACD,CAZsC,CAYrCA,mBAAmB,IAAI,EAZc,CAAvC;;AAaA,SAASC,yBAAT,CAAmCC,QAAnC,EAA6C;AAC3C,SAAOA,QAAQ,GAAG,4FAAlB;AACD;;AACD,SAASC,oBAAT,CAA8BD,QAA9B,EAAwC;AACtC,MAAIE,GAAG,GAAGtM,KAAK,CAAC4D,UAAN,CAAiBtB,iBAAjB,CAAV;AACA,GAACgK,GAAD,GAAO9J,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQkM,yBAAyB,CAACC,QAAD,CAAjC,CAAxD,GAAuGnM,gBAAgB,CAAC,KAAD,CAA9H,GAAwI,KAAK,CAA7I;AACA,SAAOqM,GAAP;AACD;;AACD,SAASC,kBAAT,CAA4BH,QAA5B,EAAsC;AACpC,MAAI9F,KAAK,GAAGtG,KAAK,CAAC4D,UAAN,CAAiBhB,sBAAjB,CAAZ;AACA,GAAC0D,KAAD,GAAS9D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQkM,yBAAyB,CAACC,QAAD,CAAjC,CAAxD,GAAuGnM,gBAAgB,CAAC,KAAD,CAAhI,GAA0I,KAAK,CAA/I;AACA,SAAOqG,KAAP;AACD;;AACD,SAASkG,eAAT,CAAyBJ,QAAzB,EAAmC;AACjC,MAAIxE,KAAK,GAAG5H,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAAZ;AACA,GAAC4E,KAAD,GAASpF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQkM,yBAAyB,CAACC,QAAD,CAAjC,CAAxD,GAAuGnM,gBAAgB,CAAC,KAAD,CAAhI,GAA0I,KAAK,CAA/I;AACA,SAAO2H,KAAP;AACD,C,CAED;;;AACA,SAAS6E,iBAAT,CAA2BL,QAA3B,EAAqC;AACnC,MAAIxE,KAAK,GAAG4E,eAAe,CAACJ,QAAD,CAA3B;AACA,MAAIM,SAAS,GAAG9E,KAAK,CAAC1E,OAAN,CAAc0E,KAAK,CAAC1E,OAAN,CAAcnB,MAAd,GAAuB,CAArC,CAAhB;AACA,GAAC2K,SAAS,CAAC9E,KAAV,CAAgBsD,EAAjB,GAAsB1I,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQmM,QAAQ,GAAG,0DAAnB,CAAxD,GAAyInM,gBAAgB,CAAC,KAAD,CAA/K,GAAyL,KAAK,CAA9L;AACA,SAAOyM,SAAS,CAAC9E,KAAV,CAAgBsD,EAAvB;AACD;AAED;AACA;AACA;;;AACA,SAASyB,UAAT,GAAsB;AACpB,SAAOF,iBAAiB,CAACP,mBAAmB,CAACU,UAArB,CAAxB;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,aAAT,GAAyB;AACvB,MAAIvG,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAACY,aAArB,CAA9B;AACA,SAAOxG,KAAK,CAACyG,UAAb;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASC,cAAT,GAA0B;AACxB,MAAI7H,iBAAiB,GAAGkH,oBAAoB,CAACJ,cAAc,CAACgB,cAAhB,CAA5C;AACA,MAAI3G,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAACe,cAArB,CAA9B;AACA,SAAOjN,KAAK,CAACyE,OAAN,CAAc,OAAO;AAC1ByI,IAAAA,UAAU,EAAE/H,iBAAiB,CAACgI,MAAlB,CAAyBD,UADX;AAE1B5G,IAAAA,KAAK,EAAEA,KAAK,CAAC6D;AAFa,GAAP,CAAd,EAGH,CAAChF,iBAAiB,CAACgI,MAAlB,CAAyBD,UAA1B,EAAsC5G,KAAK,CAAC6D,YAA5C,CAHG,CAAP;AAID;AAED;AACA;AACA;AACA;;;AACA,SAASiD,UAAT,GAAsB;AACpB,MAAI;AACFlK,IAAAA,OADE;AAEFmK,IAAAA;AAFE,MAGAd,kBAAkB,CAACL,mBAAmB,CAACoB,UAArB,CAHtB;AAIA,SAAOtN,KAAK,CAACyE,OAAN,CAAc,MAAMvB,OAAO,CAACsC,GAAR,CAAYC,KAAK,IAAI;AAC9C,QAAI;AACF3B,MAAAA,QADE;AAEFkD,MAAAA;AAFE,QAGAvB,KAHJ,CAD8C,CAK9C;AACA;AACA;;AACA,WAAO;AACLyF,MAAAA,EAAE,EAAEzF,KAAK,CAACmC,KAAN,CAAYsD,EADX;AAELpH,MAAAA,QAFK;AAGLkD,MAAAA,MAHK;AAILuG,MAAAA,IAAI,EAAEF,UAAU,CAAC5H,KAAK,CAACmC,KAAN,CAAYsD,EAAb,CAJX;AAKLsC,MAAAA,MAAM,EAAE/H,KAAK,CAACmC,KAAN,CAAY4F;AALf,KAAP;AAOD,GAf0B,CAApB,EAeH,CAACtK,OAAD,EAAUmK,UAAV,CAfG,CAAP;AAgBD;AAED;AACA;AACA;;;AACA,SAASI,aAAT,GAAyB;AACvB,MAAInH,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAACwB,aAArB,CAA9B;AACA,MAAIC,OAAO,GAAGlB,iBAAiB,CAACP,mBAAmB,CAACwB,aAArB,CAA/B;;AACA,MAAIpH,KAAK,CAAC+E,MAAN,IAAgB/E,KAAK,CAAC+E,MAAN,CAAasC,OAAb,KAAyB,IAA7C,EAAmD;AACjDhE,IAAAA,OAAO,CAACb,KAAR,CAAc,6DAA6D6E,OAA7D,GAAuE,GAArF;AACA,WAAOpF,SAAP;AACD;;AACD,SAAOjC,KAAK,CAAC+G,UAAN,CAAiBM,OAAjB,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASC,kBAAT,CAA4BD,OAA5B,EAAqC;AACnC,MAAIrH,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAAC2B,kBAArB,CAA9B;AACA,SAAOvH,KAAK,CAAC+G,UAAN,CAAiBM,OAAjB,CAAP;AACD;AAED;AACA;AACA;;;AACA,SAASG,aAAT,GAAyB;AACvB,MAAIxH,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAAC6B,aAArB,CAA9B;AACA,MAAInG,KAAK,GAAG5H,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAAZ;AACA,GAAC4E,KAAD,GAASpF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,kDAAR,CAAxD,GAAsHA,gBAAgB,CAAC,KAAD,CAA/I,GAAyJ,KAAK,CAA9J;AACA,SAAOwB,MAAM,CAACuM,MAAP,CAAc,CAAC1H,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAAC2H,UAAhC,KAA+C,EAA7D,EAAiE,CAAjE,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASlF,aAAT,GAAyB;AACvB,MAAImF,aAAJ;;AACA,MAAIpF,KAAK,GAAG9I,KAAK,CAAC4D,UAAN,CAAiBR,iBAAjB,CAAZ;AACA,MAAIkD,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAACiC,aAArB,CAA9B;AACA,MAAIR,OAAO,GAAGlB,iBAAiB,CAACP,mBAAmB,CAACiC,aAArB,CAA/B,CAJuB,CAMvB;AACA;;AACA,MAAIrF,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD,GAVsB,CAYvB;;;AACA,SAAO,CAACoF,aAAa,GAAG5H,KAAK,CAAC+E,MAAvB,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkD6C,aAAa,CAACP,OAAD,CAAtE;AACD;AAED;AACA;AACA;;;AACA,SAASS,aAAT,GAAyB;AACvB,MAAIvH,KAAK,GAAG7G,KAAK,CAAC4D,UAAN,CAAiBf,YAAjB,CAAZ;AACA,SAAOgE,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAACwH,KAAtC;AACD;AAED;AACA;AACA;;;AACA,SAASC,aAAT,GAAyB;AACvB,MAAIzH,KAAK,GAAG7G,KAAK,CAAC4D,UAAN,CAAiBf,YAAjB,CAAZ;AACA,SAAOgE,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAAC0H,MAAtC;AACD;;AACD,IAAIC,SAAS,GAAG,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AAC/B,MAAI;AACFvB,IAAAA,MADE;AAEFzJ,IAAAA;AAFE,MAGA2I,oBAAoB,CAACJ,cAAc,CAAC0C,UAAhB,CAHxB;AAIA,MAAIrI,KAAK,GAAGiG,kBAAkB,CAACL,mBAAmB,CAACyC,UAArB,CAA9B;AACA,MAAI,CAACC,UAAD,EAAaC,aAAb,IAA8B7O,KAAK,CAAC8O,QAAN,CAAe,EAAf,CAAlC;AACA,MAAIC,eAAe,GAAG/O,KAAK,CAAC+F,WAAN,CAAkBiJ,GAAG,IAAI;AAC7C,QAAI,OAAON,WAAP,KAAuB,UAA3B,EAAuC;AACrC,aAAO,CAAC,CAACA,WAAT;AACD;;AACD,QAAIhL,QAAQ,KAAK,GAAjB,EAAsB;AACpB,aAAOgL,WAAW,CAACM,GAAD,CAAlB;AACD,KAN4C,CAQ7C;AACA;AACA;;;AACA,QAAI;AACFC,MAAAA,eADE;AAEFC,MAAAA,YAFE;AAGFC,MAAAA;AAHE,QAIAH,GAJJ;AAKA,WAAON,WAAW,CAAC;AACjBO,MAAAA,eAAe,EAAEzN,QAAQ,CAAC,EAAD,EAAKyN,eAAL,EAAsB;AAC7CnL,QAAAA,QAAQ,EAAEpD,aAAa,CAACuO,eAAe,CAACnL,QAAjB,EAA2BJ,QAA3B,CAAb,IAAqDuL,eAAe,CAACnL;AADlC,OAAtB,CADR;AAIjBoL,MAAAA,YAAY,EAAE1N,QAAQ,CAAC,EAAD,EAAK0N,YAAL,EAAmB;AACvCpL,QAAAA,QAAQ,EAAEpD,aAAa,CAACwO,YAAY,CAACpL,QAAd,EAAwBJ,QAAxB,CAAb,IAAkDwL,YAAY,CAACpL;AADlC,OAAnB,CAJL;AAOjBqL,MAAAA;AAPiB,KAAD,CAAlB;AASD,GAzBqB,EAyBnB,CAACzL,QAAD,EAAWgL,WAAX,CAzBmB,CAAtB,CAP+B,CAkC/B;AACA;;AACA1O,EAAAA,KAAK,CAACoP,SAAN,CAAgB,MAAM;AACpB,QAAInN,GAAG,GAAGoN,MAAM,CAAC,EAAEb,SAAH,CAAhB;AACAK,IAAAA,aAAa,CAAC5M,GAAD,CAAb;AACA,WAAO,MAAMkL,MAAM,CAACmC,aAAP,CAAqBrN,GAArB,CAAb;AACD,GAJD,EAIG,CAACkL,MAAD,CAJH,EApC+B,CA0C/B;AACA;AACA;AACA;;AACAnN,EAAAA,KAAK,CAACoP,SAAN,CAAgB,MAAM;AACpB,QAAIR,UAAU,KAAK,EAAnB,EAAuB;AACrBzB,MAAAA,MAAM,CAACoC,UAAP,CAAkBX,UAAlB,EAA8BG,eAA9B;AACD;AACF,GAJD,EAIG,CAAC5B,MAAD,EAASyB,UAAT,EAAqBG,eAArB,CAJH,EA9C+B,CAoD/B;AACA;;AACA,SAAOH,UAAU,IAAItI,KAAK,CAACkJ,QAAN,CAAeC,GAAf,CAAmBb,UAAnB,CAAd,GAA+CtI,KAAK,CAACkJ,QAAN,CAAeE,GAAf,CAAmBd,UAAnB,CAA/C,GAAgFjO,YAAvF;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASsE,iBAAT,GAA6B;AAC3B,MAAI;AACFkI,IAAAA;AADE,MAEAd,oBAAoB,CAACJ,cAAc,CAAC0D,iBAAhB,CAFxB;AAGA,MAAIzE,EAAE,GAAGuB,iBAAiB,CAACP,mBAAmB,CAACyD,iBAArB,CAA1B;AACA,MAAIhK,SAAS,GAAG3F,KAAK,CAAC4F,MAAN,CAAa,KAAb,CAAhB;AACAjB,EAAAA,yBAAyB,CAAC,MAAM;AAC9BgB,IAAAA,SAAS,CAACE,OAAV,GAAoB,IAApB;AACD,GAFwB,CAAzB;AAGA,MAAIC,QAAQ,GAAG9F,KAAK,CAAC+F,WAAN,CAAkB,UAAUzC,EAAV,EAAc0C,OAAd,EAAuB;AACtD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,EAAV;AACD;;AACDxD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAACsF,SAAS,CAACE,OAAX,EAAoBnB,qBAApB,CAAtD,GAAmG,KAAK,CAAxG,CAJsD,CAMtD;AACA;;AACA,QAAI,CAACiB,SAAS,CAACE,OAAf,EAAwB;;AACxB,QAAI,OAAOvC,EAAP,KAAc,QAAlB,EAA4B;AAC1B6J,MAAAA,MAAM,CAACrH,QAAP,CAAgBxC,EAAhB;AACD,KAFD,MAEO;AACL6J,MAAAA,MAAM,CAACrH,QAAP,CAAgBxC,EAAhB,EAAoB9B,QAAQ,CAAC;AAC3BoO,QAAAA,WAAW,EAAE1E;AADc,OAAD,EAEzBlF,OAFyB,CAA5B;AAGD;AACF,GAhBc,EAgBZ,CAACmH,MAAD,EAASjC,EAAT,CAhBY,CAAf;AAiBA,SAAOpF,QAAP;AACD;;AACD,MAAM+J,aAAa,GAAG,EAAtB;;AACA,SAAS/H,WAAT,CAAqB7F,GAArB,EAA0B6N,IAA1B,EAAgC9G,OAAhC,EAAyC;AACvC,MAAI,CAAC8G,IAAD,IAAS,CAACD,aAAa,CAAC5N,GAAD,CAA3B,EAAkC;AAChC4N,IAAAA,aAAa,CAAC5N,GAAD,CAAb,GAAqB,IAArB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC,KAAD,EAAQ2I,OAAR,CAAtD,GAAyE,KAAK,CAA9E;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM+G,gBAAgB,GAAG,iBAAzB;AACA,MAAMC,mBAAmB,GAAGhQ,KAAK,CAAC+P,gBAAD,CAAjC;AAEA;AACA;AACA;;AACA,SAASE,cAAT,CAAwBpF,IAAxB,EAA8B;AAC5B,MAAI;AACFqF,IAAAA,eADE;AAEF/C,IAAAA,MAFE;AAGFgD,IAAAA;AAHE,MAIAtF,IAJJ,CAD4B,CAM5B;AACA;;AACA,MAAI,CAACvE,KAAD,EAAQ8J,YAAR,IAAwBpQ,KAAK,CAAC8O,QAAN,CAAe3B,MAAM,CAAC7G,KAAtB,CAA5B;AACA,MAAI;AACF+J,IAAAA;AADE,MAEAF,MAAM,IAAI,EAFd;AAGA,MAAIG,QAAQ,GAAGtQ,KAAK,CAAC+F,WAAN,CAAkBwK,QAAQ,IAAI;AAC3CF,IAAAA,kBAAkB,IAAIL,mBAAtB,GAA4CA,mBAAmB,CAAC,MAAMI,YAAY,CAACG,QAAD,CAAnB,CAA/D,GAAgGH,YAAY,CAACG,QAAD,CAA5G;AACD,GAFc,EAEZ,CAACH,YAAD,EAAeC,kBAAf,CAFY,CAAf;AAGArQ,EAAAA,KAAK,CAAC+E,eAAN,CAAsB,MAAMoI,MAAM,CAACqD,SAAP,CAAiBF,QAAjB,CAA5B,EAAwD,CAACnD,MAAD,EAASmD,QAAT,CAAxD;AACA,MAAI3M,SAAS,GAAG3D,KAAK,CAACyE,OAAN,CAAc,MAAM;AAClC,WAAO;AACLP,MAAAA,UAAU,EAAEiJ,MAAM,CAACjJ,UADd;AAELyE,MAAAA,cAAc,EAAEwE,MAAM,CAACxE,cAFlB;AAGL1C,MAAAA,EAAE,EAAEwK,CAAC,IAAItD,MAAM,CAACrH,QAAP,CAAgB2K,CAAhB,CAHJ;AAILpK,MAAAA,IAAI,EAAE,CAAC/C,EAAD,EAAKgD,KAAL,EAAYoK,IAAZ,KAAqBvD,MAAM,CAACrH,QAAP,CAAgBxC,EAAhB,EAAoB;AAC7CgD,QAAAA,KAD6C;AAE7CqK,QAAAA,kBAAkB,EAAED,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACC;AAFJ,OAApB,CAJtB;AAQLvK,MAAAA,OAAO,EAAE,CAAC9C,EAAD,EAAKgD,KAAL,EAAYoK,IAAZ,KAAqBvD,MAAM,CAACrH,QAAP,CAAgBxC,EAAhB,EAAoB;AAChD8C,QAAAA,OAAO,EAAE,IADuC;AAEhDE,QAAAA,KAFgD;AAGhDqK,QAAAA,kBAAkB,EAAED,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACC;AAHD,OAApB;AARzB,KAAP;AAcD,GAfe,EAeb,CAACxD,MAAD,CAfa,CAAhB;AAgBA,MAAIzJ,QAAQ,GAAGyJ,MAAM,CAACzJ,QAAP,IAAmB,GAAlC;AACA,MAAIyB,iBAAiB,GAAGnF,KAAK,CAACyE,OAAN,CAAc,OAAO;AAC3C0I,IAAAA,MAD2C;AAE3CxJ,IAAAA,SAF2C;AAG3CmB,IAAAA,MAAM,EAAE,KAHmC;AAI3CpB,IAAAA;AAJ2C,GAAP,CAAd,EAKpB,CAACyJ,MAAD,EAASxJ,SAAT,EAAoBD,QAApB,CALoB,CAAxB,CAjC4B,CAwC5B;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO,aAAa1D,KAAK,CAAC2G,aAAN,CAAoB3G,KAAK,CAAC4J,QAA1B,EAAoC,IAApC,EAA0C,aAAa5J,KAAK,CAAC2G,aAAN,CAAoBrE,iBAAiB,CAACsE,QAAtC,EAAgD;AACzHC,IAAAA,KAAK,EAAE1B;AADkH,GAAhD,EAExE,aAAanF,KAAK,CAAC2G,aAAN,CAAoB/D,sBAAsB,CAACgE,QAA3C,EAAqD;AACnEC,IAAAA,KAAK,EAAEP;AAD4D,GAArD,EAEb,aAAatG,KAAK,CAAC2G,aAAN,CAAoBiK,MAApB,EAA4B;AAC1ClN,IAAAA,QAAQ,EAAEA,QADgC;AAE1CU,IAAAA,QAAQ,EAAEkC,KAAK,CAAClC,QAF0B;AAG1CE,IAAAA,cAAc,EAAEgC,KAAK,CAAC6I,aAHoB;AAI1CxL,IAAAA,SAAS,EAAEA;AAJ+B,GAA5B,EAKb2C,KAAK,CAACuK,WAAN,GAAoB,aAAa7Q,KAAK,CAAC2G,aAAN,CAAoBmK,UAApB,EAAgC;AAClE3J,IAAAA,MAAM,EAAEgG,MAAM,CAAChG,MADmD;AAElEb,IAAAA,KAAK,EAAEA;AAF2D,GAAhC,CAAjC,GAGE4J,eARW,CAFA,CAF2D,CAAvD,EAYK,IAZL,CAApB;AAaD;;AACD,SAASY,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAI;AACF5J,IAAAA,MADE;AAEFb,IAAAA;AAFE,MAGAyK,KAHJ;AAIA,SAAO1J,aAAa,CAACF,MAAD,EAASoB,SAAT,EAAoBjC,KAApB,CAApB;AACD;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS0K,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI;AACFvN,IAAAA,QADE;AAEFgH,IAAAA,QAFE;AAGFwG,IAAAA,cAHE;AAIFC,IAAAA,YAJE;AAKFhB,IAAAA;AALE,MAMAc,KANJ;AAOA,MAAIG,UAAU,GAAGpR,KAAK,CAAC4F,MAAN,EAAjB;;AACA,MAAIwL,UAAU,CAACvL,OAAX,IAAsB,IAA1B,EAAgC;AAC9BuL,IAAAA,UAAU,CAACvL,OAAX,GAAqBhF,mBAAmB,CAAC;AACvCqQ,MAAAA,cADuC;AAEvCC,MAAAA,YAFuC;AAGvCE,MAAAA,QAAQ,EAAE;AAH6B,KAAD,CAAxC;AAKD;;AACD,MAAIC,OAAO,GAAGF,UAAU,CAACvL,OAAzB;AACA,MAAI,CAACS,KAAD,EAAQ8J,YAAR,IAAwBpQ,KAAK,CAAC8O,QAAN,CAAe;AACzCyC,IAAAA,MAAM,EAAED,OAAO,CAACC,MADyB;AAEzCnN,IAAAA,QAAQ,EAAEkN,OAAO,CAAClN;AAFuB,GAAf,CAA5B;AAIA,MAAI;AACFiM,IAAAA;AADE,MAEAF,MAAM,IAAI,EAFd;AAGA,MAAIG,QAAQ,GAAGtQ,KAAK,CAAC+F,WAAN,CAAkBwK,QAAQ,IAAI;AAC3CF,IAAAA,kBAAkB,IAAIL,mBAAtB,GAA4CA,mBAAmB,CAAC,MAAMI,YAAY,CAACG,QAAD,CAAnB,CAA/D,GAAgGH,YAAY,CAACG,QAAD,CAA5G;AACD,GAFc,EAEZ,CAACH,YAAD,EAAeC,kBAAf,CAFY,CAAf;AAGArQ,EAAAA,KAAK,CAAC+E,eAAN,CAAsB,MAAMuM,OAAO,CAACE,MAAR,CAAelB,QAAf,CAA5B,EAAsD,CAACgB,OAAD,EAAUhB,QAAV,CAAtD;AACA,SAAO,aAAatQ,KAAK,CAAC2G,aAAN,CAAoBiK,MAApB,EAA4B;AAC9ClN,IAAAA,QAAQ,EAAEA,QADoC;AAE9CgH,IAAAA,QAAQ,EAAEA,QAFoC;AAG9CtG,IAAAA,QAAQ,EAAEkC,KAAK,CAAClC,QAH8B;AAI9CE,IAAAA,cAAc,EAAEgC,KAAK,CAACiL,MAJwB;AAK9C5N,IAAAA,SAAS,EAAE2N;AALmC,GAA5B,CAApB;AAOD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAI;AACFpO,IAAAA,EADE;AAEF8C,IAAAA,OAFE;AAGFE,IAAAA,KAHE;AAIF9C,IAAAA;AAJE,MAKAkO,KALJ;AAMA,GAACjO,kBAAkB,EAAnB,GAAwBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ;AACxF;AACA,uEAFgF,CAAxD,GAEiDA,gBAAgB,CAAC,KAAD,CAFzF,GAEmG,KAAK,CAFxG;AAGAuC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC,CAACL,KAAK,CAAC4D,UAAN,CAAiBd,iBAAjB,EAAoCgC,MAAtC,EAA8C,4EAA4E,wEAA5E,GAAuJ,0EAArM,CAAtD,GAAyU,KAAK,CAA9U;AACA,MAAI;AACF5B,IAAAA;AADE,MAEAlD,KAAK,CAAC4D,UAAN,CAAiBZ,YAAjB,CAFJ;AAGA,MAAI;AACFc,IAAAA,QAAQ,EAAEsB;AADR,MAEAjB,WAAW,EAFf;AAGA,MAAI2B,QAAQ,GAAGd,WAAW,EAA1B,CAjBuB,CAmBvB;AACA;;AACA,MAAIkB,IAAI,GAAG5F,SAAS,CAACgD,EAAD,EAAKlD,iCAAiC,CAAC8C,OAAD,CAAjC,CAA2CsC,GAA3C,CAA+CC,KAAK,IAAIA,KAAK,CAACC,YAA9D,CAAL,EAAkFN,gBAAlF,EAAoG5B,QAAQ,KAAK,MAAjH,CAApB;AACA,MAAImO,QAAQ,GAAGrM,IAAI,CAACC,SAAL,CAAeW,IAAf,CAAf;AACAlG,EAAAA,KAAK,CAACoP,SAAN,CAAgB,MAAMtJ,QAAQ,CAACR,IAAI,CAACa,KAAL,CAAWwL,QAAX,CAAD,EAAuB;AACnDvL,IAAAA,OADmD;AAEnDE,IAAAA,KAFmD;AAGnD9C,IAAAA;AAHmD,GAAvB,CAA9B,EAII,CAACsC,QAAD,EAAW6L,QAAX,EAAqBnO,QAArB,EAA+B4C,OAA/B,EAAwCE,KAAxC,CAJJ;AAKA,SAAO,IAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASsL,MAAT,CAAgB1H,KAAhB,EAAuB;AACrB,SAAOzD,SAAS,CAACyD,KAAK,CAACxD,OAAP,CAAhB;AACD;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASmL,KAAT,CAAeC,MAAf,EAAuB;AACrBtP,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,yEAAyE,kEAAjF,CAAxD,GAA+MA,gBAAgB,CAAC,KAAD,CAA/N;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS2Q,MAAT,CAAgBmB,KAAhB,EAAuB;AACrB,MAAI;AACFrO,IAAAA,QAAQ,EAAEsO,YAAY,GAAG,GADvB;AAEFtH,IAAAA,QAAQ,GAAG,IAFT;AAGFtG,IAAAA,QAAQ,EAAE6N,YAHR;AAIF3N,IAAAA,cAAc,GAAG7D,MAAM,CAACmI,GAJtB;AAKFjF,IAAAA,SALE;AAMFmB,IAAAA,MAAM,EAAEoN,UAAU,GAAG;AANnB,MAOAH,KAPJ;AAQA,GAAC,CAACtO,kBAAkB,EAApB,GAAyBjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,0DAA0D,mDAAlE,CAAxD,GAAiLA,gBAAgB,CAAC,KAAD,CAA1N,GAAoO,KAAK,CAAzO,CATqB,CAWrB;AACA;;AACA,MAAIyD,QAAQ,GAAGsO,YAAY,CAAC5L,OAAb,CAAqB,MAArB,EAA6B,GAA7B,CAAf;AACA,MAAI+L,iBAAiB,GAAGnS,KAAK,CAACyE,OAAN,CAAc,OAAO;AAC3Cf,IAAAA,QAD2C;AAE3CC,IAAAA,SAF2C;AAG3CmB,IAAAA,MAAM,EAAEoN;AAHmC,GAAP,CAAd,EAIpB,CAACxO,QAAD,EAAWC,SAAX,EAAsBuO,UAAtB,CAJoB,CAAxB;;AAKA,MAAI,OAAOD,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAG1R,SAAS,CAAC0R,YAAD,CAAxB;AACD;;AACD,MAAI;AACFnO,IAAAA,QAAQ,GAAG,GADT;AAEFC,IAAAA,MAAM,GAAG,EAFP;AAGFF,IAAAA,IAAI,GAAG,EAHL;AAIFyC,IAAAA,KAAK,GAAG,IAJN;AAKFrE,IAAAA,GAAG,GAAG;AALJ,MAMAgQ,YANJ;AAOA,MAAIG,eAAe,GAAGpS,KAAK,CAACyE,OAAN,CAAc,MAAM;AACxC,QAAI4N,gBAAgB,GAAG3R,aAAa,CAACoD,QAAD,EAAWJ,QAAX,CAApC;;AACA,QAAI2O,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WAAO;AACLjO,MAAAA,QAAQ,EAAE;AACRN,QAAAA,QAAQ,EAAEuO,gBADF;AAERtO,QAAAA,MAFQ;AAGRF,QAAAA,IAHQ;AAIRyC,QAAAA,KAJQ;AAKRrE,QAAAA;AALQ,OADL;AAQLqC,MAAAA;AARK,KAAP;AAUD,GAfqB,EAenB,CAACZ,QAAD,EAAWI,QAAX,EAAqBC,MAArB,EAA6BF,IAA7B,EAAmCyC,KAAnC,EAA0CrE,GAA1C,EAA+CqC,cAA/C,CAfmB,CAAtB;AAgBA9B,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC+R,eAAe,IAAI,IAApB,EAA0B,wBAAwB1O,QAAxB,GAAmC,mCAAnC,IAA0E,OAAOI,QAAP,GAAkBC,MAAlB,GAA2BF,IAA3B,GAAkC,wCAA5G,IAAwJ,kDAAlL,CAAtD,GAA8R,KAAK,CAAnS;;AACA,MAAIuO,eAAe,IAAI,IAAvB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AACD,SAAO,aAAapS,KAAK,CAAC2G,aAAN,CAAoB7D,iBAAiB,CAAC8D,QAAtC,EAAgD;AAClEC,IAAAA,KAAK,EAAEsL;AAD2D,GAAhD,EAEjB,aAAanS,KAAK,CAAC2G,aAAN,CAAoB5D,eAAe,CAAC6D,QAApC,EAA8C;AAC5D8D,IAAAA,QAAQ,EAAEA,QADkD;AAE5D7D,IAAAA,KAAK,EAAEuL;AAFqD,GAA9C,CAFI,CAApB;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAI;AACF7H,IAAAA,QADE;AAEFtG,IAAAA;AAFE,MAGAmO,KAHJ;AAIA,SAAOrL,SAAS,CAACsL,wBAAwB,CAAC9H,QAAD,CAAzB,EAAqCtG,QAArC,CAAhB;AACD;AACD;AACA;AACA;AACA;;;AACA,SAASqO,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAI;AACFhI,IAAAA,QADE;AAEFK,IAAAA,YAFE;AAGF4H,IAAAA;AAHE,MAIAD,KAJJ;AAKA,SAAO,aAAa1S,KAAK,CAAC2G,aAAN,CAAoBiM,kBAApB,EAAwC;AAC1DD,IAAAA,OAAO,EAAEA,OADiD;AAE1D5H,IAAAA,YAAY,EAAEA;AAF4C,GAAxC,EAGjB,aAAa/K,KAAK,CAAC2G,aAAN,CAAoBkM,YAApB,EAAkC,IAAlC,EAAwCnI,QAAxC,CAHI,CAApB;AAID;;AACD,IAAIoI,iBAAiB,GAAG,aAAa,UAAUA,iBAAV,EAA6B;AAChEA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,CAAhC,CAAjB,GAAsD,SAAtD;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,SAAD,CAAjB,GAA+B,CAAhC,CAAjB,GAAsD,SAAtD;AACAA,EAAAA,iBAAiB,CAACA,iBAAiB,CAAC,OAAD,CAAjB,GAA6B,CAA9B,CAAjB,GAAoD,OAApD;AACA,SAAOA,iBAAP;AACD,CALoC,CAKnCA,iBAAiB,IAAI,EALc,CAArC;;AAMA,MAAMC,mBAAmB,GAAG,IAAIC,OAAJ,CAAY,MAAM,CAAE,CAApB,CAA5B;;AACA,MAAMJ,kBAAN,SAAiC5S,KAAK,CAACwI,SAAvC,CAAiD;AAC/CyB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAK5D,KAAL,GAAa;AACXwC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAC8B,SAAxBsB,wBAAwB,CAACtB,KAAD,EAAQ;AACrC,WAAO;AACLA,MAAAA;AADK,KAAP;AAGD;;AACDwB,EAAAA,iBAAiB,CAACxB,KAAD,EAAQyB,SAAR,EAAmB;AAClCZ,IAAAA,OAAO,CAACb,KAAR,CAAc,kDAAd,EAAkEA,KAAlE,EAAyEyB,SAAzE;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI;AACFE,MAAAA,QADE;AAEFK,MAAAA,YAFE;AAGF4H,MAAAA;AAHE,QAIA,KAAKzI,KAJT;AAKA,QAAI+I,OAAO,GAAG,IAAd;AACA,QAAIhK,MAAM,GAAG6J,iBAAiB,CAACI,OAA/B;;AACA,QAAI,EAAEP,OAAO,YAAYK,OAArB,CAAJ,EAAmC;AACjC;AACA/J,MAAAA,MAAM,GAAG6J,iBAAiB,CAACK,OAA3B;AACAF,MAAAA,OAAO,GAAGD,OAAO,CAACL,OAAR,EAAV;AACAlR,MAAAA,MAAM,CAAC2R,cAAP,CAAsBH,OAAtB,EAA+B,UAA/B,EAA2C;AACzCvD,QAAAA,GAAG,EAAE,MAAM;AAD8B,OAA3C;AAGAjO,MAAAA,MAAM,CAAC2R,cAAP,CAAsBH,OAAtB,EAA+B,OAA/B,EAAwC;AACtCvD,QAAAA,GAAG,EAAE,MAAMiD;AAD2B,OAAxC;AAGD,KAVD,MAUO,IAAI,KAAKrM,KAAL,CAAWwC,KAAf,EAAsB;AAC3B;AACAG,MAAAA,MAAM,GAAG6J,iBAAiB,CAAChK,KAA3B;AACA,UAAIuK,WAAW,GAAG,KAAK/M,KAAL,CAAWwC,KAA7B;AACAmK,MAAAA,OAAO,GAAGD,OAAO,CAACM,MAAR,GAAiBC,KAAjB,CAAuB,MAAM,CAAE,CAA/B,CAAV,CAJ2B,CAIiB;;AAC5C9R,MAAAA,MAAM,CAAC2R,cAAP,CAAsBH,OAAtB,EAA+B,UAA/B,EAA2C;AACzCvD,QAAAA,GAAG,EAAE,MAAM;AAD8B,OAA3C;AAGAjO,MAAAA,MAAM,CAAC2R,cAAP,CAAsBH,OAAtB,EAA+B,QAA/B,EAAyC;AACvCvD,QAAAA,GAAG,EAAE,MAAM2D;AAD4B,OAAzC;AAGD,KAXM,MAWA,IAAIV,OAAO,CAACa,QAAZ,EAAsB;AAC3B;AACAP,MAAAA,OAAO,GAAGN,OAAV;AACA1J,MAAAA,MAAM,GAAGgK,OAAO,CAAC1E,MAAR,KAAmBhG,SAAnB,GAA+BuK,iBAAiB,CAAChK,KAAjD,GAAyDmK,OAAO,CAAC5E,KAAR,KAAkB9F,SAAlB,GAA8BuK,iBAAiB,CAACK,OAAhD,GAA0DL,iBAAiB,CAACI,OAA9I;AACD,KAJM,MAIA;AACL;AACAjK,MAAAA,MAAM,GAAG6J,iBAAiB,CAACI,OAA3B;AACAzR,MAAAA,MAAM,CAAC2R,cAAP,CAAsBT,OAAtB,EAA+B,UAA/B,EAA2C;AACzCjD,QAAAA,GAAG,EAAE,MAAM;AAD8B,OAA3C;AAGAuD,MAAAA,OAAO,GAAGN,OAAO,CAACc,IAAR,CAAalG,IAAI,IAAI9L,MAAM,CAAC2R,cAAP,CAAsBT,OAAtB,EAA+B,OAA/B,EAAwC;AACrEjD,QAAAA,GAAG,EAAE,MAAMnC;AAD0D,OAAxC,CAArB,EAENzE,KAAK,IAAIrH,MAAM,CAAC2R,cAAP,CAAsBT,OAAtB,EAA+B,QAA/B,EAAyC;AACpDjD,QAAAA,GAAG,EAAE,MAAM5G;AADyC,OAAzC,CAFH,CAAV;AAKD;;AACD,QAAIG,MAAM,KAAK6J,iBAAiB,CAAChK,KAA7B,IAAsCmK,OAAO,CAAC1E,MAAR,YAA0BzN,oBAApE,EAA0F;AACxF;AACA,YAAMiS,mBAAN;AACD;;AACD,QAAI9J,MAAM,KAAK6J,iBAAiB,CAAChK,KAA7B,IAAsC,CAACiC,YAA3C,EAAyD;AACvD;AACA,YAAMkI,OAAO,CAAC1E,MAAd;AACD;;AACD,QAAItF,MAAM,KAAK6J,iBAAiB,CAAChK,KAAjC,EAAwC;AACtC;AACA,aAAO,aAAa9I,KAAK,CAAC2G,aAAN,CAAoB9D,YAAY,CAAC+D,QAAjC,EAA2C;AAC7DC,QAAAA,KAAK,EAAEoM,OADsD;AAE7DvI,QAAAA,QAAQ,EAAEK;AAFmD,OAA3C,CAApB;AAID;;AACD,QAAI9B,MAAM,KAAK6J,iBAAiB,CAACK,OAAjC,EAA0C;AACxC;AACA,aAAO,aAAanT,KAAK,CAAC2G,aAAN,CAAoB9D,YAAY,CAAC+D,QAAjC,EAA2C;AAC7DC,QAAAA,KAAK,EAAEoM,OADsD;AAE7DvI,QAAAA,QAAQ,EAAEA;AAFmD,OAA3C,CAApB;AAID,KAlEM,CAoEP;;;AACA,UAAMuI,OAAN;AACD;;AArF8C;AAwFjD;AACA;AACA;AACA;;;AACA,SAASJ,YAAT,CAAsBa,KAAtB,EAA6B;AAC3B,MAAI;AACFhJ,IAAAA;AADE,MAEAgJ,KAFJ;AAGA,MAAInG,IAAI,GAAGa,aAAa,EAAxB;AACA,MAAIuF,QAAQ,GAAG,OAAOjJ,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC6C,IAAD,CAAzC,GAAkD7C,QAAjE;AACA,SAAO,aAAa1K,KAAK,CAAC2G,aAAN,CAAoB3G,KAAK,CAAC4J,QAA1B,EAAoC,IAApC,EAA0C+J,QAA1C,CAApB;AACD,C,CAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASnB,wBAAT,CAAkC9H,QAAlC,EAA4C7C,UAA5C,EAAwD;AACtD,MAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD;;AACD,MAAIV,MAAM,GAAG,EAAb;AACAnH,EAAAA,KAAK,CAAC4T,QAAN,CAAeC,OAAf,CAAuBnJ,QAAvB,EAAiC,CAACpC,OAAD,EAAUwD,KAAV,KAAoB;AACnD,QAAI,EAAE,aAAa9L,KAAK,CAAC8T,cAAN,CAAqBxL,OAArB,CAAnB,EAAkD;AAChD;AACA;AACA;AACD;;AACD,QAAIyL,QAAQ,GAAG,CAAC,GAAGlM,UAAJ,EAAgBiE,KAAhB,CAAf;;AACA,QAAIxD,OAAO,CAAC0L,IAAR,KAAiBhU,KAAK,CAAC4J,QAA3B,EAAqC;AACnC;AACAzC,MAAAA,MAAM,CAACd,IAAP,CAAYhE,KAAZ,CAAkB8E,MAAlB,EAA0BqL,wBAAwB,CAAClK,OAAO,CAAC4B,KAAR,CAAcQ,QAAf,EAAyBqJ,QAAzB,CAAlD;AACA;AACD;;AACD,MAAEzL,OAAO,CAAC0L,IAAR,KAAiBnC,KAAnB,IAA4BrP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,OAAO,OAAOqI,OAAO,CAAC0L,IAAf,KAAwB,QAAxB,GAAmC1L,OAAO,CAAC0L,IAA3C,GAAkD1L,OAAO,CAAC0L,IAAR,CAAaC,IAAtE,IAA8E,wGAAtF,CAAxD,GAA0PhU,gBAAgB,CAAC,KAAD,CAAtS,GAAgT,KAAK,CAArT;AACA,MAAE,CAACqI,OAAO,CAAC4B,KAAR,CAAc4B,KAAf,IAAwB,CAACxD,OAAO,CAAC4B,KAAR,CAAcQ,QAAzC,IAAqDlI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzC,gBAAgB,CAAC,KAAD,EAAQ,0CAAR,CAAxD,GAA8GA,gBAAgB,CAAC,KAAD,CAAnL,GAA6L,KAAK,CAAlM;AACA,QAAI2H,KAAK,GAAG;AACVsD,MAAAA,EAAE,EAAE5C,OAAO,CAAC4B,KAAR,CAAcgB,EAAd,IAAoB6I,QAAQ,CAACrI,IAAT,CAAc,GAAd,CADd;AAEVwI,MAAAA,aAAa,EAAE5L,OAAO,CAAC4B,KAAR,CAAcgK,aAFnB;AAGV5L,MAAAA,OAAO,EAAEA,OAAO,CAAC4B,KAAR,CAAc5B,OAHb;AAIVE,MAAAA,SAAS,EAAEF,OAAO,CAAC4B,KAAR,CAAc1B,SAJf;AAKVsD,MAAAA,KAAK,EAAExD,OAAO,CAAC4B,KAAR,CAAc4B,KALX;AAMV5F,MAAAA,IAAI,EAAEoC,OAAO,CAAC4B,KAAR,CAAchE,IANV;AAOViO,MAAAA,MAAM,EAAE7L,OAAO,CAAC4B,KAAR,CAAciK,MAPZ;AAQV5C,MAAAA,MAAM,EAAEjJ,OAAO,CAAC4B,KAAR,CAAcqH,MARZ;AASVxG,MAAAA,YAAY,EAAEzC,OAAO,CAAC4B,KAAR,CAAca,YATlB;AAUVC,MAAAA,aAAa,EAAE1C,OAAO,CAAC4B,KAAR,CAAcc,aAVnB;AAWVoJ,MAAAA,gBAAgB,EAAE9L,OAAO,CAAC4B,KAAR,CAAcc,aAAd,IAA+B,IAA/B,IAAuC1C,OAAO,CAAC4B,KAAR,CAAca,YAAd,IAA8B,IAX7E;AAYVsJ,MAAAA,gBAAgB,EAAE/L,OAAO,CAAC4B,KAAR,CAAcmK,gBAZtB;AAaV7G,MAAAA,MAAM,EAAElF,OAAO,CAAC4B,KAAR,CAAcsD,MAbZ;AAcV8G,MAAAA,IAAI,EAAEhM,OAAO,CAAC4B,KAAR,CAAcoK;AAdV,KAAZ;;AAgBA,QAAIhM,OAAO,CAAC4B,KAAR,CAAcQ,QAAlB,EAA4B;AAC1B9C,MAAAA,KAAK,CAAC8C,QAAN,GAAiB8H,wBAAwB,CAAClK,OAAO,CAAC4B,KAAR,CAAcQ,QAAf,EAAyBqJ,QAAzB,CAAzC;AACD;;AACD5M,IAAAA,MAAM,CAACd,IAAP,CAAYuB,KAAZ;AACD,GAlCD;AAmCA,SAAOT,MAAP;AACD;AAED;AACA;AACA;;;AACA,SAASoN,aAAT,CAAuBrR,OAAvB,EAAgC;AAC9B,SAAOwF,cAAc,CAACxF,OAAD,CAArB;AACD;;AAED,SAASsR,kBAAT,CAA4B5M,KAA5B,EAAmC;AACjC,MAAI6M,OAAO,GAAG;AACZ;AACA;AACAL,IAAAA,gBAAgB,EAAExM,KAAK,CAACoD,aAAN,IAAuB,IAAvB,IAA+BpD,KAAK,CAACmD,YAAN,IAAsB;AAH3D,GAAd;;AAKA,MAAInD,KAAK,CAACY,SAAV,EAAqB;AACnB,QAAIhG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIkF,KAAK,CAACU,OAAV,EAAmB;AACjB9F,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC,KAAD,EAAQ,2EAA2E,2BAAnF,CAAtD,GAAwK,KAAK,CAA7K;AACD;AACF;;AACDoB,IAAAA,MAAM,CAACC,MAAP,CAAc+S,OAAd,EAAuB;AACrBnM,MAAAA,OAAO,EAAE,aAAatI,KAAK,CAAC2G,aAAN,CAAoBiB,KAAK,CAACY,SAA1B,CADD;AAErBA,MAAAA,SAAS,EAAED;AAFU,KAAvB;AAID;;AACD,MAAIX,KAAK,CAACoD,aAAV,EAAyB;AACvB,QAAIxI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIkF,KAAK,CAACmD,YAAV,EAAwB;AACtBvI,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrC,cAAc,CAAC,KAAD,EAAQ,oFAAoF,+BAA5F,CAAtD,GAAqL,KAAK,CAA1L;AACD;AACF;;AACDoB,IAAAA,MAAM,CAACC,MAAP,CAAc+S,OAAd,EAAuB;AACrB1J,MAAAA,YAAY,EAAE,aAAa/K,KAAK,CAAC2G,aAAN,CAAoBiB,KAAK,CAACoD,aAA1B,CADN;AAErBA,MAAAA,aAAa,EAAEzC;AAFM,KAAvB;AAID;;AACD,SAAOkM,OAAP;AACD;;AACD,SAASC,kBAAT,CAA4BvN,MAA5B,EAAoCuJ,IAApC,EAA0C;AACxC,SAAO3P,YAAY,CAAC;AAClB2C,IAAAA,QAAQ,EAAEgN,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAAChN,QADrB;AAElByM,IAAAA,MAAM,EAAE3O,QAAQ,CAAC,EAAD,EAAKkP,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACP,MAAlC,EAA0C;AACxDwE,MAAAA,kBAAkB,EAAE;AADoC,KAA1C,CAFE;AAKlBrD,IAAAA,OAAO,EAAEzQ,mBAAmB,CAAC;AAC3BqQ,MAAAA,cAAc,EAAER,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACQ,cADlB;AAE3BC,MAAAA,YAAY,EAAET,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACS;AAFhB,KAAD,CALV;AASlByD,IAAAA,aAAa,EAAElE,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACkE,aAT1B;AAUlBzN,IAAAA,MAVkB;AAWlBqN,IAAAA;AAXkB,GAAD,CAAZ,CAYJK,UAZI,EAAP;AAaD;;AAED,SAASpC,KAAT,EAAgBzB,YAAhB,EAA8BS,QAA9B,EAAwCG,MAAxC,EAAgDC,KAAhD,EAAuDjB,MAAvD,EAA+DX,cAA/D,EAA+EqC,MAA/E,EAAuFhQ,iBAAiB,IAAIwS,wBAA5G,EAAsIlS,sBAAsB,IAAImS,6BAAhK,EAA+LhS,eAAe,IAAIiS,sBAAlN,EAA0OlS,iBAAiB,IAAImS,wBAA/P,EAAyRjS,YAAY,IAAIkS,mBAAzS,EAA8TV,kBAAkB,IAAIW,yBAApV,EAA+WxI,UAAU,IAAIyI,iBAA7X,EAAgZ/N,aAAa,IAAIgO,oBAAja,EAAubX,kBAAvb,EAA2clC,wBAA3c,EAAqeA,wBAAwB,IAAI8C,wBAAjgB,EAA2hBf,aAA3hB,EAA0iB9F,UAAU,IAAI8G,mBAAxjB,EAA6kBzH,aAA7kB,EAA4lBQ,aAA5lB,EAA2mBF,aAA3mB,EAA0nB/K,OAA1nB,EAAmoBI,kBAAnoB,EAAupBgK,aAAvpB,EAAsqBtJ,WAAtqB,EAAmrBI,QAAnrB,EAA6rB6I,UAA7rB,EAAysBpI,WAAzsB,EAAstB6H,aAAttB,EAAquBxI,iBAAruB,EAAwvBoC,SAAxvB,EAAmwBD,gBAAnwB,EAAqxBM,SAArxB,EAAgyB9C,eAAhyB,EAAizBgJ,cAAjzB,EAAi0BjE,aAAj0B,EAAg1B6E,kBAAh1B,EAAo2B1G,SAAp2B","names":["DataRouterContext","React","createContext","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","isDataRoute","RouteErrorContext","useHref","to","_temp","relative","useInRouterContext","process","invariant","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","navigateEffectWarning","useIsomorphicLayoutEffect","cb","isStatic","static","useLayoutEffect","useNavigate","useNavigateStable","useNavigateUnstable","dataRouterContext","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","Provider","value","useParams","routeMatch","length","params","_temp2","useRoutes","routes","locationArg","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","_parsedLocationArg$pa","startsWith","remainingPathname","slice","matchRoutes","element","undefined","Component","renderedMatches","_renderMatches","Object","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorComponent","error","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","console","style","fontStyle","defaultErrorElement","RenderErrorBoundary","constructor","props","revalidation","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","children","component","RenderedRoute","_ref","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","id","_dataRouterState","errors","_dataRouterState2","errorIndex","findIndex","m","keys","join","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","_state$errors","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","blockerKey","setBlockerKey","useState","blockerFunction","arg","currentLocation","nextLocation","historyAction","stripBasename","useEffect","String","deleteBlocker","getBlocker","blockers","has","get","IDLE_BLOCKER","UseNavigateStable","_extends","fromRouteId","alreadyWarned","cond","START_TRANSITION","startTransitionImpl","RouterProvider","fallbackElement","future","setStateImpl","v7_startTransition","setState","newState","subscribe","n","opts","preventScrollReset","Router","initialized","DataRoutes","_ref2","MemoryRouter","_ref3","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","action","listen","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","resolve","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","Promise","promise","pending","success","defineProperty","renderError","reject","catch","_tracked","then","AbortedDeferredError","_ref8","toRender","Children","forEach","isValidElement","treePath","type","Fragment","apply","name","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","lazy","renderMatches","mapRouteProperties","updates","createElement","createMemoryRouter","createRouter","v7_prependBasename","hydrationData","initialize"],"sources":["D:\\Роксолана\\IT\\Goit\\phonebook\\node_modules\\react-router\\lib\\context.ts","D:\\Роксолана\\IT\\Goit\\phonebook\\node_modules\\react-router\\lib\\hooks.tsx","D:\\Роксолана\\IT\\Goit\\phonebook\\node_modules\\react-router\\lib\\components.tsx","D:\\Роксолана\\IT\\Goit\\phonebook\\node_modules\\react-router\\index.ts"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n"]},"metadata":{},"sourceType":"module"}