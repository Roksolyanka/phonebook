{"ast":null,"code":"import{Notify}from'notiflix';export const getCurrentYear=()=>new Date().getFullYear();const isDuplicateName=(contacts,name,editingContact)=>contacts.some(contact=>contact.name===name&&editingContact!==contact);const isDuplicateNumber=(contacts,number,editingContact)=>contacts.some(contact=>contact.number===number&&editingContact!==contact);export const duplicateNameNotification=(contacts,name,editingContact)=>isDuplicateName(contacts,name,editingContact)?(Notify.info(\"Contact with name \".concat(name,\" already exists!\")),false):true;export const duplicateNumberNotification=(contacts,number,editingContact)=>isDuplicateNumber(contacts,number,editingContact)?(Notify.info(\"Contact with number \".concat(number,\" already exists!\")),false):true;export const findItem=(arr,searchValue,filter)=>{const normalizedFilter=filter.toLowerCase();return arr.filter(item=>item[searchValue].toLowerCase().includes(normalizedFilter));};","map":{"version":3,"names":["Notify","getCurrentYear","Date","getFullYear","isDuplicateName","contacts","name","editingContact","some","contact","isDuplicateNumber","number","duplicateNameNotification","info","concat","duplicateNumberNotification","findItem","arr","searchValue","filter","normalizedFilter","toLowerCase","item","includes"],"sources":["D:/Роксолана/IT/Goit/phonebook/src/helpers/helper.js"],"sourcesContent":["import { Notify } from 'notiflix';\r\n\r\nexport const getCurrentYear = () => new Date().getFullYear();\r\n\r\nconst isDuplicateName = (contacts, name, editingContact) =>\r\n  contacts.some(contact => contact.name === name && editingContact !== contact);\r\n\r\nconst isDuplicateNumber = (contacts, number, editingContact) =>\r\n  contacts.some(\r\n    contact => contact.number === number && editingContact !== contact\r\n  );\r\n\r\nexport const duplicateNameNotification = (contacts, name, editingContact) =>\r\n  isDuplicateName(contacts, name, editingContact)\r\n    ? (Notify.info(`Contact with name ${name} already exists!`), false)\r\n    : true;\r\n\r\nexport const duplicateNumberNotification = (contacts, number, editingContact) =>\r\n  isDuplicateNumber(contacts, number, editingContact)\r\n    ? (Notify.info(`Contact with number ${number} already exists!`), false)\r\n    : true;\r\n\r\nexport const findItem = (arr, searchValue, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return arr.filter(item =>\r\n    item[searchValue].toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,UAAU,CAEjC,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAE5D,KAAM,CAAAC,eAAe,CAAGA,CAACC,QAAQ,CAAEC,IAAI,CAAEC,cAAc,GACrDF,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACH,IAAI,GAAKA,IAAI,EAAIC,cAAc,GAAKE,OAAO,CAAC,CAE/E,KAAM,CAAAC,iBAAiB,CAAGA,CAACL,QAAQ,CAAEM,MAAM,CAAEJ,cAAc,GACzDF,QAAQ,CAACG,IAAI,CACXC,OAAO,EAAIA,OAAO,CAACE,MAAM,GAAKA,MAAM,EAAIJ,cAAc,GAAKE,OAC7D,CAAC,CAEH,MAAO,MAAM,CAAAG,yBAAyB,CAAGA,CAACP,QAAQ,CAAEC,IAAI,CAAEC,cAAc,GACtEH,eAAe,CAACC,QAAQ,CAAEC,IAAI,CAAEC,cAAc,CAAC,EAC1CP,MAAM,CAACa,IAAI,sBAAAC,MAAA,CAAsBR,IAAI,oBAAkB,CAAC,CAAE,KAAK,EAChE,IAAI,CAEV,MAAO,MAAM,CAAAS,2BAA2B,CAAGA,CAACV,QAAQ,CAAEM,MAAM,CAAEJ,cAAc,GAC1EG,iBAAiB,CAACL,QAAQ,CAAEM,MAAM,CAAEJ,cAAc,CAAC,EAC9CP,MAAM,CAACa,IAAI,wBAAAC,MAAA,CAAwBH,MAAM,oBAAkB,CAAC,CAAE,KAAK,EACpE,IAAI,CAEV,MAAO,MAAM,CAAAK,QAAQ,CAAGA,CAACC,GAAG,CAAEC,WAAW,CAAEC,MAAM,GAAK,CACpD,KAAM,CAAAC,gBAAgB,CAAGD,MAAM,CAACE,WAAW,CAAC,CAAC,CAC7C,MAAO,CAAAJ,GAAG,CAACE,MAAM,CAACG,IAAI,EACpBA,IAAI,CAACJ,WAAW,CAAC,CAACG,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,gBAAgB,CAC3D,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}