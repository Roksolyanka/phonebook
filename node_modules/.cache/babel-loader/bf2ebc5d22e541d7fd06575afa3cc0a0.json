{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { loginUserThunk, logoutUserThunk, refreshUserThunk, registerUserThunk } from './operations';\nimport Notiflix from 'notiflix';\nconst initialState = {\n  isLoading: false,\n  error: null,\n  userData: null,\n  token: null,\n  authentificated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(registerUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(registerUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(registerUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    }) // -----------------------------LOGIN-----------------------------------\n    .addCase(loginUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(loginUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(loginUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n      Notiflix.Notify.failure('Login failed. Please check your credentials.');\n    }) // -----------------------------REFRESH-----------------------------------\n    .addCase(refreshUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(refreshUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload;\n    }).addCase(refreshUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    }) // -----------------------------LOGOUT-----------------------------------\n    .addCase(logoutUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(logoutUserThunk.fulfilled, state => {\n      state.isLoading = false;\n      state.authentificated = false;\n      state.userData = null;\n      state.token = null;\n    }).addCase(logoutUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"sources":["D:/Роксолана/IT/Goit/phonebook/src/redux/authReducer.js"],"names":["createSlice","loginUserThunk","logoutUserThunk","refreshUserThunk","registerUserThunk","Notiflix","initialState","isLoading","error","userData","token","authentificated","authSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","user","rejected","message","Notify","failure","authReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  loginUserThunk,\r\n  logoutUserThunk,\r\n  refreshUserThunk,\r\n  registerUserThunk,\r\n} from './operations';\r\n\r\nimport Notiflix from 'notiflix';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  userData: null,\r\n  token: null,\r\n  authentificated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(registerUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(registerUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(registerUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // -----------------------------LOGIN-----------------------------------\r\n\r\n      .addCase(loginUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(loginUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(loginUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n        Notiflix.Notify.failure(\r\n          'Login failed. Please check your credentials.'\r\n        );\r\n      })\r\n\r\n      // -----------------------------REFRESH-----------------------------------\r\n\r\n      .addCase(refreshUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(refreshUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload;\r\n      })\r\n      .addCase(refreshUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // -----------------------------LOGOUT-----------------------------------\r\n\r\n      .addCase(logoutUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutUserThunk.fulfilled, state => {\r\n        state.isLoading = false;\r\n        state.authentificated = false;\r\n        state.userData = null;\r\n        state.token = null;\r\n      })\r\n      .addCase(logoutUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;"]},"metadata":{},"sourceType":"module"}