{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addContactsThunk, deleteContactsThunk, requestContactsThunk } from './contactsOperations';\nconst initialState = {\n  contacts: null,\n  isLoading: false,\n  error: null,\n  filter: ''\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    setFilter: (state, action) => {\n      state.filter = action.payload;\n    }\n  },\n  extraReducers: builder => builder.addCase(requestContactsThunk.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(requestContactsThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.contacts = action.payload;\n  }).addCase(requestContactsThunk.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  }) //   ---------------------------ADD NEW CONTACT--------------------------------\n  .addCase(addContactsThunk.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(addContactsThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.contacts.push(action.payload);\n  }).addCase(addContactsThunk.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  }) //   ---------------------------DELETE CONTACT--------------------------------\n  .addCase(deleteContactsThunk.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(deleteContactsThunk.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.contacts = state.contacts.filter(contact => contact.id !== action.payload.id);\n  }).addCase(deleteContactsThunk.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload;\n  })\n});\nexport const {\n  setFilter\n} = contactsSlice.actions;\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["D:/Роксолана/IT/Goit/phonebook/src/redux/contactsReducer.js"],"names":["createSlice","addContactsThunk","deleteContactsThunk","requestContactsThunk","initialState","contacts","isLoading","error","filter","contactsSlice","name","reducers","setFilter","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","push","contact","id","actions","contactsReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactsThunk,\r\n  deleteContactsThunk,\r\n  requestContactsThunk,\r\n} from './contactsOperations';\r\n\r\nconst initialState = {\r\n  contacts: null,\r\n  isLoading: false,\r\n  error: null,\r\n  filter: '',\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    setFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n  },\r\n  extraReducers: builder =>\r\n    builder\r\n      .addCase(requestContactsThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(requestContactsThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.contacts = action.payload;\r\n      })\r\n      .addCase(requestContactsThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      //   ---------------------------ADD NEW CONTACT--------------------------------\r\n\r\n      .addCase(addContactsThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(addContactsThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.contacts.push(action.payload);\r\n      })\r\n      .addCase(addContactsThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      //   ---------------------------DELETE CONTACT--------------------------------\r\n\r\n      .addCase(deleteContactsThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(deleteContactsThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.contacts = state.contacts.filter(\r\n          contact => contact.id !== action.payload.id\r\n        );\r\n      })\r\n      .addCase(deleteContactsThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      }),\r\n});\r\n\r\nexport const { setFilter } = contactsSlice.actions;\r\n\r\nexport const contactsReducer = contactsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}