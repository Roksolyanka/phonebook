{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { Notify } from 'notiflix';\nimport { loginUserThunk, logoutUserThunk, refreshUserThunk, registerUserThunk } from './operations';\nconst initialState = {\n  isLoading: false,\n  error: null,\n  userData: null,\n  token: null,\n  authentificated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(registerUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(registerUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(registerUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n      console.error('Register rejected:', action.error.message);\n    })\n\n    // -----------------------------LOGIN-----------------------------------\n    .addCase(loginUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(loginUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload.user;\n      state.token = action.payload.token;\n    }).addCase(loginUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n      Notify.failure('Login failed. Please check your credentials.');\n    })\n\n    // -----------------------------REFRESH-----------------------------------\n    .addCase(refreshUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n      state.authentificated = false;\n    }).addCase(refreshUserThunk.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.authentificated = true;\n      state.userData = action.payload;\n    }).addCase(refreshUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error.message;\n    })\n\n    // -----------------------------LOGOUT-----------------------------------\n    .addCase(logoutUserThunk.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(logoutUserThunk.fulfilled, state => {\n      state.isLoading = false;\n      state.authentificated = false;\n      state.userData = null;\n      state.token = null;\n    }).addCase(logoutUserThunk.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","Notify","loginUserThunk","logoutUserThunk","refreshUserThunk","registerUserThunk","initialState","isLoading","error","userData","token","authentificated","authSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","user","rejected","message","console","failure","authReducer","reducer"],"sources":["D:/Роксолана/IT/Goit/phonebook/src/redux/auth/reducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { Notify } from 'notiflix';\r\n\r\nimport {\r\n  loginUserThunk,\r\n  logoutUserThunk,\r\n  refreshUserThunk,\r\n  registerUserThunk,\r\n} from './operations';\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  userData: null,\r\n  token: null,\r\n  authentificated: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(registerUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(registerUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(registerUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n        console.error('Register rejected:', action.error.message);\r\n      })\r\n\r\n      // -----------------------------LOGIN-----------------------------------\r\n\r\n      .addCase(loginUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(loginUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload.user;\r\n        state.token = action.payload.token;\r\n      })\r\n      .addCase(loginUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n        Notify.failure('Login failed. Please check your credentials.');\r\n      })\r\n\r\n      // -----------------------------REFRESH-----------------------------------\r\n\r\n      .addCase(refreshUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n        state.authentificated = false;\r\n      })\r\n      .addCase(refreshUserThunk.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.authentificated = true;\r\n        state.userData = action.payload;\r\n      })\r\n      .addCase(refreshUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // -----------------------------LOGOUT-----------------------------------\r\n\r\n      .addCase(logoutUserThunk.pending, state => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logoutUserThunk.fulfilled, state => {\r\n        state.isLoading = false;\r\n        state.authentificated = false;\r\n        state.userData = null;\r\n        state.token = null;\r\n      })\r\n      .addCase(logoutUserThunk.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}